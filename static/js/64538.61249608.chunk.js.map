{"version":3,"file":"static/js/64538.61249608.chunk.js","mappings":"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","sources":["commons/controlBar/ControlBarAutorunButtons.tsx","commons/controlBar/ControlBarChapterSelect.tsx","commons/mobileWorkspace/DraggableRepl.tsx","commons/mobileWorkspace/MobileKeyboard.tsx","commons/mobileWorkspace/mobileSideContent/MobileControlBar.tsx","commons/mobileWorkspace/mobileSideContent/MobileSideContent.tsx","commons/mobileWorkspace/MobileWorkspace.tsx","commons/sideContent/content/SideContentCseMachine.tsx","features/eventLogging/index.ts"],"sourcesContent":["import { Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\nimport { useResponsive } from '../utils/Hooks';\nimport { ControlBarRunButton } from './ControlBarRunButton';\n\ntype ControlBarAutorunButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDebuggerPause: () => void;\n  handleDebuggerReset: () => void;\n  handleDebuggerResume: () => void;\n  handleEditorEval: () => void;\n  handleInterruptEval: () => void;\n  handleToggleEditorAutorun?: () => void;\n};\n\ntype StateProps = {\n  isEntrypointFileDefined: boolean;\n  isDebugging: boolean;\n  isEditorAutorun?: boolean;\n  isRunning: boolean;\n  key: string;\n  autorunDisabled?: boolean;\n  pauseDisabled?: boolean;\n  sourceChapter?: number;\n};\n\nexport const ControlBarAutorunButtons: React.FC<ControlBarAutorunButtonProps> = props => {\n  const showRunButton = !props.isDebugging && (\n    <ControlBarRunButton\n      handleEditorEval={props.handleEditorEval}\n      isEntrypointFileDefined={props.isEntrypointFileDefined}\n      // Neon Green: #39FF14\n      color={props.isRunning ? '#39FF14' : undefined}\n      className={props.isRunning ? 'WaitingCursor' : undefined}\n      key=\"run\"\n    />\n  );\n\n  const showAutoRunIndicator = props.isEditorAutorun && (\n    <ControlButton label=\"Auto\" icon={IconNames.AUTOMATIC_UPDATES} />\n  );\n\n  // stop button does not do anything due to the blocking nature of eval methods (e.g. runInContext)\n  // to prevent \"flickering\", we will just disable Stop Button for now\n  const showStopButton = false && (\n    <ControlButton label=\"Stop\" icon={IconNames.STOP} onClick={props.handleInterruptEval} />\n  );\n\n  const showDebuggerPause = !props.pauseDisabled && props.isRunning && !props.isDebugging && (\n    <ControlButton label=\"Pause\" icon={IconNames.STOP} onClick={props.handleDebuggerPause} />\n  );\n\n  const showDebuggerResume = !props.isRunning && props.isDebugging && (\n    <ControlButton\n      label=\"Resume\"\n      icon={IconNames.CHEVRON_RIGHT}\n      onClick={props.handleDebuggerResume}\n    />\n  );\n\n  const showDebuggerReset = (label: string) =>\n    props.isDebugging && (\n      <ControlButton label={label} icon={IconNames.STOP} onClick={props.handleDebuggerReset} />\n    );\n\n  const { isMobileBreakpoint } = useResponsive();\n\n  return isMobileBreakpoint ? (\n    <>\n      {showStopButton}\n      {showDebuggerPause}\n      {showDebuggerResume}\n      {showDebuggerReset('Stop')}\n    </>\n  ) : (\n    <>\n      {!props.autorunDisabled && (\n        <div className=\"Switch\">\n          <Switch\n            label=\"\"\n            checked={props.isEditorAutorun}\n            onChange={props.handleToggleEditorAutorun}\n          />\n        </div>\n      )}\n      {showAutoRunIndicator || showStopButton || showRunButton}\n      {showDebuggerPause}\n      {showDebuggerResume}\n      {showDebuggerReset('Stop Debugger')}\n    </>\n  );\n};\n","import { Button, Menu, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { ItemListRenderer, ItemRenderer, Select } from '@blueprintjs/select';\nimport { Chapter, Variant } from '@seancze/js-slang/dist/types';\nimport React from 'react';\n\nimport {\n  fullJSLanguage,\n  fullTSLanguage,\n  goLanguage,\n  htmlLanguage,\n  pyLanguages,\n  SALanguage,\n  schemeLanguages,\n  sourceLanguages,\n  styliseSublanguage\n} from '../application/ApplicationTypes';\nimport Constants from '../utils/Constants';\nimport { useTypedSelector } from '../utils/Hooks';\n\ntype ControlBarChapterSelectProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChapterSelect?: (i: SALanguage, e?: React.SyntheticEvent<HTMLElement>) => void;\n};\n\ntype StateProps = {\n  isFolderModeEnabled: boolean;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  disabled?: boolean;\n};\n\nconst chapterListRenderer: ItemListRenderer<SALanguage> = ({\n  itemsParentRef,\n  renderItem,\n  items\n}) => {\n  const defaultChoices = items.filter(({ variant }) => variant === Variant.DEFAULT);\n  const variantChoices = items.filter(({ variant }) => variant !== Variant.DEFAULT);\n\n  return (\n    <Menu ulRef={itemsParentRef} style={{ display: 'flex', flexDirection: 'column' }}>\n      {defaultChoices.map(renderItem)}\n      {variantChoices.length > 0 && (\n        <MenuItem key=\"variant-menu\" text=\"Variants\" icon=\"cog\">\n          {variantChoices.map(renderItem)}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nconst chapterRenderer: (isFolderModeEnabled: boolean) => ItemRenderer<SALanguage> =\n  (isFolderModeEnabled: boolean) =>\n  (lang, { handleClick }) => {\n    const isDisabled = isFolderModeEnabled && lang.chapter === Chapter.SOURCE_1;\n    const tooltipContent = isDisabled\n      ? 'Folder mode makes use of lists which are not available in Source 1. To switch to Source 1, disable Folder mode.'\n      : undefined;\n    return (\n      <Tooltip2\n        key={lang.displayName}\n        content={tooltipContent}\n        disabled={tooltipContent === undefined}\n      >\n        <MenuItem onClick={handleClick} text={lang.displayName} disabled={isDisabled} />\n      </Tooltip2>\n    );\n  };\n\nconst ChapterSelectComponent = Select.ofType<SALanguage>();\n\nexport const ControlBarChapterSelect: React.FC<ControlBarChapterSelectProps> = ({\n  isFolderModeEnabled,\n  sourceChapter,\n  sourceVariant,\n  handleChapterSelect = () => {},\n  disabled = false\n}) => {\n  const selectedLang = useTypedSelector(store => store.playground.languageConfig.mainLanguage);\n\n  const choices = [\n    goLanguage,\n    ...sourceLanguages,\n    // Full JS/TS version uses eval(), which is a huge security risk, so we only enable\n    // for public deployments. HTML, while sandboxed, is treated the same way to be safe.\n    // See https://github.com/source-academy/frontend/pull/2460#issuecomment-1528759912\n    ...(Constants.playgroundOnly ? [fullJSLanguage, fullTSLanguage, htmlLanguage] : []),\n    ...schemeLanguages,\n    ...pyLanguages\n  ];\n\n  return (\n    <ChapterSelectComponent\n      items={choices.filter(({ mainLanguage }) => mainLanguage === selectedLang)}\n      onItemSelect={handleChapterSelect}\n      itemRenderer={chapterRenderer(isFolderModeEnabled)}\n      itemListRenderer={chapterListRenderer}\n      filterable={false}\n      disabled={disabled}\n    >\n      <Button\n        minimal\n        text={styliseSublanguage(sourceChapter, sourceVariant)}\n        rightIcon={disabled ? null : IconNames.DOUBLE_CARET_VERTICAL}\n        disabled={disabled}\n      />\n    </ChapterSelectComponent>\n  );\n};\n","import React from 'react';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\n\nimport Repl, { ReplProps } from '../repl/Repl';\n\ntype DraggableReplProps = {\n  position: { x: number; y: number };\n  onDrag: DraggableEventHandler;\n  disabled: boolean;\n  replProps: ReplProps;\n};\n\nconst DraggableRepl: React.FC<DraggableReplProps> = (props: DraggableReplProps) => {\n  return (\n    <Draggable\n      axis=\"y\"\n      handle=\"#dragHandle\"\n      position={props.position}\n      bounds={{ top: -500, left: 0, right: 0, bottom: 0 }}\n      onDrag={props.onDrag}\n      disabled={props.disabled}\n    >\n      <div className=\"mobile-draggable\">\n        {!props.disabled ? (\n          <div className=\"handle enabled\" id=\"dragHandle\">\n            {['1', '2', '3'].map(i => (\n              <div className=\"circle\" key={i} />\n            ))}\n          </div>\n        ) : (\n          <div className=\"handle disabled\" id=\"draghandle\">\n            {['1', '2', '3'].map(i => (\n              <div className=\"circle\" key={i} />\n            ))}\n          </div>\n        )}\n        <div className=\"REPL-content\">\n          <Repl {...props.replProps} />\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default DraggableRepl;\n","import { Ace } from 'ace-builds';\nimport React from 'react';\nimport Draggable, { DraggableEvent, DraggableEventHandler } from 'react-draggable';\nimport Keyboard from 'react-simple-keyboard';\n\nexport type MobileKeyboardProps = OwnProps;\n\ntype OwnProps = {\n  targetKeyboardInput: Ace.Editor | null;\n};\n\nconst MobileKeyboard: React.FC<MobileKeyboardProps> = props => {\n  const [isKeyboardShown, setIsKeyoardShown] = React.useState(false);\n  const [buttonContent, setButtonContent] = React.useState('ᐸ');\n  const [keyboardPosition, setKeyboardPosition] = React.useState({ x: 0, y: 0 });\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const onDrag: DraggableEventHandler = (\n    e: DraggableEvent,\n    position: { x: number; y: number }\n  ): void => {\n    setKeyboardPosition(position);\n  };\n\n  const handlePreventDefault = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n  };\n\n  const handleHiding = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (isKeyboardShown) {\n      //do hiding\n      document.getElementById('mobile-keyboard-toggle')!.style.setProperty('display', 'none');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('width', '42px');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('opacity', '0.6');\n      setButtonContent('ᐸ');\n      setIsKeyoardShown(false);\n    } else {\n      //do showing\n      document.getElementById('mobile-keyboard-toggle')!.style.setProperty('display', 'flex');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('width', '99%');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('opacity', '1');\n      setButtonContent('ᐳ');\n      setIsKeyoardShown(true);\n    }\n  };\n\n  const handleRowToggle = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setSelectedIndex((selectedIndex + 1) % 3);\n    const keyboardClass = document.getElementsByClassName('simple-keyboard-shortcut');\n    Array.from(keyboardClass as HTMLCollectionOf<HTMLElement>)[0].style.top =\n      -selectedIndex * 45 + 'px';\n  };\n\n  const handleKeyPress = (button: string) => {\n    if (!props.targetKeyboardInput) {\n      return;\n    }\n    const editor = props.targetKeyboardInput;\n    if (button === '{arrowleft}') {\n      editor.navigateLeft();\n    } else if (button === '{arrowright}') {\n      editor.navigateRight();\n    } else if (button === '{bksp}') {\n      editor.remove('left');\n    } else if (button === '{tab}') {\n      editor.insert('\\t');\n    } else if (['+', '-', '*', '/', '%', '=>', '===', '&&', '||'].includes(button)) {\n      editor.insert(' ' + button + ' ');\n    } else {\n      editor.insert(button);\n    }\n  };\n\n  const keyboardProps = {\n    onKeyPress: handleKeyPress,\n    baseClass: 'simple-keyboard-shortcut',\n    layout: {\n      default: [\n        '{ } ( ) \" \\' _ => ;',\n        '{tab} && || ! < > = ===',\n        '+ - * / % // {arrowleft} {arrowright}'\n      ]\n    },\n    buttonTheme: [\n      {\n        class: 'mobile-navigation',\n        buttons: '{arrowleft} {arrowright}'\n      },\n      {\n        class: 'big-buttons',\n        buttons: '=== &&'\n      }\n    ],\n    theme: 'hg-theme-default',\n    preventMouseDownDefault: true,\n    disableCaretPositioning: false\n  };\n\n  return (\n    <Draggable\n      axis=\"y\"\n      handle=\"#floating-dragHandle\"\n      position={keyboardPosition}\n      bounds={{ top: -200, left: 0, right: 0, bottom: +200 }}\n      onDrag={onDrag}\n    >\n      <div className=\"mobile-floating-keyboard\" id=\"mobile-floating-toggle\">\n        <button\n          className=\"mobile-floating-toggle\"\n          onClick={handleHiding}\n          onMouseDown={handlePreventDefault}\n        >\n          {buttonContent}\n        </button>\n\n        <div className=\"mobile-keyboard-toggle-container\" id=\"mobile-keyboard-toggle\">\n          <div className=\"mobile-keyboard-container\">\n            <Keyboard {...keyboardProps} />\n          </div>\n          <button\n            className=\"mobile-keyboard-row-toggle\"\n            onClick={handleRowToggle}\n            onMouseDown={handlePreventDefault}\n          >\n            ⤸\n          </button>\n        </div>\n\n        <div id=\"floating-dragHandle\">:</div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default MobileKeyboard;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\n\nimport { ControlBarProps } from '../../controlBar/ControlBar';\n\nconst MobileControlBar: React.FC<ControlBarProps> = props => {\n  const controlBarMenu = (\n    <div className=\"mobile-control-bar\">\n      {props.editorButtons}\n      {props.flowButtons}\n      {props.editingWorkspaceButtons}\n    </div>\n  );\n\n  return (\n    <Popover2 content={controlBarMenu} autoFocus={false}>\n      <Button minimal icon={IconNames.COG} className=\"mobile-control-bar-button\" />\n    </Popover2>\n  );\n};\n\nexport default MobileControlBar;\n","import { Classes, Icon, Tab, Tabs } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { SideContentProps } from 'src/commons/sideContent/SideContent';\nimport { generateIconId } from 'src/commons/sideContent/SideContentHelper';\nimport SideContentProvider from 'src/commons/sideContent/SideContentProvider';\n\nimport { ControlBarProps } from '../../controlBar/ControlBar';\nimport {\n  ChangeTabsCallback,\n  SideContentLocation,\n  SideContentTab,\n  SideContentType\n} from '../../sideContent/SideContentTypes';\nimport { propsAreEqual } from '../../utils/MemoizeHelper';\nimport MobileControlBar from './MobileControlBar';\n\nexport type MobileSideContentProps = Omit<SideContentProps, 'onChange'> & {\n  onChange: ChangeTabsCallback;\n} & MobileControlBarProps;\n\ntype MobileControlBarProps = {\n  mobileControlBarProps: ControlBarProps;\n};\n\nconst renderTab = (tab: SideContentTab, isIOS: boolean) => {\n  const iconSize = 20;\n  const tabId = tab.id === undefined ? tab.label : tab.id;\n  const tabTitle: JSX.Element = (\n    <Tooltip2\n      content={tab.label}\n      onOpening={() => {\n        // Handles iOS hover requiring double taps to press the button\n        if (isIOS) {\n          document.getElementById(generateIconId(tabId))?.click();\n        }\n      }}\n    >\n      <div className=\"side-content-tooltip\" id={generateIconId(tabId)}>\n        <Icon icon={tab.iconName} iconSize={iconSize} />\n      </div>\n    </Tooltip2>\n  );\n\n  return (\n    <Tab\n      key={tabId}\n      id={tabId}\n      title={tabTitle}\n      disabled={tab.disabled}\n      className=\"side-content-tab\"\n    />\n  );\n};\n\nconst MobileSideContent: React.FC<MobileSideContentProps> = ({\n  renderActiveTabPanelOnly,\n  mobileControlBarProps,\n  onChange,\n  selectedTabId,\n  ...props\n}) => {\n  const isIOS = /iPhone|iPod/.test(navigator.platform);\n\n  /**\n   * renderedPanels is not memoized since a change in selectedTabId (when changing tabs)\n   * would force React.useMemo to recompute the nullary function anyway\n   */\n  const renderedPanels = (dynamicTabs: SideContentTab[], selectedTabId?: SideContentType) => {\n    // TODO: Fix the CSS of all the panels (e.g. subst_visualizer)\n    const renderPanel = (tab: SideContentTab, workspaceLocation?: SideContentLocation) => {\n      if (!tab.body) return;\n\n      const tabBody: JSX.Element = workspaceLocation\n        ? {\n            ...tab.body,\n            props: {\n              ...tab.body.props,\n              workspaceLocation\n            }\n          }\n        : tab.body;\n\n      // Render the other panels only when their corresponding tab is selected\n      return (\n        <div\n          className={tab.id === selectedTabId ? 'mobile-selected-panel' : 'mobile-unselected-panel'}\n          key={tab.id}\n        >\n          {tabBody}\n        </div>\n      );\n    };\n\n    return dynamicTabs.map(tab => renderPanel(tab, props.workspaceLocation));\n  };\n\n  return (\n    <SideContentProvider {...props}>\n      {({ tabs: allTabs, changeTabsCallback, selectedTab }) => (\n        <>\n          {renderedPanels(allTabs, selectedTab)}\n          <div className=\"mobile-tabs-container\">\n            <Tabs\n              id=\"mobile-side-content\"\n              onChange={changeTabsCallback}\n              renderActiveTabPanelOnly={renderActiveTabPanelOnly}\n              selectedTabId={selectedTab}\n              className={classNames(Classes.DARK, 'mobile-side-content')}\n            >\n              {allTabs.map(tab => renderTab(tab, isIOS))}\n\n              {/* Render the bottom ControlBar 'Cog' button only in the Playground or Sicp Workspace */}\n              {(props.workspaceLocation === 'playground' || props.workspaceLocation === 'sicp') && (\n                <MobileControlBar {...mobileControlBarProps} />\n              )}\n            </Tabs>\n          </div>\n        </>\n      )}\n    </SideContentProvider>\n  );\n};\n\nexport default React.memo(MobileSideContent, propsAreEqual);\n","import { FocusStyleManager } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Ace } from 'ace-builds';\nimport React from 'react';\nimport { DraggableEvent } from 'react-draggable';\nimport { useMediaQuery } from 'react-responsive';\n\nimport ControlBar from '../controlBar/ControlBar';\nimport EditorContainer, { EditorContainerProps } from '../editor/EditorContainer';\nimport McqChooser, { McqChooserProps } from '../mcqChooser/McqChooser';\nimport { Prompt } from '../ReactRouterPrompt';\nimport { ReplProps } from '../repl/Repl';\nimport { SideBarTab } from '../sideBar/SideBar';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport DraggableRepl from './DraggableRepl';\nimport MobileKeyboard from './MobileKeyboard';\nimport MobileSideContent, { MobileSideContentProps } from './mobileSideContent/MobileSideContent';\n\nexport type MobileWorkspaceProps = StateProps;\n\ntype StateProps = {\n  editorContainerProps?: EditorContainerProps; // Either editorProps or mcqProps must be provided\n  hasUnsavedChanges?: boolean; // Not used in Playground\n  mcqProps?: McqChooserProps; // Not used in Playground\n  replProps: ReplProps;\n  sideBarProps: {\n    tabs: SideBarTab[];\n  };\n  mobileSideContentProps: MobileSideContentProps;\n};\n\nconst MobileWorkspace: React.FC<MobileWorkspaceProps> = props => {\n  const isAndroid = /Android/.test(navigator.userAgent);\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n  const [draggableReplPosition, setDraggableReplPosition] = React.useState({ x: 0, y: 0 });\n\n  // For disabling draggable Repl when in stepper tab\n  const [isDraggableReplDisabled, setIsDraggableReplDisabled] = React.useState(false);\n\n  // Get rid of the focus border on blueprint components\n  FocusStyleManager.onlyShowFocusOnTabs();\n\n  // Handles the panel height when the mobile top controlbar is rendered in the Assessment Workspace\n  React.useEffect(() => {\n    if (props.mobileSideContentProps.workspaceLocation === 'assessment') {\n      document.documentElement.style.setProperty(\n        '--mobile-panel-height',\n        'calc(100% - 100px - 1.1rem)'\n      );\n    }\n\n    return () => {\n      document.documentElement.style.setProperty('--mobile-panel-height', 'calc(100% - 70px)');\n    };\n    // This effect should only trigger once during the initial rendering of the workspace\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * The following effect prevents the bottom MobileSideContent tabs from floating above the\n   * soft keyboard on Android devices. This is due to the viewport height changing when the soft\n   * keyboard is up on Android devices. IOS devices are not affected.\n   */\n  React.useEffect(() => {\n    if (isPortrait && isAndroid) {\n      document.documentElement.style.setProperty('overflow', 'auto');\n      const metaViewport = document.querySelector('meta[name=viewport]');\n      metaViewport!.setAttribute(\n        'content',\n        'height=' + window.innerHeight + ', width=device-width'\n      );\n    }\n\n    // Reset above CSS and hides draggable Repl on orientation change\n    return () => {\n      if (isAndroid) {\n        document.documentElement.style.setProperty('overflow', 'hidden');\n        const metaViewport = document.querySelector('meta[name=viewport]');\n        metaViewport!.setAttribute(\n          'content',\n          'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'\n        );\n      }\n      handleHideRepl();\n    };\n  }, [isPortrait, isAndroid]);\n\n  const [targetKeyboardInput, setTargetKeyboardInput] = React.useState<Ace.Editor | null>(null);\n\n  const clearTargetKeyboardInput = () => setTargetKeyboardInput(null);\n\n  const enableMobileKeyboardForEditor = (props: EditorContainerProps): EditorContainerProps => {\n    const onFocus = (event: any, editor?: Ace.Editor) => {\n      if (props.onFocus) {\n        props.onFocus(event, editor);\n      }\n      if (!editor) {\n        return;\n      }\n      setTargetKeyboardInput(editor);\n    };\n    const onBlur = (event: any, editor?: Ace.Editor) => {\n      if (props.onBlur) {\n        props.onBlur(event, editor);\n      }\n      clearTargetKeyboardInput();\n    };\n    return {\n      ...props,\n      onFocus,\n      onBlur\n    };\n  };\n\n  const enableMobileKeyboardForRepl = (props: ReplProps): ReplProps => {\n    const onFocus = (editor: Ace.Editor) => {\n      if (props.onFocus) {\n        props.onFocus(editor);\n      }\n      setTargetKeyboardInput(editor);\n    };\n    const onBlur = () => {\n      if (props.onBlur) {\n        props.onBlur();\n      }\n      clearTargetKeyboardInput();\n    };\n    return {\n      ...props,\n      onFocus,\n      onBlur\n    };\n  };\n\n  const createWorkspaceInput = () => {\n    if (props.editorContainerProps) {\n      const editorContainerProps = {\n        ...props.editorContainerProps\n      };\n      if (editorContainerProps.editorVariant === 'sourcecast') {\n        editorContainerProps.setDraggableReplPosition = () => handleShowRepl(-100);\n      }\n      return <EditorContainer {...enableMobileKeyboardForEditor(props.editorContainerProps)} />;\n    } else {\n      return <McqChooser {...props.mcqProps!} />;\n    }\n  };\n\n  /**\n   * The following 3 'react-draggable' handlers include the updating of CSS variable:\n   * '--mobile-repl-height'.\n   *\n   * 'position: absolute' for the 'react-draggable' component is used in conjunction with the\n   * modification of the mobile browser's meta viewport height to ensure that the draggable\n   * component (and bottom MobileSideContentTabs) remain at the bottom of the screen when the\n   * keyboard is up on Android devices. This is because viewport height changes by default when\n   * the keyboard is up on Android devices, causing unexpected UI distortions. IOS devices do\n   * not have this problem.\n   * ('position: fixed' does not work as the element would then be positioned relative to the\n   * browser window, and would still be 'pushed up' by the keyboard)\n   *\n   * Since 'position: absolute' elements take up 'full space', we have to dynamically update the\n   * height of the entire draggable component ('--mobile-repl-height') to ensure that the draggable\n   * component is 'properly closed' and does not continue to display content underneath the\n   * MobileSideContentTabs.\n   *\n   * This also ensures proper scrolling of overflowing Repl outputs inside the dynamically resizing\n   * draggable component.\n   */\n  const onDrag = (e: DraggableEvent, position: { x: number; y: number }): void => {\n    document.documentElement.style.setProperty(\n      '--mobile-repl-height',\n      Math.max(-position.y, 0) + 'px'\n    );\n    setDraggableReplPosition(position);\n  };\n\n  const handleShowRepl = (offset: number) => {\n    document.documentElement.style.setProperty('--mobile-repl-height', Math.max(-offset, 0) + 'px');\n    setDraggableReplPosition({ x: 0, y: offset });\n  };\n\n  const handleHideRepl = () => {\n    setDraggableReplPosition({ x: 0, y: 0 });\n    document.documentElement.style.setProperty('--mobile-repl-height', '0px');\n  };\n\n  const handleEditorEval = props.editorContainerProps?.handleEditorEval;\n  const handleTabChangeForRepl = React.useCallback(\n    (newTabId: SideContentType, prevTabId: SideContentType) => {\n      // Evaluate program upon pressing the run tab.\n      if (newTabId === SideContentType.mobileEditorRun) {\n        if (handleEditorEval) {\n          handleEditorEval();\n        }\n      }\n\n      // Show the REPL upon pressing the run tab if the previous tab is not listed below.\n      if (\n        newTabId === SideContentType.mobileEditorRun &&\n        !(\n          prevTabId === SideContentType.substVisualizer ||\n          prevTabId === SideContentType.autograder ||\n          prevTabId === SideContentType.testcases\n        )\n      ) {\n        handleShowRepl(-300);\n      } else {\n        handleHideRepl();\n      }\n\n      // Disable draggable REPL when on the files & stepper tab.\n      if (\n        newTabId === SideContentType.folder ||\n        newTabId === SideContentType.substVisualizer ||\n        (prevTabId === SideContentType.substVisualizer &&\n          newTabId === SideContentType.mobileEditorRun)\n      ) {\n        setIsDraggableReplDisabled(true);\n      } else {\n        setIsDraggableReplDisabled(false);\n      }\n    },\n    [handleEditorEval]\n  );\n\n  const onChange = props.mobileSideContentProps.onChange;\n  const onSideContentTabChange = React.useCallback(\n    (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      onChange(newTabId, prevTabId, event);\n      handleTabChangeForRepl(newTabId, prevTabId);\n    },\n    [handleTabChangeForRepl, onChange]\n  );\n\n  // Convert sidebar tabs with a side content tab ID into side content tabs.\n  const sideBarTabs: SideContentTab[] = props.sideBarProps.tabs.filter(tab => tab.id !== undefined);\n\n  const mobileEditorTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Editor',\n      iconName: IconNames.EDIT,\n      body: null,\n      id: SideContentType.mobileEditor\n    }),\n    []\n  );\n\n  const mobileRunTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Run',\n      iconName: IconNames.PLAY,\n      body: null,\n      id: SideContentType.mobileEditorRun\n    }),\n    []\n  );\n\n  const updatedMobileSideContentProps = React.useCallback(() => {\n    return {\n      ...props.mobileSideContentProps,\n      onChange: onSideContentTabChange,\n      tabs: {\n        beforeDynamicTabs: [\n          ...sideBarTabs,\n          mobileEditorTab,\n          ...(props.mobileSideContentProps.tabs?.beforeDynamicTabs ?? [])\n        ],\n        afterDynamicTabs: [\n          ...(props.mobileSideContentProps.tabs?.afterDynamicTabs ?? []),\n          mobileRunTab\n        ]\n      }\n    };\n  }, [\n    onSideContentTabChange,\n    mobileEditorTab,\n    mobileRunTab,\n    props.mobileSideContentProps,\n    sideBarTabs\n  ]);\n\n  const inAssessmentWorkspace =\n    props.mobileSideContentProps.workspaceLocation === 'assessment' ||\n    props.mobileSideContentProps.workspaceLocation === 'githubAssessment';\n\n  return (\n    <div className=\"workspace mobile-workspace\">\n      <Prompt\n        when={!!props.hasUnsavedChanges}\n        message={'You have changes that may not be saved. Are you sure you want to leave?'}\n      />\n\n      {/* Render the top ControlBar when it is the Assessment Workspace */}\n      {inAssessmentWorkspace && (\n        <ControlBar {...props.mobileSideContentProps.mobileControlBarProps} />\n      )}\n\n      <div>\n        <div className=\"mobile-editor-panel\">{createWorkspaceInput()}</div>\n        <MobileSideContent {...updatedMobileSideContentProps()} />\n      </div>\n\n      <DraggableRepl\n        key=\"repl\"\n        position={draggableReplPosition}\n        onDrag={onDrag}\n        disabled={isDraggableReplDisabled}\n        replProps={enableMobileKeyboardForRepl(props.replProps)}\n      />\n\n      <MobileKeyboard targetKeyboardInput={targetKeyboardInput} />\n    </div>\n  );\n};\n\nexport default MobileWorkspace;\n","import {\n  AnchorButton,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Classes,\n  Divider,\n  Slider\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport React from 'react';\nimport { HotKeys } from 'react-hotkeys';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { PlaygroundWorkspaceState } from 'src/commons/workspace/WorkspaceTypes';\nimport CseMachine from 'src/features/cseMachine/CseMachine';\nimport { CseAnimation } from 'src/features/cseMachine/CseMachineAnimation';\nimport { Layout } from 'src/features/cseMachine/CseMachineLayout';\n\nimport { OverallState } from '../../application/ApplicationTypes';\nimport { HighlightedLines } from '../../editor/EditorTypes';\nimport Constants, { Links } from '../../utils/Constants';\nimport {\n  evalEditor,\n  setEditorHighlightedLinesControl,\n  updateCurrentStep\n} from '../../workspace/WorkspaceActions';\nimport { beginAlertSideContent } from '../SideContentActions';\nimport { getLocation } from '../SideContentHelper';\nimport { NonStoryWorkspaceLocation, SideContentTab, SideContentType } from '../SideContentTypes';\n\ntype State = {\n  visualization: React.ReactNode;\n  value: number;\n  height: number;\n  width: number;\n  lastStep: boolean;\n  stepLimitExceeded: boolean;\n};\n\ntype CseMachineProps = OwnProps & StateProps & DispatchProps;\n\ntype StateProps = {\n  editorWidth?: string;\n  sideContentHeight?: number;\n  stepsTotal: number;\n  currentStep: number;\n  breakpointSteps: number[];\n  needCseUpdate: boolean;\n};\n\ntype OwnProps = {\n  workspaceLocation: NonStoryWorkspaceLocation;\n};\n\ntype DispatchProps = {\n  handleStepUpdate: (steps: number) => void;\n  handleEditorEval: () => void;\n  setEditorHighlightedLines: (\n    editorTabIndex: number,\n    newHighlightedLines: HighlightedLines[]\n  ) => void;\n  handleAlertSideContent: () => void;\n};\n\nconst cseMachineKeyMap = {\n  FIRST_STEP: 'a',\n  NEXT_STEP: 'f',\n  PREVIOUS_STEP: 'b',\n  LAST_STEP: 'e'\n};\n\nclass SideContentCseMachineBase extends React.Component<CseMachineProps, State> {\n  constructor(props: CseMachineProps) {\n    super(props);\n    this.state = {\n      visualization: null,\n      value: -1,\n      width: this.calculateWidth(props.editorWidth),\n      height: this.calculateHeight(props.sideContentHeight),\n      lastStep: false,\n      stepLimitExceeded: false\n    };\n    CseMachine.init(\n      visualization => {\n        this.setState({ visualization }, () => CseAnimation.playAnimation());\n        if (visualization) this.props.handleAlertSideContent();\n      },\n      this.state.width,\n      this.state.height,\n      (segments: [number, number][]) => {\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        // This comment is copied over from workspace saga\n        props.setEditorHighlightedLines(0, segments);\n      },\n      isControlEmpty => {\n        this.setState({ stepLimitExceeded: !isControlEmpty && this.state.lastStep });\n      }\n    );\n  }\n\n  private calculateWidth(editorWidth?: string) {\n    const horizontalPadding = 50;\n    const maxWidth = 5000; // limit for visible diagram width for huge screens\n    let width;\n    if (editorWidth === undefined) {\n      width = window.innerWidth - horizontalPadding;\n    } else {\n      width = Math.min(\n        maxWidth,\n        (window.innerWidth * (100 - parseFloat(editorWidth))) / 100 - horizontalPadding\n      );\n    }\n    return Math.min(width, maxWidth);\n  }\n\n  private calculateHeight(sideContentHeight?: number) {\n    const verticalPadding = 150;\n    const maxHeight = 5000; // limit for visible diagram height for huge screens\n    let height;\n    if (window.innerWidth < Constants.mobileBreakpoint) {\n      // mobile mode\n      height = window.innerHeight - verticalPadding;\n    } else if (sideContentHeight === undefined) {\n      height = window.innerHeight - verticalPadding;\n    } else {\n      height = sideContentHeight - verticalPadding;\n    }\n    return Math.min(height, maxHeight);\n  }\n\n  handleResize = debounce(() => {\n    const newWidth = this.calculateWidth(this.props.editorWidth);\n    const newHeight = this.calculateHeight(this.props.sideContentHeight);\n    if (newWidth !== this.state.width || newHeight !== this.state.height) {\n      this.setState({\n        height: newHeight,\n        width: newWidth\n      });\n      CseMachine.updateDimensions(newWidth, newHeight);\n    }\n  }, 300);\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize);\n    CseMachine.redraw();\n  }\n\n  componentWillUnmount() {\n    this.handleResize.cancel();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate(prevProps: {\n    editorWidth?: string;\n    sideContentHeight?: number;\n    stepsTotal: number;\n    needCseUpdate: boolean;\n  }) {\n    if (\n      prevProps.sideContentHeight !== this.props.sideContentHeight ||\n      prevProps.editorWidth !== this.props.editorWidth\n    ) {\n      this.handleResize();\n    }\n    if (prevProps.needCseUpdate && !this.props.needCseUpdate) {\n      this.stepFirst();\n      CseMachine.clearCse();\n    }\n  }\n\n  public render() {\n    const cseMachineHandlers = this.state.visualization\n      ? {\n          FIRST_STEP: this.stepFirst,\n          NEXT_STEP: this.stepNext,\n          PREVIOUS_STEP: this.stepPrevious,\n          LAST_STEP: this.stepLast(this.props.stepsTotal)\n        }\n      : {\n          FIRST_STEP: () => {},\n          NEXT_STEP: () => {},\n          PREVIOUS_STEP: () => {},\n          LAST_STEP: () => {}\n        };\n\n    return (\n      <HotKeys\n        keyMap={cseMachineKeyMap}\n        handlers={cseMachineHandlers}\n        style={{\n          maxHeight: '100%',\n          overflow: this.state.visualization ? 'hidden' : 'auto'\n        }}\n      >\n        <div className={classNames('sa-substituter', Classes.DARK)}>\n          <Slider\n            disabled={!this.state.visualization}\n            min={1}\n            max={this.props.stepsTotal}\n            onChange={this.sliderShift}\n            onRelease={this.sliderRelease}\n            value={this.state.value < 1 ? 1 : this.state.value}\n          />\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <ButtonGroup>\n              <Tooltip2 content=\"Control and Stash\" compact>\n                <AnchorButton\n                  onMouseUp={() => {\n                    if (this.state.visualization && CseMachine.getCompactLayout()) {\n                      CseMachine.toggleControlStash();\n                      CseMachine.redraw();\n                    }\n                  }}\n                  icon=\"layers\"\n                  disabled={!this.state.visualization || !CseMachine.getCompactLayout()}\n                >\n                  <Checkbox\n                    checked={CseMachine.getControlStash()}\n                    disabled={!CseMachine.getCompactLayout()}\n                    style={{ margin: 0 }}\n                  />\n                </AnchorButton>\n              </Tooltip2>\n              <Tooltip2 content=\"Truncate Control\" compact>\n                <AnchorButton\n                  onMouseUp={() => {\n                    if (this.state.visualization && CseMachine.getControlStash()) {\n                      CseMachine.toggleStackTruncated();\n                      CseMachine.redraw();\n                    }\n                  }}\n                  icon=\"minimize\"\n                  disabled={!this.state.visualization || !CseMachine.getControlStash()}\n                >\n                  <Checkbox\n                    checked={CseMachine.getStackTruncated()}\n                    disabled={!CseMachine.getControlStash()}\n                    style={{ margin: 0 }}\n                  />\n                </AnchorButton>\n              </Tooltip2>\n            </ButtonGroup>\n            <ButtonGroup>\n              <Button\n                disabled={!this.state.visualization}\n                icon=\"double-chevron-left\"\n                onClick={this.stepPrevBreakpoint}\n              />\n              <Button\n                disabled={!this.state.visualization}\n                icon=\"chevron-left\"\n                onClick={this.stepPrevious}\n              />\n              <Button\n                disabled={!this.state.visualization}\n                icon=\"chevron-right\"\n                onClick={this.stepNext}\n              />\n              <Button\n                disabled={!this.state.visualization}\n                icon=\"double-chevron-right\"\n                onClick={this.stepNextBreakpoint}\n              />\n            </ButtonGroup>\n            <ButtonGroup>\n              <Tooltip2 content=\"Experimental\" compact>\n                <AnchorButton\n                  onMouseUp={() => {\n                    if (this.state.visualization) {\n                      CseMachine.toggleCompactLayout();\n                      CseMachine.redraw();\n                    }\n                  }}\n                  icon=\"build\"\n                  disabled={!this.state.visualization}\n                >\n                  <Checkbox\n                    checked={!CseMachine.getCompactLayout()}\n                    disabled={!this.state.visualization}\n                    style={{ margin: 0 }}\n                  />\n                </AnchorButton>\n              </Tooltip2>\n              <Tooltip2 content=\"Print\" compact>\n                <AnchorButton\n                  onMouseUp={() => {\n                    if (this.state.visualization) {\n                      CseMachine.togglePrintableMode();\n                      CseMachine.redraw();\n                    }\n                  }}\n                  icon=\"print\"\n                  disabled={!this.state.visualization}\n                >\n                  <Checkbox\n                    disabled={!this.state.visualization}\n                    checked={CseMachine.getPrintableMode()}\n                    style={{ margin: 0 }}\n                  />\n                </AnchorButton>\n              </Tooltip2>\n              <Tooltip2 content=\"Save\" compact>\n                <AnchorButton\n                  icon=\"floppy-disk\"\n                  disabled={!this.state.visualization}\n                  onClick={Layout.exportImage}\n                />\n              </Tooltip2>\n            </ButtonGroup>\n          </div>\n        </div>{' '}\n        {this.state.visualization ? (\n          this.state.stepLimitExceeded ? (\n            <div\n              id=\"cse-machine-default-text\"\n              className={Classes.RUNNING_TEXT}\n              data-testid=\"cse-machine-default-text\"\n            >\n              Maximum number of steps exceeded.\n              <Divider />\n              Please increase the step limit if you would like to see futher evaluation.\n            </div>\n          ) : (\n            this.state.visualization\n          )\n        ) : (\n          <div\n            id=\"cse-machine-default-text\"\n            className={Classes.RUNNING_TEXT}\n            data-testid=\"cse-machine-default-text\"\n          >\n            The CSE machine generates control, stash and environment model diagrams following a\n            notation introduced in{' '}\n            <a href={Links.textbookChapter3_2} rel=\"noopener noreferrer\" target=\"_blank\">\n              <i>\n                Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 3,\n                Section 2\n              </i>\n            </a>\n            .\n            <br />\n            <br /> On this tab, the REPL will be hidden from view, so do check that your code has no\n            errors before running the stepper. You may use this tool by running your program and\n            then dragging the slider above to see the state of the control, stash and environment at\n            different stages in the evaluation of your program. Clicking on the fast-forward button\n            (double chevron) will take you to the next breakpoint in your program\n            <br />\n            <br />\n            <Divider />\n            Some useful keyboard shortcuts:\n            <br />\n            <br />\n            a: Move to the first step\n            <br />\n            e: Move to the last step\n            <br />\n            f: Move to the next step\n            <br />\n            b: Move to the previous step\n            <br />\n            <br />\n            Note that these shortcuts are only active when the browser focus is on this tab.\n          </div>\n        )}\n        <ButtonGroup\n          vertical={true}\n          style={{ position: 'absolute', bottom: '20px', right: '20px' }}\n        >\n          <Button\n            icon=\"plus\"\n            disabled={!this.state.visualization}\n            onClick={() => Layout.zoomStage(true, 5)}\n            style={{ marginBottom: '5px', borderRadius: '3px' }}\n          />\n          <Button\n            icon=\"minus\"\n            disabled={!this.state.visualization}\n            onClick={() => Layout.zoomStage(false, 5)}\n            style={{ borderRadius: '3px' }}\n          />\n        </ButtonGroup>\n      </HotKeys>\n    );\n  }\n\n  private sliderRelease = (newValue: number) => {\n    if (newValue === this.props.stepsTotal) {\n      this.setState({ lastStep: true });\n    } else {\n      this.setState({ lastStep: false });\n    }\n    this.props.handleEditorEval();\n  };\n\n  private sliderShift = (newValue: number) => {\n    this.props.handleStepUpdate(newValue);\n    this.setState((state: State) => {\n      return { value: newValue };\n    });\n  };\n\n  private stepPrevious = () => {\n    if (this.state.value !== 1) {\n      this.sliderShift(this.state.value - 1);\n      this.sliderRelease(this.state.value - 1);\n    }\n  };\n\n  private stepNext = () => {\n    const lastStepValue = this.props.stepsTotal;\n    if (this.state.value !== lastStepValue) {\n      this.sliderShift(this.state.value + 1);\n      this.sliderRelease(this.state.value + 1);\n      CseAnimation.enableAnimations();\n    }\n  };\n\n  private stepFirst = () => {\n    // Move to the first step\n    this.sliderShift(1);\n    this.sliderRelease(1);\n  };\n\n  private stepLast = (lastStepValue: number) => () => {\n    // Move to the last step\n    this.sliderShift(lastStepValue);\n    this.sliderRelease(lastStepValue);\n  };\n\n  private stepNextBreakpoint = () => {\n    for (const step of this.props.breakpointSteps) {\n      if (step > this.state.value) {\n        this.sliderShift(step);\n        this.sliderRelease(step);\n        return;\n      }\n    }\n    this.sliderShift(this.props.stepsTotal);\n    this.sliderRelease(this.props.stepsTotal);\n  };\n\n  private stepPrevBreakpoint = () => {\n    for (let i = this.props.breakpointSteps.length - 1; i >= 0; i--) {\n      const step = this.props.breakpointSteps[i];\n      if (step < this.state.value) {\n        this.sliderShift(step);\n        this.sliderRelease(step);\n        return;\n      }\n    }\n    this.sliderShift(1);\n    this.sliderRelease(1);\n  };\n}\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (\n  state: OverallState,\n  ownProps: OwnProps\n) => {\n  let workspace: PlaygroundWorkspaceState;\n  const [loc] = getLocation(ownProps.workspaceLocation);\n\n  switch (loc) {\n    // case 'stories': {\n    //   workspace = state.stories.envs[storyEnv]\n    //   break\n    // }\n    case 'sicp': {\n      workspace = state.workspaces.sicp;\n      break;\n    }\n    default: {\n      workspace = state.workspaces.playground;\n      break;\n    }\n  }\n\n  return {\n    ...ownProps,\n    stepsTotal: workspace.stepsTotal,\n    currentStep: workspace.currentStep,\n    breakpointSteps: workspace.breakpointSteps,\n    needCseUpdate: workspace.updateCse\n  };\n};\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, props) =>\n  bindActionCreators(\n    {\n      handleEditorEval: () => evalEditor(props.workspaceLocation),\n      handleStepUpdate: (steps: number) => updateCurrentStep(steps, props.workspaceLocation),\n      handleAlertSideContent: () =>\n        beginAlertSideContent(SideContentType.cseMachine, props.workspaceLocation),\n      setEditorHighlightedLines: (\n        editorTabIndex: number,\n        newHighlightedLines: HighlightedLines[]\n      ) =>\n        setEditorHighlightedLinesControl(\n          props.workspaceLocation,\n          editorTabIndex,\n          newHighlightedLines\n        )\n    },\n    dispatch\n  );\n\nexport const SideContentCseMachine = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SideContentCseMachineBase);\n\nconst makeCseMachineTabFrom = (location: NonStoryWorkspaceLocation): SideContentTab => ({\n  label: 'CSE Machine',\n  iconName: IconNames.GLOBE,\n  body: <SideContentCseMachine workspaceLocation={location} />,\n  id: SideContentType.cseMachine\n});\n\nexport default makeCseMachineTabFrom;\n","import { Chapter } from '@seancze/js-slang/dist/types';\nimport { v4 as uuid } from 'uuid';\n\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Input as RecorderInput } from '../sourceRecorder/SourceRecorderTypes';\n\ntype PlaybackInitial = {\n  chapter: Chapter;\n  externalLibrary?: ExternalLibraryName;\n  editorValue: string;\n};\n\ntype PlaybackInitialTagged = PlaybackInitial & {\n  type: 'init';\n  time: number;\n};\n\ntype Input = RecorderInput | PlaybackInitialTagged;\n\nconst questionIdLookup: { [id: string]: string } = {};\n\n// ------------------- EXTERNAL API -------------------\n\nconst cadetLoggerUrl = process.env.REACT_APP_CADET_LOGGER;\nexport function log(id: string, input: Input) {\n  if (process.env.NODE_ENV === 'test' || !cadetLoggerUrl) {\n    return;\n  } // This is set statically\n  saveRecord({\n    ...input,\n    questionId: questionIdLookup[id],\n    sessionId: id\n  });\n}\n\n// Creates a session, then logs it.\nexport function initSession(questionId: string, initialState: PlaybackInitial): string {\n  const id = uuid();\n  questionIdLookup[id] = questionId;\n  log(id, {\n    ...initialState,\n    type: 'init',\n    time: Date.now()\n  });\n  return id;\n}\n\n// ------------------- INDEXEDDB API -------------------\ntype LogRecord = Input & {\n  sessionId: string;\n  questionId: string;\n  time: number;\n};\n\n// Yes, past tense. For when it is inside the log.\nexport type LoggedRecord = LogRecord & { id: number };\n\nconst VERSION = 1;\nconst DB_NAME = 'evtlogs';\nconst STORE_NAME = 'logs';\nconst getDB = memoize((): Promise<IDBDatabase> => {\n  return new Promise((resolve, reject) => {\n    // Make a request\n    const request = indexedDB.open(DB_NAME, VERSION);\n    // hook the onsuccess\n    request.onsuccess = evt => {\n      resolve(request.result);\n    };\n\n    request.onerror = evt => {\n      console.error('Failed to get db', evt);\n      reject(request.error);\n    };\n\n    // Set it up if necessary (on upgrade)\n    request.onupgradeneeded = evt => {\n      // Create the database here\n      const db: IDBDatabase = (evt?.target as any).result; // Bug with the types...\n      db.createObjectStore(STORE_NAME, {\n        keyPath: 'id', // Entry id, only used to figure out the last transfered value\n        autoIncrement: true\n      });\n    };\n  });\n});\n\nfunction saveRecord(record: LogRecord) {\n  return new Promise((resolve, reject) => {\n    getDB().then(db => {\n      const transaction = db.transaction([STORE_NAME], 'readwrite');\n      transaction.oncomplete = resolve;\n      transaction.onerror = reject;\n\n      const objectStore = transaction.objectStore(STORE_NAME);\n      /*const request = */ objectStore.add(record);\n      // Can actually check for request success.\n    });\n  });\n}\n\n// Retrieving and uploading records\n// This forces it to be singleton,\n// preventing multiple uploads without a lock.\n\nexport function getRecords(): Promise<LoggedRecord[]> {\n  return new Promise((resolve, reject) => {\n    getDB().then(db => {\n      const transaction = db.transaction([STORE_NAME], 'readwrite');\n      const objectStore = transaction.objectStore(STORE_NAME);\n      objectStore.getAll().onsuccess = function (evt) {\n        const result = (evt?.target as any).result;\n        resolve(result);\n      };\n    });\n  });\n}\n\nexport function deleteRecordsUpto(id: number) {\n  return new Promise((resolve, reject) => {\n    getDB().then(db => {\n      const transaction = db.transaction([STORE_NAME], 'readwrite');\n      const range = IDBKeyRange.bound(0, id, false, false);\n      const objectStore = transaction.objectStore(STORE_NAME);\n      objectStore.delete(range);\n      transaction.oncomplete = resolve;\n      transaction.onerror = reject;\n    });\n  });\n}\n\n// Importing lodash for this is apparently a bad idea.\n// This saves 70kb. Out of 72kb.\nfunction memoize<T>(fn: () => T) {\n  let answer: T | null = null;\n  return () => {\n    if (!answer) {\n      answer = fn();\n      return answer;\n    } else {\n      return answer;\n    }\n  };\n}\n"],"names":["ControlBarAutorunButtons","props","showRunButton","isDebugging","_jsx","ControlBarRunButton","handleEditorEval","isEntrypointFileDefined","color","isRunning","undefined","className","showAutoRunIndicator","isEditorAutorun","ControlButton","label","icon","IconNames","showDebuggerPause","pauseDisabled","onClick","handleDebuggerPause","showDebuggerResume","handleDebuggerResume","showDebuggerReset","handleDebuggerReset","isMobileBreakpoint","useResponsive","_jsxs","_Fragment","children","autorunDisabled","Switch","checked","onChange","handleToggleEditorAutorun","chapterListRenderer","itemsParentRef","renderItem","items","defaultChoices","filter","variant","Variant","variantChoices","Menu","ulRef","style","display","flexDirection","map","length","MenuItem","text","chapterRenderer","isFolderModeEnabled","lang","handleClick","isDisabled","chapter","Chapter","tooltipContent","Tooltip2","content","disabled","displayName","ChapterSelectComponent","Select","ControlBarChapterSelect","sourceChapter","sourceVariant","handleChapterSelect","selectedLang","useTypedSelector","store","playground","languageConfig","mainLanguage","choices","goLanguage","sourceLanguages","Constants","fullJSLanguage","fullTSLanguage","htmlLanguage","schemeLanguages","pyLanguages","onItemSelect","itemRenderer","itemListRenderer","filterable","Button","minimal","styliseSublanguage","rightIcon","Draggable","axis","handle","position","bounds","top","left","right","bottom","onDrag","id","i","Repl","replProps","isKeyboardShown","setIsKeyoardShown","React","buttonContent","setButtonContent","keyboardPosition","setKeyboardPosition","x","y","selectedIndex","setSelectedIndex","handlePreventDefault","event","preventDefault","keyboardProps","onKeyPress","button","targetKeyboardInput","editor","navigateLeft","navigateRight","remove","insert","includes","baseClass","layout","default","buttonTheme","class","buttons","theme","preventMouseDownDefault","disableCaretPositioning","e","document","getElementById","setProperty","onMouseDown","Keyboard","keyboardClass","getElementsByClassName","Array","from","controlBarMenu","editorButtons","flowButtons","editingWorkspaceButtons","Popover2","autoFocus","MobileSideContent","renderActiveTabPanelOnly","mobileControlBarProps","selectedTabId","isIOS","test","navigator","platform","renderedPanels","dynamicTabs","tab","renderPanel","workspaceLocation","body","tabBody","SideContentProvider","tabs","allTabs","changeTabsCallback","selectedTab","Tabs","classNames","Classes","renderTab","tabId","tabTitle","onOpening","_document$getElementB","generateIconId","click","Icon","iconName","iconSize","Tab","title","MobileControlBar","propsAreEqual","_props$editorContaine","isAndroid","userAgent","isPortrait","useMediaQuery","orientation","draggableReplPosition","setDraggableReplPosition","isDraggableReplDisabled","setIsDraggableReplDisabled","FocusStyleManager","mobileSideContentProps","documentElement","querySelector","setAttribute","window","innerHeight","handleHideRepl","setTargetKeyboardInput","clearTargetKeyboardInput","enableMobileKeyboardForEditor","onFocus","onBlur","handleShowRepl","offset","Math","max","editorContainerProps","handleTabChangeForRepl","newTabId","prevTabId","SideContentType","onSideContentTabChange","sideBarTabs","sideBarProps","mobileEditorTab","mobileRunTab","updatedMobileSideContentProps","_props$mobileSideCont","_props$mobileSideCont2","_props$mobileSideCont3","_props$mobileSideCont4","beforeDynamicTabs","afterDynamicTabs","inAssessmentWorkspace","Prompt","when","hasUnsavedChanges","message","ControlBar","createWorkspaceInput","editorVariant","EditorContainer","McqChooser","mcqProps","DraggableRepl","enableMobileKeyboardForRepl","MobileKeyboard","cseMachineKeyMap","FIRST_STEP","NEXT_STEP","PREVIOUS_STEP","LAST_STEP","SideContentCseMachineBase","constructor","super","handleResize","debounce","newWidth","this","calculateWidth","editorWidth","newHeight","calculateHeight","sideContentHeight","state","width","height","setState","CseMachine","sliderRelease","newValue","stepsTotal","lastStep","sliderShift","handleStepUpdate","value","stepPrevious","stepNext","lastStepValue","CseAnimation","stepFirst","stepLast","stepNextBreakpoint","step","breakpointSteps","stepPrevBreakpoint","visualization","stepLimitExceeded","handleAlertSideContent","segments","setEditorHighlightedLines","isControlEmpty","innerWidth","min","parseFloat","componentDidMount","addEventListener","componentWillUnmount","cancel","removeEventListener","componentDidUpdate","prevProps","needCseUpdate","render","cseMachineHandlers","HotKeys","keyMap","handlers","maxHeight","overflow","Slider","onRelease","justifyContent","alignItems","ButtonGroup","compact","AnchorButton","onMouseUp","Checkbox","margin","Layout","Divider","href","Links","rel","target","vertical","marginBottom","borderRadius","SideContentCseMachine","connect","mapStateToProps","ownProps","workspace","loc","getLocation","workspaces","sicp","currentStep","updateCse","mapDispatchToProps","dispatch","bindActionCreators","evalEditor","steps","updateCurrentStep","beginAlertSideContent","editorTabIndex","newHighlightedLines","setEditorHighlightedLinesControl","location","questionIdLookup","cadetLoggerUrl","process","REACT_APP_CADET_LOGGER","log","input","record","questionId","sessionId","Promise","resolve","reject","getDB","then","db","transaction","STORE_NAME","oncomplete","onerror","objectStore","add","initSession","initialState","uuid","type","time","Date","now","fn","answer","memoize","request","indexedDB","open","onsuccess","evt","result","console","error","onupgradeneeded","createObjectStore","keyPath","autoIncrement"],"sourceRoot":""}
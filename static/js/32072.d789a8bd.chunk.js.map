{"version":3,"file":"static/js/32072.d789a8bd.chunk.js","mappings":"mLASA,MAqBA,EArBsDA,KACpDC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACW,QAAzBA,EAAAF,EAAMG,2BAAmB,IAAAD,GAAzBA,EAAAE,KAAAJ,EAA6B,GAE5B,KAGDK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UAC3CF,EAAAA,EAAAA,KAAA,OACEC,WACEN,EAAMQ,UAAY,YAAc,uBADtB,iCAEqBD,UAEjCF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACH,UAAU,yBAAyBI,UAAWC,EAAAA,EAAAA,MAAgBJ,SACjEP,EAAMY,c,yKCWjB,MAAMC,EAAoDA,EACxDC,iBACAC,aACAC,YAEA,MAAMC,EAAiBD,EAAME,QAAO,EAAGC,aAAcA,IAAYC,EAAAA,QAAAA,UAC3DC,EAAiBL,EAAME,QAAO,EAAGC,aAAcA,IAAYC,EAAAA,QAAAA,UAEjE,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAOV,EAAgBW,MAAO,CAAEb,QAAS,OAAQc,cAAe,UAAWnB,SAAA,CAC9EU,EAAeU,IAAIZ,GACnBM,EAAeO,OAAS,IACvBvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAAoBC,KAAK,WAAWC,KAAK,MAAKxB,SACpDc,EAAeM,IAAIZ,IADR,kBAIX,EAILiB,EACHC,GACD,CAACC,GAAQC,kBACP,MAAMC,EAAaH,GAAuBC,EAAKG,UAAYC,EAAAA,QAAAA,SACrDC,EAAiBH,EACnB,uHACAI,EACJ,OACEnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CAEPC,QAASH,EACTI,cAA6BH,IAAnBD,EAA6BhC,UAEvCF,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAACe,QAAST,EAAaL,KAAMI,EAAKW,YAAaF,SAAUP,KAJ7DF,EAAKW,YAKD,EAIXC,EAAyBC,EAAAA,EAAAA,SAElBC,EAAkEA,EAC7Ef,sBACAgB,gBACAC,gBACAC,sBAAsBA,SACtBR,YAAW,MAEX,MAAMS,GAAeC,EAAAA,EAAAA,KAAiBC,GAASA,EAAMC,WAAWC,eAAeC,eAEzEC,EAAU,CACdC,EAAAA,MACGC,EAAAA,MAICC,EAAAA,EAAAA,eAA2B,CAACC,EAAAA,GAAgBC,EAAAA,GAAgBC,EAAAA,IAAgB,MAC7EC,EAAAA,MACAC,EAAAA,IAGL,OACE7D,EAAAA,EAAAA,KAACyC,EAAsB,CACrB9B,MAAO0C,EAAQxC,QAAO,EAAGuC,kBAAmBA,IAAiBL,IAC7De,aAAchB,EACdiB,aAAcpC,EAAgBC,GAC9BoC,iBAAkBxD,EAClByD,YAAY,EACZ3B,SAAUA,EAASpC,UAEnBF,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CACLC,SAAO,EACP1C,MAAM2C,EAAAA,EAAAA,IAAmBxB,EAAeC,GACxCwB,UAAW/B,EAAW,KAAOgC,EAAAA,EAAAA,sBAC7BhC,SAAUA,KAEW,C,mFCpGtB,MAAMiC,EAAkFA,EAC7FhC,cAGEvC,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CACZC,MAAM,oBACN/C,KAAM4C,EAAAA,EAAAA,YACN/B,QAASA,EACTmC,QAAS,CAAEC,aAAa,KCCjBC,EAA4DjF,GAChEA,EAAMkF,iBAAkB,KAAOlF,EAAMkF,iBAAkB,IAC5D7E,EAAAA,EAAAA,KAACuE,EAA+B,CAAChC,QAAS5C,EAAMmF,eAAmB,sBAEnE9E,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CACZC,MAAM,OACN/C,KAAM4C,EAAAA,EAAAA,YACN/B,QAAS5C,EAAMoF,YACfL,QAAS,CAAEC,aAAa,I,mFCVvB,MAAMK,EAAoErF,GACxEA,EAAMkF,iBAAkB,IAAM,EAAI,MACvC7E,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAM,WAAW/C,KAAM4C,EAAAA,EAAAA,WAAsB/B,QAAS5C,EAAM4C,S,sECNxE,MAAM0C,EAA4EA,EACvFJ,uBAGE7E,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CACZC,MAAQ,YAAWI,EAAkB,SAASA,EAAkB,OAChE9C,YAAU,G,mFCTT,MAAMmD,EAA8DA,EAAG3C,cACrEvC,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAM,QAAQ/C,KAAM4C,EAAAA,EAAAA,OAAkB/B,QAASA,G,6FCOhE,MAAM4C,EAA+DxF,IAC1E,MAAMyF,EAAiBzF,EAAM0F,kBAAoB,CAAEC,OAAQC,EAAAA,EAAAA,QAAgBpB,SAAS,GAAU,CAAC,EAE/F,OACEnE,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CACZC,MAAM,OACN/C,KAAM4C,EAAAA,EAAAA,YACN/B,QAAS5C,EAAM6F,YACfd,QAASU,GACT,C,mLCdN,MAgCA,EAhCqDzF,IAEjDK,EAAAA,EAAAA,KAACyF,IAAS,CACRC,KAAK,IACLC,OAAO,cACPC,SAAUjG,EAAMiG,SAChBC,OAAQ,CAAEC,KAAM,IAAKC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GAChDC,OAAQvG,EAAMuG,OACd5D,SAAU3C,EAAM2C,SAASpC,UAEzBe,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,mBAAkBC,SAAA,CAC7BP,EAAM2C,UAONtC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAkBkG,GAAG,aAAYjG,SAC7C,CAAC,IAAK,IAAK,KAAKoB,KAAI8E,IACnBpG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAcmG,QARjCpG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBkG,GAAG,aAAYjG,SAC5C,CAAC,IAAK,IAAK,KAAKoB,KAAI8E,IACnBpG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAcmG,QAUnCpG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAACqG,EAAAA,EAAI,IAAK1G,EAAM2G,mB,wBC1B1B,MA2HA,EA3HsD3G,IACpD,MAAO4G,EAAiBC,GAAqBC,EAAAA,UAAe,IACrDC,EAAeC,GAAoBF,EAAAA,SAAe,WAClDG,EAAkBC,GAAuBJ,EAAAA,SAAe,CAAEK,EAAG,EAAGC,EAAG,KACnEC,EAAeC,GAAoBR,EAAAA,SAAe,GASnDS,EAAwBC,IAC5BA,EAAMC,gBAAgB,EAgDlBC,EAAgB,CACpBC,WArBsBC,IACtB,IAAK5H,EAAM6H,oBACT,OAEF,MAAMC,EAAS9H,EAAM6H,oBACN,gBAAXD,EACFE,EAAOC,eACa,iBAAXH,EACTE,EAAOE,gBACa,WAAXJ,EACTE,EAAOG,OAAO,QACM,UAAXL,EACTE,EAAOI,OAAO,MACL,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAAO,KAAM,MAAMC,SAASP,GACrEE,EAAOI,OAAO,IAAMN,EAAS,KAE7BE,EAAOI,OAAON,EAChB,EAKAQ,UAAW,2BACXC,OAAQ,CACNC,QAAS,CACP,sBACA,0BACA,0CAGJC,YAAa,CACX,CACEC,MAAO,oBACPC,QAAS,4BAEX,CACED,MAAO,cACPC,QAAS,WAGbC,MAAO,mBACPC,yBAAyB,EACzBC,yBAAyB,GAG3B,OACEvI,EAAAA,EAAAA,KAACyF,IAAS,CACRC,KAAK,IACLC,OAAO,uBACPC,SAAUgB,EACVf,OAAQ,CAAEC,KAAM,IAAKC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,KAChDC,OAvFkCA,CACpCsC,EACA5C,KAEAiB,EAAoBjB,EAAS,EAmFZ1F,UAEfe,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,2BAA2BkG,GAAG,yBAAwBjG,SAAA,EACnEF,EAAAA,EAAAA,KAAA,UACEC,UAAU,yBACVsC,QAjFc4E,IAChBZ,GAEFkC,SAASC,eAAe,0BAA2BtH,MAAMuH,YAAY,UAAW,QAChFF,SAASC,eAAe,0BAA2BtH,MAAMuH,YAAY,QAAS,QAC9EF,SAASC,eAAe,0BAA2BtH,MAAMuH,YAAY,UAAW,OAChFhC,EAAiB,UACjBH,GAAkB,KAGlBiC,SAASC,eAAe,0BAA2BtH,MAAMuH,YAAY,UAAW,QAChFF,SAASC,eAAe,0BAA2BtH,MAAMuH,YAAY,QAAS,OAC9EF,SAASC,eAAe,0BAA2BtH,MAAMuH,YAAY,UAAW,KAChFhC,EAAiB,UACjBH,GAAkB,GACpB,EAmEMoC,YAAa1B,EAAqBhH,SAEjCwG,KAGHzF,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,mCAAmCkG,GAAG,yBAAwBjG,SAAA,EAC3EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAAC6I,IAAQ,IAAKxB,OAEhBrH,EAAAA,EAAAA,KAAA,UACEC,UAAU,6BACVsC,QA3Ee4E,IACvBF,GAAkBD,EAAgB,GAAK,GACvC,MAAM8B,EAAgBL,SAASM,uBAAuB,4BACtDC,MAAMC,KAAKH,GAAgD,GAAG1H,MAAM0E,IACjD,IAAhBkB,EAAqB,IAAI,EAwEpB4B,YAAa1B,EAAqBhH,SACnC,eAKHF,EAAAA,EAAAA,KAAA,OAAKmG,GAAG,sBAAqBjG,SAAC,UAEtB,E,mIC5HhB,MAgBA,EAhBoDP,IAClD,MAAMuJ,GACJjI,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,qBAAoBC,SAAA,CAChCP,EAAMwJ,cACNxJ,EAAMyJ,YACNzJ,EAAM0J,2BAIX,OACErJ,EAAAA,EAAAA,KAACsJ,EAAAA,EAAQ,CAACjH,QAAS6G,EAAgBK,WAAW,EAAMrJ,UAClDF,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACC,SAAO,EAACzC,KAAM4C,EAAAA,EAAAA,IAAerE,UAAU,+BACtC,ECsCTuJ,EAAsDA,EAC1DC,2BACAC,wBACAC,WACAC,mBACGjK,MAEH,MAAMkK,EAAQ,cAAcC,KAAKC,UAAUC,UAMrCC,EAAiBA,CAACC,EAA+BN,IA0B9CM,EAAY5I,KAAI6I,GAxBHC,EAACD,EAAqBE,KACxC,IAAKF,EAAIG,KAAM,OAEf,MAAMC,EAAuBF,EACzB,IACKF,EAAIG,KACP3K,MAAO,IACFwK,EAAIG,KAAK3K,MACZ0K,sBAGJF,EAAIG,KAGR,OACEtK,EAAAA,EAAAA,KAAA,OACEC,UAAWkK,EAAIhE,KAAOyD,EAAgB,wBAA0B,0BAA0B1J,SAGzFqK,GAFIJ,EAAIhE,GAGL,EAIoBiE,CAAYD,EAAKxK,EAAM0K,qBAGvD,OACErK,EAAAA,EAAAA,KAACwK,EAAAA,EAAmB,IAAK7K,EAAKO,SAC3BA,EAAGuK,KAAMC,EAASC,qBAAoBC,kBACrC3J,EAAAA,EAAAA,MAAA4J,EAAAA,SAAA,CAAA3K,SAAA,CACG+J,EAAeS,EAASE,IACzB5K,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACpCe,EAAAA,EAAAA,MAAC6J,EAAAA,GAAI,CACH3E,GAAG,sBACHwD,SAAUgB,EACVlB,yBAA0BA,EAC1BG,cAAegB,EACf3K,UAAW8K,IAAWC,EAAAA,KAAc,uBAAuB9K,SAAA,CAE1DwK,EAAQpJ,KAAI6I,GArFTc,EAACd,EAAqBN,KACtC,MACMqB,OAAmB/I,IAAXgI,EAAIhE,GAAmBgE,EAAI1F,MAAQ0F,EAAIhE,GAC/CgF,GACJnL,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CACPC,QAAS8H,EAAI1F,MACb2G,UAAWA,KAEG,IAADC,EAAPxB,IAC4C,QAA9CwB,EAAA5C,SAASC,gBAAe4C,EAAAA,EAAAA,IAAeJ,WAAO,IAAAG,GAA9CA,EAAgDE,QAClD,EACArL,UAEFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuBkG,IAAImF,EAAAA,EAAAA,IAAeJ,GAAOhL,UAC9DF,EAAAA,EAAAA,KAACwL,EAAAA,EAAI,CAAC9J,KAAMyI,EAAIsB,SAAUC,SAbf,SAkBjB,OACE1L,EAAAA,EAAAA,KAAC2L,EAAAA,EAAG,CAEFxF,GAAI+E,EACJU,MAAOT,EACP7I,SAAU6H,EAAI7H,SACdrC,UAAU,oBAJLiL,EAKL,EA2D4BD,CAAUd,EAAKN,MAGL,eAA5BlK,EAAM0K,mBAAkE,SAA5B1K,EAAM0K,qBAClDrK,EAAAA,EAAAA,KAAC6L,EAAgB,IAAKnC,aAMZ,EAI1B,EAAejD,EAAAA,KAAW+C,EAAmBsC,EAAAA,GCmM7C,EAjSwDnM,IAAU,IAADoM,EAC/D,MAAMC,EAAY,UAAUlC,KAAKC,UAAUkC,WACrCC,GAAaC,EAAAA,EAAAA,eAAc,CAAEC,YAAa,cACzCC,EAAuBC,GAA4B7F,EAAAA,SAAe,CAAEK,EAAG,EAAGC,EAAG,KAG7EwF,EAAyBC,GAA8B/F,EAAAA,UAAe,GAG7EgG,EAAAA,EAAAA,sBAGAhG,EAAAA,WAAgB,KACyC,eAAnD9G,EAAM+M,uBAAuBrC,mBAC/B5B,SAASkE,gBAAgBvL,MAAMuH,YAC7B,wBACA,+BAIG,KACLF,SAASkE,gBAAgBvL,MAAMuH,YAAY,wBAAyB,oBAAoB,IAIzF,IAOHlC,EAAAA,WAAgB,KACd,GAAIyF,GAAcF,EAAW,CAC3BvD,SAASkE,gBAAgBvL,MAAMuH,YAAY,WAAY,QAClCF,SAASmE,cAAc,uBAC9BC,aACZ,UACA,UAAYC,OAAOC,YAAc,uBAErC,CAGA,MAAO,KACL,GAAIf,EAAW,CACbvD,SAASkE,gBAAgBvL,MAAMuH,YAAY,WAAY,UAClCF,SAASmE,cAAc,uBAC9BC,aACZ,UACA,4EAEJ,CACAG,GAAgB,CACjB,GACA,CAACd,EAAYF,IAEhB,MAAOxE,EAAqByF,GAA0BxG,EAAAA,SAAkC,MAElFyG,EAA2BA,IAAMD,EAAuB,MAExDE,EAAiCxN,IAgB9B,IACFA,EACHyN,QAjBcA,CAACjG,EAAYM,KACvB9H,EAAMyN,SACRzN,EAAMyN,QAAQjG,EAAOM,GAElBA,GAGLwF,EAAuBxF,EAAO,EAW9B4F,OATaA,CAAClG,EAAYM,KACtB9H,EAAM0N,QACR1N,EAAM0N,OAAOlG,EAAOM,GAEtByF,GAA0B,IAwExBI,EAAkBC,IACtB9E,SAASkE,gBAAgBvL,MAAMuH,YAAY,uBAAwB6E,KAAKC,KAAKF,EAAQ,GAAK,MAC1FjB,EAAyB,CAAExF,EAAG,EAAGC,EAAGwG,GAAS,EAGzCP,EAAiBA,KACrBV,EAAyB,CAAExF,EAAG,EAAGC,EAAG,IACpC0B,SAASkE,gBAAgBvL,MAAMuH,YAAY,uBAAwB,MAAM,EAGrE+E,EAA6C,QAA7B3B,EAAGpM,EAAMgO,4BAAoB,IAAA5B,OAAA,EAA1BA,EAA4B2B,iBAC/CE,EAAyBnH,EAAAA,aAC7B,CAACoH,EAA2BC,KAEtBD,IAAaE,EAAAA,GAAAA,iBACXL,GACFA,IAMFG,IAAaE,EAAAA,GAAAA,iBAEXD,IAAcC,EAAAA,GAAAA,iBACdD,IAAcC,EAAAA,GAAAA,YACdD,IAAcC,EAAAA,GAAAA,UAGhBT,GAAgB,KAEhBN,IAKAa,IAAaE,EAAAA,GAAAA,QACbF,IAAaE,EAAAA,GAAAA,iBACZD,IAAcC,EAAAA,GAAAA,iBACbF,IAAaE,EAAAA,GAAAA,gBAEfvB,GAA2B,GAE3BA,GAA2B,EAC7B,GAEF,CAACkB,IAGG/D,EAAWhK,EAAM+M,uBAAuB/C,SACxCqE,EAAyBvH,EAAAA,aAC7B,CACEoH,EACAC,EACA3G,KAEAwC,EAASkE,EAAUC,EAAW3G,GAC9ByG,EAAuBC,EAAUC,EAAU,GAE7C,CAACF,EAAwBjE,IAIrBsE,EAAgCtO,EAAMuO,aAAazD,KAAK5J,QAAOsJ,QAAkBhI,IAAXgI,EAAIhE,KAE1EgI,EAAkC1H,EAAAA,SACtC,MACEhC,MAAO,SACPgH,SAAUnH,EAAAA,EAAAA,KACVgG,KAAM,KACNnE,GAAI4H,EAAAA,GAAAA,gBAEN,IAGIK,EAA+B3H,EAAAA,SACnC,MACEhC,MAAO,MACPgH,SAAUnH,EAAAA,EAAAA,KACVgG,KAAM,KACNnE,GAAI4H,EAAAA,GAAAA,mBAEN,IAGIM,EAAgC5H,EAAAA,aAAkB,KAAO,IAAD6H,EAAAC,EAAAC,EAAAC,EAC5D,MAAO,IACF9O,EAAM+M,uBACT/C,SAAUqE,EACVvD,KAAM,CACJiE,kBAAmB,IACdT,EACHE,KACwD,QAAxDG,EAAqC,QAArCC,EAAI5O,EAAM+M,uBAAuBjC,YAAI,IAAA8D,OAAA,EAAjCA,EAAmCG,yBAAiB,IAAAJ,EAAAA,EAAI,IAE9DK,iBAAkB,IACuC,QAAvDH,EAAqC,QAArCC,EAAI9O,EAAM+M,uBAAuBjC,YAAI,IAAAgE,OAAA,EAAjCA,EAAmCE,wBAAgB,IAAAH,EAAAA,EAAI,GAC3DJ,IAGL,GACA,CACDJ,EACAG,EACAC,EACAzO,EAAM+M,uBACNuB,IAGIW,EAC+C,eAAnDjP,EAAM+M,uBAAuBrC,mBACsB,qBAAnD1K,EAAM+M,uBAAuBrC,kBAE/B,OACEpJ,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,KAAC6O,EAAAA,EAAM,CACLC,OAAQnP,EAAM0F,kBACd0J,QAAS,4EAIVH,IACC5O,EAAAA,EAAAA,KAACgP,EAAAA,EAAU,IAAKrP,EAAM+M,uBAAuBhD,yBAG/CzI,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAzKb+O,MAC3B,GAAItP,EAAMgO,qBAAsB,CAC9B,MAAMA,EAAuB,IACxBhO,EAAMgO,sBAKX,MAH2C,eAAvCA,EAAqBuB,gBACvBvB,EAAqBrB,yBAA2B,IAAMgB,GAAgB,OAEjEtN,EAAAA,EAAAA,KAACmP,EAAAA,EAAe,IAAKhC,EAA8BxN,EAAMgO,uBAClE,CACE,OAAO3N,EAAAA,EAAAA,KAACoP,EAAAA,EAAU,IAAKzP,EAAM0P,UAC/B,EA8J0CJ,MACtCjP,EAAAA,EAAAA,KAACwJ,EAAiB,IAAK6E,UAGzBrO,EAAAA,EAAAA,KAACsP,EAAa,CAEZ1J,SAAUyG,EACVnG,OA7ISA,CAACsC,EAAmB5C,KACjC6C,SAASkE,gBAAgBvL,MAAMuH,YAC7B,uBACA6E,KAAKC,KAAK7H,EAASmB,EAAG,GAAK,MAE7BuF,EAAyB1G,EAAS,EAyI9BtD,SAAUiK,EACVjG,UAtM+B3G,KAa5B,IACFA,EACHyN,QAde3F,IACX9H,EAAMyN,SACRzN,EAAMyN,QAAQ3F,GAEhBwF,EAAuBxF,EAAO,EAW9B4F,OATaA,KACT1N,EAAM0N,QACR1N,EAAM0N,SAERH,GAA0B,IA2LbqC,CAA4B5P,EAAM2G,YAJzC,SAONtG,EAAAA,EAAAA,KAACwP,EAAc,CAAChI,oBAAqBA,MACjC,C,6JCpSV,MAgEA,EAhEuF7H,IACrF,MAAM,MAAE8P,EAAK,SAAEC,EAAQ,mBAAEC,GAAuBhQ,EAE1CiQ,EAAenJ,EAAAA,SAAc,KACjC,MAAMoJ,OAAkC1N,IAApBuN,EAASI,QAAwBJ,EAASK,OACxDC,GAAUC,EAAAA,EAAAA,WAAUP,EAASI,UAAYJ,EAASQ,OAExD,MAAO,CACLC,QAASN,GAAeG,EACxBI,MAAOP,IAAgBG,EAEvBK,OAAQX,EAASY,OAASC,EAAAA,GAAAA,QAAwBb,EAASY,OAASC,EAAAA,GAAAA,OACrE,GACA,CAACb,IAEEc,EAAoB/J,EAAAA,aAAkB,KAC1CkJ,EAAmBF,EAAM,GACxB,CAACA,EAAOE,IAqBX,OACE3P,EAAAA,EAAAA,KAAA,OAAKC,UAAW8K,IAAW,iBAAkB6E,GAAe,cAAY,iBAAgB1P,UACtFF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACH,UAAW+K,EAAAA,YAAqB3K,UAAWC,EAAAA,EAAAA,IAAeiC,QAASiO,EAAkBtQ,SACxFwP,EAASY,OAASC,EAAAA,GAAAA,QAAoD,eAA5B5Q,EAAM0K,mBAE/CrK,EAAAA,EAAAA,KAACyQ,EAAAA,GAAG,CAACxQ,UAAU,uBAAuB,cAAY,uBAAsBC,SAAC,qBAIzEe,EAAAA,EAAAA,MAAA4J,EAAAA,SAAA,CAAA3K,SAAA,EACEF,EAAAA,EAAAA,KAACyQ,EAAAA,GAAG,CAACxQ,UAAU,mBAAkBC,SAAEwP,EAASgB,WAC5C1Q,EAAAA,EAAAA,KAACyQ,EAAAA,GAAG,CAACxQ,UAAU,oBAAmBC,SAAEwP,EAASQ,UAC7ClQ,EAAAA,EAAAA,KAACyQ,EAAAA,GAAG,CAACxQ,UAAU,kBAAkB,cAAY,kBAAiBC,SAC3DwP,EAASK,QACNY,EAAAA,EAAAA,YAAWjB,EAASK,aACA5N,IAApBuN,EAASI,QACTG,EAAAA,EAAAA,WAAUP,EAASI,QACnB,oBAKR,C,kWCnEH,MAAMc,EAA0EjR,IACrF,MAAM,mBAAEkR,IAAuBC,EAAAA,EAAAA,MAIzBC,OAFqE5O,KAAzEa,EAAAA,EAAAA,KAAiBC,GAASA,EAAM+N,QAAQC,sBAAqBC,SAG7DlR,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAM,UAAU/C,KAAM4C,EAAAA,EAAAA,WAAsB/B,QAAS5C,EAAMwR,iBAE1EnR,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAM,SAAS/C,KAAM4C,EAAAA,EAAAA,WAAsB/B,QAAS5C,EAAMyR,eAG3E,OAAOpR,EAAAA,EAAAA,KAACqR,EAAAA,EAAW,CAACC,OAAQT,EAAmB3Q,SAAE6Q,GAA0B,E,eCa7E,MAgEMQ,EAAoB,CACxBjN,EAAAA,EAAAA,MACAA,EAAAA,EAAAA,UACAA,EAAAA,EAAAA,oBACAA,EAAAA,EAAAA,WACAA,EAAAA,EAAAA,QAGF,EAxEsF3E,IAAU,IAAD6R,EAAAC,EAC7F,MAAM3P,EAAe0G,IACnB7I,EAAM+R,oBAAoBlJ,EAAE,EAG9B,OACEvH,EAAAA,EAAAA,MAAC0Q,EAAAA,EAAM,CAAC1R,UAAU,iCAAgCC,SAAA,EAChDF,EAAAA,EAAAA,KAAC4R,EAAAA,EAAW,CAACC,MAAOC,EAAAA,EAAAA,KAAe5R,SACrB,QADqBsR,EAChC7R,EAAMoS,aAAK,IAAAP,OAAA,EAAXA,EAAalQ,KAAI,CAACgP,EAAM0B,KAErB/Q,EAAAA,EAAAA,MAACgR,EAAAA,GAAO,CAENC,GAAK,uBAAqBC,EAAAA,EAAAA,IAAmB7B,KAC7C8B,MAAO,CACLC,QAAS1S,EAAM0S,QACfC,wBAAyB3S,EAAM2S,wBAC/BC,eAAgB5S,EAAM4S,gBAExBtS,UAAWA,EAAGuS,cACZzH,IAAW,sBAAuBC,EAAAA,OAAgBA,EAAAA,QAAiB,CACjE,CAACA,EAAAA,QAAiBwH,IAErBtS,SAAA,EAEDF,EAAAA,EAAAA,KAACwL,EAAAA,EAAI,CAAC9J,KAAMsQ,EAAM,EAAIT,EAAMS,GAAOT,EAAM,MACzCvR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAEoQ,MAdjCA,QAmBbrP,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAW,CAACC,MAAOC,EAAAA,EAAAA,MAAgB5R,SAAA,MACfiC,IAAlBxC,EAAMuR,SAAyBvR,EAAMoS,OAASpS,EAAMoS,MAAMxQ,OAAS,IAClEvB,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CAETnQ,UAAU,EACVoQ,aACE1S,EAAAA,EAAAA,KAACsJ,EAAAA,EAAQ,CACPjH,SACErC,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAAAhB,SACW,QADXuR,EACF9R,EAAM0S,eAAO,IAAAZ,OAAA,EAAbA,EAAenQ,KAAKqR,IACnB3S,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAAce,QAAST,EAAaL,KAAMkR,GAApCA,OAIrBC,UAAW,aAAa1S,UAExBF,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACC,SAAS,EAAME,UAAU,aAAa,aAAW,aAG7DwO,YAAa,gBACblJ,SAAUhK,EAAM+R,oBAChBoB,MAAOnT,EAAM4S,gBAlBT,iBAqBRvS,EAAAA,EAAAA,KAAC4Q,EAA2B,CAE1BQ,aAAczR,EAAMoT,kBACpB5B,cAAexR,EAAMqT,oBAFjB,oBAKD,E,gFC6Db,QApIwErT,IACtE,MAAM,mBAAEkR,IAAuBC,EAAAA,EAAAA,MACzBmC,GAAWC,EAAAA,EAAAA,MAEjB,IAAI3S,EAEJ,MAAM4S,GAAyBC,EAAAA,EAAAA,UAC7B,KACEpT,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACxC,KAAM4C,EAAAA,EAAAA,IAAe/B,QAASA,IAAM0Q,EAAU,6BAA4B/S,SAAC,8BAIrF,CAAC+S,IAGGI,GAAgBD,EAAAA,EAAAA,UACpB,KACEpT,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACxC,KAAM4C,EAAAA,EAAAA,QAAmB/B,QAAS5C,EAAM2T,2BAA2BpT,SAAC,yBAI9E,CAACP,EAAM2T,6BAGT,GAAK3T,EAAM4T,oBAOJ,GAAyC,IAArC5T,EAAM4T,oBAAoBhS,OACnChB,GACEU,EAAAA,EAAAA,MAAA4J,EAAAA,SAAA,CAAA3K,SAAA,CACGiT,EACAE,GACDrT,EAAAA,EAAAA,KAACwT,EAAAA,EAAa,CAAC5H,MAAM,4BAA4BlK,KAAM4C,EAAAA,EAAAA,eAGtD,CAEL,MAAMmP,EAAQ9T,EAAM4T,oBAAoBjS,KAAIoS,GAyBhD,SACEC,EACA9C,EACAoC,GAEA,MAAMW,EAAQ/C,EAAqB,EAAI,EACjCgD,EACJF,EAAmBG,gBAAgBC,UACnC,IACAJ,EAAmBG,gBAAgBE,SAC/BC,EAAUN,EAAmBM,QAAQC,eAErCC,EAAa,IAAIC,KAAK,QAAoBT,EAAmBM,QAC7DI,EAAY,IAAID,KAAST,EAAmBM,QAE5CK,OAAoDnS,IAA5BwR,EAAmBY,KACjD,IAAIC,EAAa,OACb1S,EAAcA,IAAMmR,EAAU,4BAA4B,CAAEb,MAAOuB,IAEnEW,GACFE,EAAa,SACb1S,EAAcA,IAAMgL,OAAO2H,KAAKd,EAAmBY,OAC1CF,IACTG,EAAa,kBAGf,OACExU,EAAAA,EAAAA,KAAA,OAAAE,UACEe,EAAAA,EAAAA,MAACb,EAAAA,EAAI,CAACH,UAAU,cAAcI,UAAWC,EAAAA,EAAAA,IAAcJ,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OAAKC,UAAY,UAASyU,OAAOd,qBAAyB1T,UACxDF,EAAAA,EAAAA,KAAA,OACE2U,IAAI,aACJ1U,UAAY,eAAc0T,EAAmB/H,QAC7CgJ,IAAKjB,EAAmBkB,WAAalB,EAAmBkB,WAAaC,OAIzE7T,EAAAA,EAAAA,MAAA,OAAKhB,UAAY,UAASyU,OAAO,GAAKd,kBAAsB1T,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7Be,EAAAA,EAAAA,MAAC8T,EAAAA,EAAI,CAACC,WAAW,EAAK9U,SAAA,EACpBF,EAAAA,EAAAA,KAACiV,EAAAA,GAAE,CAAChV,UAAU,gBAAeC,SAAEyT,EAAmB/H,SAClD5L,EAAAA,EAAAA,KAACkV,EAAAA,GAAE,CAAAhV,SAAE2T,UAIT7T,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAACmV,EAAAA,EAAQ,CAAC9S,QAASsR,EAAmByB,gBAGxCnU,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,iBAAgBC,SAAA,EAC7Be,EAAAA,EAAAA,MAAC8T,EAAAA,EAAI,CAAC9U,UAAU,mBAAkBC,SAAA,EAChCF,EAAAA,EAAAA,KAACwL,EAAAA,EAAI,CAACvL,UAAU,mBAAmByL,SAAU,GAAIhK,KAAM4C,EAAAA,EAAAA,OACtD6P,EAAa,QAAUF,EAAU,kBAEpCjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACxC,KAAM4C,EAAAA,EAAAA,KAAgBH,SAAS,EAAM5B,QAAST,EAAY5B,UAChEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAEsU,kBA7BxCX,EAqCd,CAxFMwB,CAAgC3B,EAAS7C,EAAoBoC,KAE/D1S,GACEU,EAAAA,EAAAA,MAAA4J,EAAAA,SAAA,CAAA3K,SAAA,CACGiT,EACAE,EACAI,IAGP,MA1BElT,GACEU,EAAAA,EAAAA,MAAA4J,EAAAA,SAAA,CAAA3K,SAAA,CACGiT,GACDnT,EAAAA,EAAAA,KAACwT,EAAAA,EAAa,CAAC8B,YAAY,yBAAyB5T,MAAM1B,EAAAA,EAAAA,KAACuV,EAAAA,EAAO,SAyBxE,OACEvV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAamB,MAAO,CAAEoU,SAAU,QAAStV,UACtDF,EAAAA,EAAAA,KAACyV,EAAAA,EAAc,CAAClV,QAASA,EAAST,oBAAqBA,UACnD,E,mECrFV,QAAga,0CAAha,EAA2d,0CAA3d,EAAgiB,oDAAhiB,EAAknB,uDAAlnB,EAA+sB,+DAA/sB,EAAqzB,gE,0HCe9yB,MAAM4V,GAAwE/V,IACnF,MAAM8E,EAAQ9E,EAAMgW,aAAe,gBAAkB,gBAC/CC,EAAYjW,EAAMgW,aAAehW,EAAMkW,oBAAsBlW,EAAMmW,mBAEzE,OAAO9V,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAOA,EAAO/C,KAAM4C,EAAAA,EAAAA,QAAmB/B,QAASqT,GAAa,E,uBCR9E,MAAMG,GAAyB,GAEhCC,GAAiBC,GAAgBC,KAAKjG,UAAUgG,EAAQ,KAAM,GAY9DE,GAAY9T,GAAiBA,EAM7B+T,GAAwB,CAC5BC,gBAAiB,CACfC,SAAU,aACVC,eAAiBzD,GAA4B,KAAVA,EACnC0D,oBAAqBL,GACrBM,kBAAmBN,IAErBO,YAAa,CACXJ,SAAU,iBACVC,eAAiBzD,GAA4B,KAAVA,EACnC0D,oBAAqBL,GACrBM,kBAAmBN,IAErBQ,UAAW,CACTL,SAAU,eACVC,eAAiBzD,GAA4B,KAAVA,EACnC0D,oBAAqBL,GACrBM,kBAAmBN,IAErBS,YAAa,CACXN,SAAU,iBACVC,eAAiBzD,GAA4B,KAAVA,EACnC0D,oBAAqBL,GACrBM,kBAAmBN,IAErBU,aAAc,CACZP,SAAU,kBACVC,eAAiBzD,GAA4B,KAAVA,EACnC0D,oBAAqBL,GACrBM,kBAAmBN,IAErBW,UAAW,CACTR,SAAU,iBACVC,eAAiBzD,GAAuC,IAAjBA,EAAMvR,OAC7CiV,oBAAqBN,KAAKa,MAC1BN,kBApDgCO,IAClC,MAAMC,EAAgBD,EAAM1V,KAAKwI,IACxB,CACLoG,OAAQpG,EAAKoG,OACbQ,QAAS5G,EAAK4G,QACdwG,MAAOpN,EAAKoN,MAAQpN,EAAKoN,MAAQ,EACjC5G,KAAMxG,EAAKwG,KAAOxG,EAAKwG,KAAO,aAGlC,OAAO0F,GAAciB,EAAc,IAqD9BE,eAAeC,GAAetD,EAAkC5C,GACrE,MAAMmG,EAAwBC,GAC5BxD,EAAgBC,UAChBD,EAAgBE,SAChB,YACA9C,GAGIqG,EAAwBD,GAC5BxD,EAAgBC,UAChBD,EAAgBE,SAChB,YACA9C,GAGIsG,EA8BRL,eAA4BpD,EAAmBC,EAAkB9C,GAC/D,MAAMuG,EAAwB,GAE9B,QAAgBtV,IAAZ+O,EACF,OAAOuG,EAKT,MAAMC,QAA+CxG,EAAQyG,MAAMC,WAAW,CAC5EC,MAAO9D,EACP+D,KAAM9D,EACN+D,KAAM,KAIFC,EAAwBN,EAAmBO,KAEjD,IAAKjP,MAAMkP,QAAQF,GACjB,OAAOP,EAGT,MAAMU,EAAW,GAEjB,IAAK,IAAI/R,EAAI,EAAGA,GAAK2P,GAAwB3P,IAAK,CAChD,MAAMgS,EAAqB,IAAMhS,EAIjC,QAA6DjE,IAAzD6V,EAAMK,MAAKC,GAAQA,EAAKC,OAASH,IACnC,MAGFD,EAASK,KACPtH,EAAQyG,MACLC,WAAW,CACVC,MAAO9D,EACP+D,KAAM9D,EACN+D,KAAMK,IAEPK,MAAMC,IACL,IAAK1P,MAAMkP,QAAQQ,EAAeT,MAChC,OAGF,MACMU,EADwBD,EAAeT,KACQ3W,KAClDgX,GAAcA,EAAKC,OAKhBK,EAFaC,OAAOC,KAAK1C,IAEOvV,QAAQkY,GAC5CJ,EAAuB7Q,SAASsO,GAAsB2C,GAAUzC,YAG5D6B,EAAWS,EAAmBtX,KAAI6V,UACtC,MAAMb,EAAWF,GAAsB2C,GAAUzC,SAE3C0C,QAAsB1B,GAC1BvD,EACAC,EACAoE,EAAqB,IAAM9B,EAC3BpF,GAGF,OAAOkF,GAAsB2C,GAAUvC,oBAAoBwC,EAAc,IAG3E,OAAOC,QAAQC,IAAIf,GAAUM,MAAMU,IACjC,MAAMC,EAAqB,CACzBC,eAAgBjT,EAChBiQ,gBAAiB,GACjBK,YAAa,GACbC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,UAAW,IAGb,IAAK,IAAI1Q,EAAI,EAAGA,EAAI+S,EAAe5X,OAAQ6E,IACzCgT,EAASR,EAAmBxS,IAAM+S,EAAe/S,GAGxB,KAAvBgT,EAASzC,YACXyC,EAASzC,UAAYyC,EAAS1C,aAGhCe,EAAUe,KAAKY,EAAS,GACxB,IAEHE,OAAMC,KACLC,EAAAA,EAAAA,IAAmB,uDAAwD,KAC3EC,QAAQC,MAAMH,EAAI,IAG1B,CAIA,aAHMN,QAAQC,IAAIf,GAClBV,EAAUkC,MAAK,CAACC,EAAGC,IAAMD,EAAEP,eAAiBQ,EAAER,iBAEvC5B,CACT,CAnI2BqC,CACvBhG,EAAgBC,UAChBD,EAAgBE,SAChB9C,IAGK6I,EAAgBC,EAAgBC,SAAmBhB,QAAQC,IAAI,CACpE7B,EACAE,EACAC,IAEI0C,EAoKR,SAAgDF,GAC9C,IACE,OAAO9D,KAAKa,MAAMiD,EACpB,CAAE,MAAOT,GAEP,OADAE,QAAQC,MAAMH,GACP,CACLY,cAAelY,EAAAA,QAAAA,SAEnB,CACF,CA7K0BmY,CAAuCJ,GAS/D,MAPoC,CAClClG,gBAAiBA,EACjBuG,gBAAiBN,EACjBG,gBAAiBA,EACjBD,UAAWA,EAIf,CAwHO9C,eAAeG,GACpBvD,EACAC,EACAsG,EACApJ,GAEA,IAAIqJ,EAAgB,GAEpB,QAAgBpY,IAAZ+O,EACF,OAAOqJ,EAGT,IAEE,MAAMC,QAAqCtJ,EAAQyG,MAAMC,WAAW,CAClEC,MAAO9D,EACP+D,KAAM9D,EACN+D,KAAMuC,IAGRC,EAAgBE,GAAOxR,KAAMuR,EAASvC,KAAa5V,QAAS,UAAUqY,UACxE,CAAE,MAAOnB,IACPC,EAAAA,EAAAA,IAAmB,uDAAwD,KAC3EC,QAAQC,MAAMH,EAChB,CAEA,OAAOgB,CACT,CAkBA,SAASI,GAAuCT,GAC9C,OAAOlE,GAAckE,EACvB,CAkKO,SAASU,GAA8BC,GAC5C,IAAIC,GAAY,EAChB,MAAMC,EAAc,CAClB7K,OAAQ,EACR7M,QAAS,GACT2X,UAAW,EACX1K,KAAM,MACNjO,QAAS,GACT4Y,MAAO,EACP9U,GAAI,EACJ+U,QAAS,CAAElZ,QAASC,EAAAA,QAAAA,SAAkBkZ,SAAU,CAAE5C,KAAM,OAAQ6C,QAAS,IAAMC,QAAS,IACxFC,SAAU,EACVC,GAAI,EACJC,MAAO,GAGHC,EAAcZ,EAAgBa,OAMpC,GAJkD,QAA9CD,EAAYE,UAAU,EAAG,GAAGC,gBAC9Bd,GAAY,GAGVA,EAAW,CACb,MAAMe,EAA0BJ,EAAYE,UAAU,EAAGF,EAAYla,QACrE,IACE,MAAMua,EAAqB5F,KAAKa,MAAM8E,GAEhCE,EAAgBD,EAAmB5L,OAEnC7M,EADsByY,EAAmBzY,QACX/B,KAAK0a,IAChC,CACL3Z,QAAS2Z,EAASC,OAClBC,KAAMF,EAASE,SAGblB,EAAWc,EAAmBd,SAEpCD,EAAY7K,OAAS6L,EACrBhB,EAAY1X,QAAUA,EACtB0X,EAAYC,SAAWA,CACzB,CAAE,MAAOzB,GACPuB,GAAY,CACd,CACF,CAEA,MAAO,CAACA,EAAWC,EACrB,CC5dO,MAAMoB,GAAkExc,IAYtEK,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAM,WAAW/C,KAAM4C,EAAAA,EAAAA,IAAe/B,QAX5D,WACM5C,EAAMyc,gBAAkBrG,GAO5BpW,EAAM0c,kBANJ7C,EAAAA,EAAAA,IACE,yBAA2BzD,GAAyB,uBAM1D,I,gBCVK,MAAMuG,GAAwE3c,IA0BjFK,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CAACC,MAAM,sBAAsB/C,KAAM4C,EAAAA,EAAAA,OAAkB/B,QAzBrE4U,iBACE,GAAIxX,EAAMyc,eAAiB,EAEzB,YADA5C,EAAAA,EAAAA,IAAmB,gDAIO+C,EAAAA,GAAAA,IAAwB,CAClDC,UACEvb,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8CACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mCACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mEAGPuc,cAAe,SACfC,eAAgB,UAChBC,cAAe,aAIfhd,EAAMid,uBAEV,I,4BCjBK,MAAMC,GAAsEld,IACjF,MAAOmd,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,6BAErD,OACE/b,EAAAA,EAAAA,MAACgc,EAAAA,EAAM,CAAChd,UAAWid,EAA2BC,QAAQ,EAAKjd,SAAA,EACzDF,EAAAA,EAAAA,KAAA,OAAKC,UAAW8K,IAAW,qBAAsBC,EAAAA,eAAuB9K,UACtEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gCAENe,EAAAA,EAAAA,MAAA,OAAKhB,UAAW8K,IAAW,mBAAoBC,EAAAA,aAAqB9K,SAAA,EAClEe,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEe,EAAAA,EAAAA,MAAA,MAAAf,SAAA,CAAI,0CAAwCP,EAAMyd,UAAU,uBAC5Dpd,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CACT9I,SAwBV,SAA2BxC,GACzB4V,EAAkB5V,EAAMkW,OAAOvK,MACjC,EAzBUD,YAAa,yBACbC,MAAOgK,QAGX7b,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0DACHP,EAAM2d,cAAchc,KAAIgZ,IACvBta,EAAAA,EAAAA,KAAA,MAAAE,SAAoBoa,GAAXA,YAKfta,EAAAA,EAAAA,KAAA,OAAKC,UAAW8K,IAAWC,EAAAA,eAAuB9K,UAChDe,EAAAA,EAAAA,MAAA,OAAKhB,UAAW8K,IAAWC,EAAAA,uBAA+B9K,SAAA,EACxDF,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAAC3B,QAahB,WACE5C,EAAM4d,cAAc,CAClBC,aAAa,EACbxJ,SAAU,IAEd,EAlBqC9T,SAAC,WAC9BF,EAAAA,EAAAA,KAACyd,EAAAA,EAAY,CAAClb,QAmBtB,WACE,GAAuB,KAAnBua,EAEF,YADAtD,EAAAA,EAAAA,IAAmB,0CAA2C,KAIhE7Z,EAAM4d,cAAc,CAClBC,aAAa,EACbxJ,SAAU8I,GAEd,EA7B8CxX,OAAQC,GAAAA,EAAAA,QAAerF,SAAC,mBA6BtE,E,4BChEF,MA+CA,GA/C4EP,IAC1E,MAAO+d,EAAcC,GAAmBlX,EAAAA,UAAe,GACjDmX,EAAaje,EAAMie,WAEnBC,EAAOpX,EAAAA,SAuBb,OArBA7G,EAAAA,EAAAA,YAAU,KACR,SAASkC,EAAYqF,GACdyW,IAIDC,EAAKC,UAAYD,EAAKC,QAAQC,SAAS5W,EAAMkW,SAC/CM,GAAgB,GAGdE,EAAKC,SAAWD,EAAKC,QAAQC,SAAS5W,EAAMkW,SAC9CM,GAAgB,GAEpB,CAGA,OADAlV,SAASuV,iBAAiB,YAAalc,GAChC,KACL2G,SAASwV,oBAAoB,YAAanc,EAAY,CACvD,GACA,CAAC8b,KAGF5d,EAAAA,EAAAA,KAAA,OAAKke,IAAKL,EAAK3d,SACZwd,GACC1d,EAAAA,EAAAA,KAACme,GAAAA,EAAQ,CACPxU,SAWR,SAAwBxC,GACtBxH,EAAMye,WAAWjX,EAAMkW,OAAOvK,MAChC,EAZQuL,MAAM,EACNC,gBAAgB,EAChBC,aAAc5e,EAAM0C,WAGtBrC,EAAAA,EAAAA,KAACmV,EAAAA,EAAQ,CAAC9S,QAAS1C,EAAM0C,QAASmc,sBAAsB,KAO9D,E,eCvCF,MAgCA,GAhC0E7e,IAEtEK,EAAAA,EAAAA,KAAA,OAAKC,UAAWid,EAAoChd,UAClDe,EAAAA,EAAAA,MAAA,OAAKhB,UAAWid,EAAuChd,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OAAKC,UAAWid,EAA+Chd,UAC7DF,EAAAA,EAAAA,KAACye,EAAAA,GAAK,CAAAve,SAAC,sBAETF,EAAAA,EAAAA,KAAA,OAAKC,UAAWid,EAAgDhd,UAC9DF,EAAAA,EAAAA,KAAC2C,GAAAA,EAAuB,CACtBf,oBAAqBjC,EAAMiC,oBAC3BgB,cAAejD,EAAMua,gBAAgBC,cACrCtX,cAAeW,GAAAA,EAAAA,qBAEflB,UAAU,EACVQ,oBAaV,SAA6BsD,EAAeoC,IAN5C,SAAsCkW,EAAyBC,GAC7D,MAAMC,EAAc/F,OAAOgG,OAAO,CAAC,EAAGlf,EAAMua,iBAC5C0E,EAAYF,GAAmBC,EAC/Bhf,EAAMmf,mBAAmBF,EAC3B,CAGEG,CAAmC,gBAAiB3Y,EAAEpE,QACxD,GAjBc,kBCmBhB,GApCoErC,IAClE,MAAMqf,EAAYrf,EAAMsf,kBAAoB,EACtCC,EAAmBvf,EAAMuf,iBACzBC,EAAsBxf,EAAMwf,oBAE5BC,EACJJ,EAAY,GAAKA,GAAaE,EAAiB3d,QAAsC,IAA5B2d,EAAiB3d,OAEtE8d,EAAeD,EACjB,0FACAF,EAAiBF,GAEfM,EAAqB7Y,EAAAA,aACxB8Y,IACC,GAAIH,EACF,OAGF,MAAMI,EAAsBN,EAAiB5d,KAAIme,GAAQA,IACzDD,EAAoBR,GAAaO,EACjCJ,EAAoBK,EAAoB,GAE1C,CAACL,EAAqBD,EAAkBF,EAAWI,IAGrD,OACEpf,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC0f,GAAyB,CACxB9B,WAAYje,EAAMie,WAClBvb,QAASgd,EACTjB,WAAYkB,KAEV,E,kGCpBV,MA+EA,GA7EI3f,IACF,MAAM,MACJ8P,EAAK,SACLC,EAAQ,mBACRiQ,EAAkB,0BAClBC,EAAyB,mBACzBjQ,EAAkB,eAClBkQ,GACElgB,EAGEiQ,EAAenJ,EAAAA,SAAc,KACjC,MAAMoJ,OAAkC1N,IAApBuN,EAASI,QAAwBJ,EAASK,OACxDC,GAAUC,EAAAA,GAAAA,WAAUP,EAASI,UAAYJ,EAASQ,OAExD,MAAO,CACLC,QAASN,GAAeG,EACxBI,MAAOP,IAAgBG,EACvBK,OAAQX,EAASY,OAASC,GAAAA,GAAAA,QAAwBb,EAASY,OAASC,GAAAA,GAAAA,OACrE,GACA,CAACb,IAEEc,EAAoB/J,EAAAA,aAAkB,KAC1CkJ,EAAmBF,EAAM,GACxB,CAACA,EAAOE,IAELmQ,EAAcpQ,EAASgB,QACvBqP,EAAiBrQ,EAASQ,OAE1B8P,GACJhgB,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACjE,UAAU,kBAAkByB,KAAM4C,EAAAA,EAAAA,KAAgB/B,QAASiO,IAE/DyP,GACJjgB,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CACLjE,UAAU,kBACVyB,KAAM4C,EAAAA,EAAAA,OACN/B,QAASA,IAAMsd,EAAepQ,KAI5BS,EAASzJ,EAAAA,SAAc,KAC3B,IAAIyJ,EAAS,YAQb,OAPIR,EAASK,OACXG,GAASS,EAAAA,GAAAA,YAAWjB,EAASK,aAEL5N,IAApBuN,EAASI,SACXI,GAASD,EAAAA,GAAAA,WAAUP,EAASI,SAGzBI,CAAM,GACZ,CAACR,IAEJ,OACE1P,EAAAA,EAAAA,KAAA,OAAKC,UAAW8K,IAAW,yBAA0B6E,GAAc1P,UACjEe,EAAAA,EAAAA,MAACb,EAAAA,EAAI,CAACH,UAAW+K,EAAAA,YAAqB3K,UAAWC,EAAAA,EAAAA,IAAcJ,SAAA,EAE3De,EAAAA,EAAAA,MAAA4J,EAAAA,SAAA,CAAA3K,SAAA,EACEF,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CACTxS,UAAU,mBACV6S,MAAOgN,EACPnW,SAAWxC,GAAewY,EAAmBxY,EAAMkW,OAAOvK,UAE5D9S,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CACTxS,UAAU,oBACV6S,MAAOiN,EACPpW,SAAWxC,GAAeyY,EAA0BzY,EAAMkW,OAAOvK,UAEnE9S,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CAACxS,UAAU,kBAAkB6S,MAAO5C,EAAQgQ,UAAU,OAGpEF,EACAC,MAEC,ECoHV,SAASE,GAAarN,EAAenJ,GACnC,OACE3J,EAAAA,EAAAA,KAACogB,GAAAA,GAAS,CACRngB,UAAU,YACVogB,SAAU,GACVC,qBAAqB,EACrBC,KAAK,aACL5W,SAAUA,EACVtB,MAAM,SACNyK,MAAOA,EACP0N,MAAM,OACNC,OAAO,SAGb,CAEA,MAAMC,IACJzf,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gFACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gGAGHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mFACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sFAIDygB,GAAeA,CAACC,EAAkBC,KACtC5f,EAAAA,EAAAA,MAAA,OAAKhB,UAAW2gB,EAAS1gB,SAAA,CACtB2gB,GACD7gB,EAAAA,EAAAA,KAACwL,EAAAA,EAAI,CAAC9J,KAAM4C,EAAAA,EAAAA,gBAIVwc,IACJ7f,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,mBAAkBC,SAAA,CAC9BygB,GAAa,YAAa,YAC1BA,GAAa,kBAAmB,mBAChCA,GAAa,gBAAiB,oBAI7BI,GAAiBA,CAACtc,EAAe0Y,EAAiB6D,KACtDhhB,EAAAA,EAAAA,KAACwE,EAAAA,EAAa,CACZC,MAAOA,EACP/C,KAAMyb,EAAS7Y,EAAAA,EAAAA,WAAuBA,EAAAA,EAAAA,YACtC/B,QAASye,EACTtc,QAAS,CAAEzE,UAAW,kBAAmBkE,SAAS,KAItD,GA3OIxE,IACF,MAAOshB,EAAkBC,GAAuBza,EAAAA,UAAwB,IACjE0a,EAAmBC,GAAwB3a,EAAAA,UAAwB,IACnE4a,EAAgBC,GAAqB7a,EAAAA,UAAwB,IAE9D,UACJ8a,EAAS,YACT3K,EAAW,aACXC,EAAY,WACZ+G,EAAU,mBACVjO,EAAkB,iBAClB6R,EAAgB,eAChBC,EAAc,gBACdC,GACE/hB,EAEEgiB,EAAkClb,EAAAA,aACrCmb,GACSC,IACN,MAAMC,EAAeP,EAAUjgB,KAAKoO,GAAuBmJ,OAAOgG,OAAO,CAAC,EAAGnP,KAC7EoS,EAAaF,GAAYlR,QAAUmR,SAC5BC,EAAaF,GAAY9R,OAChC0R,EAAiBM,EAAa,GAGlC,CAACN,EAAkBD,IAGfQ,EAAyCtb,EAAAA,aAC5Cmb,GACSI,IACN,MAAMF,EAAeP,EAAUjgB,KAAKoO,GAAuBmJ,OAAOgG,OAAO,CAAC,EAAGnP,KAC7EoS,EAAaF,GAAY1R,OAAS8R,SAC3BF,EAAaF,GAAY9R,OAChC0R,EAAiBM,EAAa,GAGlC,CAACN,EAAkBD,IAGfU,EAAcxb,EAAAA,aAAkB,KACpC,MAAMqb,EAAe,IAAIP,GACzBO,EAAatJ,KAAK,CAChBtI,OAAQ,GACRQ,QAAS,GACTwG,MAAO,EACP5G,KAAM,WAERkR,EAAiBM,EAAa,GAC7B,CAACP,EAAWC,IAET3B,EAAiBpZ,EAAAA,aACrB0Q,UAQE,UAP4BoF,EAAAA,GAAAA,IAAwB,CAClD3Q,MAAO,4BACP4Q,SAAU,wEACVG,cAAe,UACfF,cAAe,WAIf,OAGF,MAAMqF,EAAeP,EAAUW,MAAM,EAAGN,GAAYO,OAAOZ,EAAUW,MAAMN,EAAa,IACxFJ,EAAiBM,EAAa,GAEhC,CAACP,EAAWC,IAGRY,EAAwB3b,EAAAA,aAC5B,CAACiJ,EAAoBD,IACfmO,GAEA5d,EAAAA,EAAAA,KAACqiB,GAA+B,CAE9B5S,MAAOA,EACPC,SAAUA,EACViQ,mBAAoBgC,EAAgClS,GACpDmQ,0BAA2BmC,EAAuCtS,GAClEoQ,eAAgBA,EAChBlQ,mBAAoBA,GANfF,IAWPzP,EAAAA,EAAAA,KAACsiB,GAAAA,EAAuB,CAEtB7S,MAAOA,EACPC,SAAUA,EACVC,mBAAoBA,EACpBtF,kBAAkB,oBAJboF,IASb,CACEmO,EACAiC,EACAlQ,EACAgS,EACAI,IAIEQ,EAAgB9b,EAAAA,SACpB,IACE8a,EAAUhgB,OAAS,GACjBN,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,gBAAeC,SAAA,CAC3B4gB,GACAS,EAAUjgB,KAAI,CAACoO,EAAUD,IAAU2S,EAAsB1S,EAAUD,SAGtEzP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SAAC,wDAE/B,CAACqhB,EAAWa,IAGRI,EAAuB/b,EAAAA,SAC3B,KACEzG,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CACLjE,UAAU,kBACVyB,KAAM4C,EAAAA,EAAAA,IACNH,SAAS,EACT1C,KAAM,qBACNc,QAAS0f,KAGb,CAACA,IAGGQ,EAAoBhc,EAAAA,aAAkB,KAC1Cya,GAAqBD,EAAiB,GACrC,CAACA,IAEEyB,EAAqBjc,EAAAA,aAAkB,KAC3C2a,GAAsBD,EAAkB,GACvC,CAACA,IAEEwB,EAAkBlc,EAAAA,aAAkB,KACxC6a,GAAmBD,EAAe,GACjC,CAACA,IAEJ,OACEpgB,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,aAAYC,SAAA,EACzBe,EAAAA,EAAAA,MAACiD,EAAAA,EAAM,CACLjE,UAAU,kBACVyB,KAAM2f,EAAiB/c,EAAAA,EAAAA,WAAuBA,EAAAA,EAAAA,YAC9CH,SAAS,EACT5B,QAASogB,EAAgBziB,SAAA,EAEzBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eACNF,EAAAA,EAAAA,KAACoC,GAAAA,EAAQ,CAACC,QAASqe,GAAmB9N,UAAWgQ,GAAAA,EAAAA,KAAqB1iB,UACpEF,EAAAA,EAAAA,KAACwL,EAAAA,EAAI,CAAC9J,KAAM4C,EAAAA,EAAAA,aAGhBtE,EAAAA,EAAAA,KAAC6iB,GAAAA,EAAQ,CAAC1F,OAAQkE,EAAgByB,qBAAqB,EAAK5iB,UAC1De,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,8BAA6BC,SAAA,CACzCqiB,EACA3E,GAAc4E,OAIlB5E,GAAcmD,GAAe,mBAAoBE,EAAkBwB,GACnE7E,IACC5d,EAAAA,EAAAA,KAAC6iB,GAAAA,EAAQ,CAAC1F,OAAQ8D,EAAkB6B,qBAAqB,EAAK5iB,UAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SACzCigB,GAAavJ,GAAc+H,GAAqB8C,EAAe9C,SAKrEf,GAAcmD,GAAe,oBAAqBI,EAAmBuB,GACrE9E,IACC5d,EAAAA,EAAAA,KAAC6iB,GAAAA,EAAQ,CAAC1F,OAAQgE,EAAmB2B,qBAAqB,EAAK5iB,UAC7DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SACzCigB,GAAatJ,GAAe8H,GAAqB+C,EAAgB/C,WAIpE,E,wCC7MH,MAAMoE,GAA0B,4zCAkE1BC,GAAqB,0BAErBC,GAAyB,CACpC9I,cAAelY,EAAAA,QAAAA,UAGJihB,GAAc,CACzB7J,eAAgB,EAChBhD,gBAzCqC,q7CA0CrCK,YAAasM,GACbrM,UAAWqM,GACXpM,YAAa,GACbC,aAAc,GACdC,UAAW,IAGAqM,GAAqB,CAChCjT,QAAS,EACT7M,QAAS,GACT2X,UAAW,EACX1K,KAAM,MACNjO,QAAS,GACT4Y,MAAO,EACP9U,GAAI,EACJ+U,QAAS,CAAElZ,QAASC,EAAAA,QAAAA,SAAkBkZ,SAAU,CAAE5C,KAAM,OAAQ6C,QAAS,IAAMC,QAAS,IACxFC,SAAU,EACVC,GAAI,EACJC,MAAO,GCWHnR,GAAuC,mBA8hC7C,GA5hC4C+Y,KAC1C,MAAMnQ,GAAWC,EAAAA,EAAAA,MACXmQ,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXtS,GAAUuS,EAAAA,GAAAA,WAEAthB,IAAZ+O,GACF+B,EAAS,4BAIX,MAAM,iBACJvF,EAAgB,wBAChBgW,EAAuB,eACvBC,EAAc,sBACdC,EAAqB,8BACrBC,EAA6B,sBAC7BC,EAAqB,wBACrBC,EAAuB,uBACvBC,IACE5Q,EAAAA,EAAAA,UAAQ,KACH,CACL1F,iBAAkBA,IAAM2V,GAASY,EAAAA,EAAAA,YAAW5Z,KAC5CqZ,wBAAyBA,CAACQ,EAAwBC,IAChDd,GAASe,EAAAA,EAAAA,mBAAkB/Z,GAAmB6Z,EAAgBC,IAChER,eAAgBA,IAAMN,GAASgB,EAAAA,EAAAA,UAASha,KACxCuZ,sBAAuBA,IAAMP,GAASiB,EAAAA,EAAAA,iBAAgBja,KACtDwZ,8BAAgCxe,GAC9Bge,GAASkB,EAAAA,EAAAA,yBAAwBla,GAAmBhF,IACtDye,sBAAwBpf,GACtB2e,GAASmB,EAAAA,EAAAA,iBAAgBna,GAAmB3F,IAC9Cqf,wBAA0BU,GACxBpB,GAASqB,EAAAA,EAAAA,4BAA2Bra,GAAmBoa,IACzDT,uBAAyBE,GACvBb,GAASsB,EAAAA,EAAAA,iBAAgBta,GAAmB6Z,OAE/C,CAACb,KAKGnJ,EAAiB4E,IAAsB9B,EAAAA,EAAAA,UAASiG,KAChD2B,EAAuBC,IAA4B7H,EAAAA,EAAAA,UAASiG,KAC5D6B,EAA6BC,IAAkC/H,EAAAA,EAAAA,WAAS,IAExEgI,EAAiBC,IAAsBjI,EAAAA,EAAAA,UAAS+F,KAChDmC,EAAuBC,IAA4BnI,EAAAA,EAAAA,UAAS+F,KAC5DqC,EAA6BC,IAAkCrI,EAAAA,EAAAA,WAAS,IAExEsI,EAAgBC,IAAqBvI,EAAAA,EAAAA,UAAqB,KAC1DwI,EAAUC,IAAezI,EAAAA,EAAAA,UAAqB,KAC9C0I,EAA0BC,IAA+B3I,EAAAA,EAAAA,WAAS,IAKlE4I,EAASC,IAAc7I,EAAAA,EAAAA,UAAS,KAChCiC,GAAmB6G,KAAwB9I,EAAAA,EAAAA,UAAS,IACpD+I,GAAeC,KAAoBhJ,EAAAA,EAAAA,WAAS,IAC5CiJ,GAAWC,KAAgBlJ,EAAAA,EAAAA,WAAS,IACpCmJ,GAAkBC,KAAuBpJ,EAAAA,EAAAA,WAAS,IAClDlH,GAAoBuQ,KAAyBrJ,EAAAA,EAAAA,WAAS,IACtDjC,GAAauL,KAAkBtJ,EAAAA,EAAAA,UAASmG,KACxCrP,GAAiByS,KAAsBvJ,EAAAA,EAAAA,eAAsC7a,GAC9EwR,GAAqB4P,EAASnR,OAE7BoU,GAAqBC,KAA0BzJ,EAAAA,EAAAA,WAAS,IACzD,YAAEpS,GAAW,eAAE8b,KAAmBC,EAAAA,EAAAA,IACtCtc,GACA0D,GAAAA,GAAAA,mBAEI,mBAAE8C,KAAuBC,EAAAA,EAAAA,OAEzB,oBACJlP,GAAmB,qBACnB6iB,GAAoB,WACpBmC,GAAU,gBACVC,GAAe,kBACfxhB,GAAiB,UACjByhB,GAAS,OACTC,GAAM,UACNC,KACEhkB,EAAAA,EAAAA,KAAiBoP,GAASA,EAAM6U,WAAWC,mBAKzCC,IAAoCC,EAAAA,EAAAA,cACxC,CAACC,EAAuBC,KACtBxB,GAAqBuB,GACrB,MAAME,EAAkBF,EAAgB,EAExCvD,EAAsB,CAEpB8C,WAAY,CACV,CACE9T,MAAOwU,EAAgBC,GAAiB5Q,UACxC6Q,iBAAkB,GAClBC,YAAa,KAGjBC,oBAAqBJ,EAAgBC,GAAiB3Q,YACtD+Q,qBAAsBL,EAAgBC,GAAiB1Q,aACvDgQ,gBAAiBS,EAAgBC,GAAiBzQ,YAEpD8M,IAEA,MAAO9I,EAAWC,GAAeH,GAC/B0M,EAAgBC,GAAiB5Q,WAGnCyP,GAAoBtL,GACpBwL,GAAevL,EAAY,GAE7B,CAAC+I,EAAuBF,IAGpBgE,IAA4BR,EAAAA,EAAAA,cAC/BS,IACC5C,EAAmB4C,GACnBxC,EAA+BwC,IAAuB3C,EAAsB,GAE9E,CAACA,IAGGnG,IAA4BqI,EAAAA,EAAAA,cAC/BU,IACChJ,EAAmBgJ,GACnB/C,IAAgC/U,EAAAA,EAAAA,SAAQ8X,EAAoBlD,GAAuB,GAErF,CAACA,IAGGmD,IAAqBX,EAAAA,EAAAA,cACxBY,IACCvC,EAAYuC,GACZrC,IAA6B3V,EAAAA,EAAAA,SAAQgY,EAAa1C,GAAgB,GAEpE,CAACA,IAGG2C,IAA+Bb,EAAAA,EAAAA,cAClCc,IACC,GAAIA,EAAkB,CACpB,MAAOpN,EAAWC,GAAeH,GAC/B4K,EAASvG,GAAoB,GAAGtI,WAElCyP,GAAoBtL,GACpBwL,GAAevL,EACjB,CAEAsL,GAAsB6B,EAAiB,GAEzC,CAAC1C,EAAUvG,KAIPkJ,IAA4B/U,EAAAA,EAAAA,UAAQ,IACjC0R,GAA+BM,GAA+BM,GACpE,CAACZ,EAA6BM,EAA6BM,KAE9D9lB,EAAAA,EAAAA,YAAU,KACJuoB,KAA8B9iB,IAChCwe,EAA8BsE,GAChC,GACC,CAACA,GAA2B9iB,GAAmBwe,IAKlD,MAAMuE,IAA8BhB,EAAAA,EAAAA,cAAYjQ,UAC9C,QAAgBhV,IAAZ+O,EAAuB,OAE3B,MAAM4C,EAAkBH,GAAmBG,gBAQrCqE,EAAW,CANUf,GAAetD,EAAiB5C,GAC9BA,EAAQmX,MAAMC,mBAAmB7P,MAAM8P,GAChDA,EAAkBtQ,KAAKuQ,QACpB1U,EAAgBC,aAKvCkF,QAAQC,IAAIf,GAAUM,MAAMN,IAC1BoO,GAAmBzS,GAEnB6R,GAA4B,GAC5BN,GAA+B,GAC/BN,GAA+B,GAC/BlB,GAA8B,GAE9B,MAAM4E,EAA2BtQ,EAAS,GAC1C0N,EAAW4C,EAAYpO,iBAEvByE,EAAmB2J,EAAYvO,iBAC/B2K,EAAyB4D,EAAYvO,iBAErC+K,EAAmBwD,EAAYpO,iBAC/B8K,EAAyBsD,EAAYpO,iBAErCoL,EAAYgD,EAAYxO,WACxBsL,EACEkD,EAAYxO,UAAU3Y,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,MAGtE+N,GAAkC,EAAGsB,EAAYxO,WAEjD,MAAM8L,EAAyB5N,EAAS,GACxC6N,GAAiBD,GAEjBG,IAAa,EAAM,GACnB,GACD,CACDvS,GACAzC,EACAiW,GACAtD,IAMI6E,IAAiCtB,EAAAA,EAAAA,cAAY,KACjDvB,EAAW9C,IAEXjE,EAAmBmE,IACnB4B,EAAyB5B,IAEzBgC,EAAmBlC,IACnBoC,EAAyBpC,IAEzB0C,EAAY,CAACvC,KACbqC,EAAkB,CAACrC,KAEnBmD,IAAsB,GACtBc,GAAkC,EAAG,CAACjE,KAEtCyC,GAA4B,GAC5BN,GAA+B,GAC/BN,GAA+B,GAC/BlB,GAA8B,GAE9BmC,IAAiB,GACjBE,IAAa,EAAM,GAClB,CAACiB,GAAmCtD,KAEvCjkB,EAAAA,EAAAA,YAAU,UACmBuC,IAAvBwR,IAA2D,OAAvBA,GACtC+U,KAEAN,IACF,GACC,CAACzU,GAAoByU,GAA6BM,KAErD,MAAMC,IACJ3oB,EAAAA,EAAAA,KAACid,EAAAA,EAAM,CAAChd,UAAU,sBAAsBkd,OAAQqJ,GAAoBtmB,UAClEe,EAAAA,EAAAA,MAACb,EAAAA,EAAI,CAAAF,SAAA,EACHF,EAAAA,EAAAA,KAACmV,EAAAA,EAAQ,CAAC9S,QAASujB,KACnB5lB,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CACLjE,UAAU,6BACVsC,QAASA,IAAMkkB,IAAuB,GACtChlB,KAAK,kBASPmnB,IAAWxB,EAAAA,EAAAA,cACf,CAACyB,EAAoBlK,KACnB,GAAIkK,EAAarD,EAASjkB,OACxB,OAEF,MAAMunB,EAAiBtD,EAASlkB,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,KAC9E0P,EAAeD,EAAa,GAAK,IAC5BC,EAAeD,EAAa,GAC/BlS,UAAWgI,GAGboJ,GAAmBe,EAAe,GAEpC,CAACtD,EAAUuC,KAGPgB,IAAkB3B,EAAAA,EAAAA,cAAY,KAClC,MAAM4B,EAAexD,EAASvG,GAAoB,GAAGvI,YAErDgN,EAAwB,EAAGsF,GAC3BJ,GAAS3J,GAAmB+J,EAAa,GACxC,CAAC/J,GAAmB2J,GAAUlF,EAAyB8B,IAEpDyD,IAAc7B,EAAAA,EAAAA,cAClBjQ,MACE+R,EACAC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAuBzV,IAEvB,SAAE0V,SAAmBC,EAAAA,GAAAA,IACzBvY,EACAqY,EAAqBxV,UACrBwV,EAAqBvV,SACrBkV,GAGe,cAAbM,SACIE,EAAAA,GAAAA,IACJxY,EACAqY,EAAqBxV,UACrBwV,EAAqBvV,SACrBkV,EACAE,EACAC,EACAC,EACAH,GAIa,WAAbK,SACIG,EAAAA,GAAAA,IACJzY,EACAqY,EAAqBxV,UACrBwV,EAAqBvV,SACrBkV,EACAE,EACAC,EACAC,EACAH,EAEJ,GAEF,CAACrV,GAAiB5C,IAGd0Y,IAAgBxC,EAAAA,EAAAA,cACpBjQ,MACEb,EACA8S,EACAC,EACAC,KAEA,MAAMC,EAAuBzV,SAEvB+V,EAAAA,GAAAA,IACJ3Y,EACAqY,EAAqBxV,UACrBwV,EAAqBvV,SACrBsC,EACA8S,EACAC,EACAC,EACD,GAEH,CAACxV,GAAiB5C,IAMd4Y,IAA0B1C,EAAAA,EAAAA,cAAYjQ,UAC1C,QAAgBhV,IAAZ+O,EAEF,YADAsI,EAAAA,EAAAA,IAAmB,8BAA+B,KAIpD,MAAOuQ,EAAsBC,GV1L1B,SACL9P,EACA0K,EACAI,EACAE,EACAM,EACAF,EACAS,GAEA,MAAMgE,EAAuB,CAAC,EACxBC,EAA4B,GAE9B9P,IAAoB0K,IACtBmF,EAAqB,aAAepP,GAAuCT,IAGzE8K,IAAoBE,IACtB6E,EAAqB,aAAe/E,GAGtC,IAAI5e,EAAI,EACR,KAAOA,EAAIof,EAASjkB,QAAQ,CAC1B,MAAMsnB,EAAaziB,EAAI,EACjBgS,EAAqB,IAAMyQ,EAEjC,GAAIA,EAAavD,EAAe/jB,OAAQ,CAEtCwoB,EAAqB3R,EAAqB,mBAAqBoN,EAASpf,GAAGuQ,UAC3EoT,EAAqB3R,EAAqB,eAAiBoN,EAASpf,GAAGiQ,gBAEvE,MAAM4T,EAAoB,CAAC,YAAa,cAAe,gBAEvD,IAAK,MAAMC,KAAgBD,EAAmB,CAC5C,MAAME,EAAe3E,EAASpf,GAAG8jB,GAGjC,IAFuB9T,GAAsB8T,GAAc3T,eAAe4T,GAErD,CACnB,MAAMC,EACJhS,EAAqB,IAAMhC,GAAsB8T,GAAc5T,SAC3D0C,EAAgB5C,GAAsB8T,GAAczT,kBACxD+O,EAASpf,GAAG8jB,IAGdH,EAAqBK,GAAkBpR,CACzC,CACF,CACF,KAAO,CAEL,MAAMiR,EAAoBpR,OAAOC,KAAK1C,IAEtC,IAAK,MAAM8T,KAAgBD,EAAmB,CAC5C,MAAME,EAAe3E,EAASpf,GAAG8jB,GAC3BG,EAAc/E,EAAelf,GAAG8jB,GAEtC,KAAKla,EAAAA,EAAAA,SAAQma,EAAcE,GAAc,CACvC,MAAMD,EACJhS,EAAqB,IAAMhC,GAAsB8T,GAAc5T,SAC3D0C,EAAgB5C,GAAsB8T,GAAczT,kBACxD+O,EAASpf,GAAG8jB,IAGdH,EAAqBK,GAAkBpR,CACzC,CACF,CAEA,GACE+M,GACAgE,EAAqB3R,EAAqB,IAAMhC,GAAiC,UAAEE,UACnF,CAEA,MAAMgU,EACJP,EACE3R,EAAqB,IAAMhC,GAAiC,UAAEE,iBAE3DyT,EACL3R,EAAqB,IAAMhC,GAAiC,UAAEE,UAEhEyT,EACE3R,EAAqB,IAAMhC,GAAmC,YAAEE,UAC9DgU,CACN,CACF,CACAlkB,GACF,CAEA,KAAOA,EAAIkf,EAAe/jB,QAAQ,CAChC,MAAMsnB,EAAaziB,EAAI,EACvB4jB,EAAgBxR,KAAK,IAAMqQ,GAC3BziB,GACF,CAEA,MAAO,CAAC2jB,EAAsBC,EAChC,CU8FoDO,CAC9CrQ,EACA0K,EACAI,EACAE,EACAM,EACAF,EACAS,IAEIyE,EAAe3R,OAAOC,KAAKiR,GAK3BU,QAA2CvZ,EAAQmX,MAAMC,mBACzDc,EAAaqB,EAASxS,KAAKM,KAC3B8Q,EAAcoB,EAASxS,KAAKyS,MAGlC,IAAK,IAAItkB,EAAI,EAAGA,EAAI4jB,EAAgBzoB,OAAQ6E,UACpCwjB,GAAcI,EAAgB5jB,GAAIgjB,EAAYC,EAHhC,IAMtB,IAAK,IAAIjjB,EAAI,EAAGA,EAAIokB,EAAajpB,OAAQ6E,IAAK,CAC5C,MAAMukB,EAAWH,EAAapkB,GACxB+iB,EAAiBY,EAAqBY,SACtC1B,GAAY0B,EAAUxB,EAAgBC,EAAYC,EATpC,GAUtB,CAEA9D,EAAkBC,GAClBL,EAAyBH,GACzBH,EAAyB3K,GAEzByL,GAA4B,GAC5BN,GAA+B,GAC/BN,GAA+B,EAAM,GACpC,CACD7T,EACA6U,GACAf,EACA9K,EACAsL,EACAF,EACAJ,EACAN,EACAqE,GACAW,KAMIgB,IAA6BxD,EAAAA,EAAAA,cAAYjQ,UAC7C,QAAgBhV,IAAZ+O,EAEF,YADAsI,EAAAA,EAAAA,IAAmB,8BAA+B,KAIpD,MAAMuQ,EVhJH,SACL7P,EACA8K,EACAQ,GAEA,MAAMuE,EAAuB,CAAC,EAC9BA,EAAqB,aAAepP,GAAuCT,GAC3E6P,EAAqB,aAAe/E,EAEpC,MAAMiF,EAAoB,CAAC,YAAa,cAAe,gBAEvD,IAAK,IAAI7jB,EAAI,EAAGA,EAAIof,EAASjkB,OAAQ6E,IAAK,CACxC,MACMgS,EAAqB,KADRhS,EAAI,GAGvB2jB,EAAqB3R,EAAqB,IAAMhC,GAAmC,YAAEE,UACnFkP,EAASpf,GAAGuQ,UACdoT,EACE3R,EAAqB,IAAMhC,GAAuC,gBAAEE,UAClEkP,EAASpf,GAAGiQ,gBAEhB4T,EAAkBY,SAASX,IACzB,MAAMC,EAAe3E,EAASpf,GAAG8jB,GAGjC,IAFuB9T,GAAsB8T,GAAc3T,eAAe4T,GAErD,CACnB,MAAMC,EACJhS,EAAqB,IAAMhC,GAAsB8T,GAAc5T,SAC3D0C,EAAgB5C,GAAsB8T,GAAczT,kBACxD+O,EAASpf,GAAG8jB,IAGdH,EAAqBK,GAAkBpR,CACzC,IAEJ,CAEA,OAAO+Q,CACT,CU0GiCe,CAC3B5Q,EACA8K,EACAQ,GAGIgF,EAAe3R,OAAOC,KAAKiR,GAAsBpQ,OACjD8Q,QAAiBvZ,EAAQmX,MAAMC,mBAE/ByC,QAAsBC,EAAAA,GAAAA,IAG1BnO,IAA2BoO,IAAO,CAClC3N,cAAekN,EACfpN,UAAWqN,EAASxS,KAAKuQ,MACzBjL,cAAewN,GAAiBE,EAAQF,OAG1C,IAAKA,EAAcvN,YACjB,OAGF,MAAM4L,EAAaqB,EAASxS,KAAKM,KAC3B8Q,EAAcoB,EAASxS,KAAKyS,MAC5B1W,EAAW+W,EAAc/W,SACzBD,EAAY0W,EAASxS,KAAKuQ,MAEhC,UACQtX,EAAQyG,MAAMuT,2BAA2B,CAC7C3S,KAAMvE,IAGR,IAAK,IAAI5N,EAAI,EAAGA,EAAIokB,EAAajpB,OAAQ6E,IAAK,CAC5C,MAAM+kB,EAAeX,EAAapkB,GAC5BglB,EAAcrB,EAAqBoB,SAEnCxB,EAAAA,GAAAA,IACJzY,EACA6C,EACAC,EACAmX,EACA/B,EACAC,EACA,yCACA+B,EAEJ,CAEA7F,EAAkBC,GAClBL,EAAyBH,GACzBH,EAAyB3K,GAEzByL,GAA4B,GAC5BN,GAA+B,GAC/BN,GAA+B,GAE/BwB,GAAmB,CACjBxS,UAAWA,EACXC,SAAUA,EACVqX,eAAgB,IAAIjX,MAExB,CAAE,MAAOmF,GACPE,QAAQC,MAAMH,IACdC,EAAAA,EAAAA,IAAmB,sDAAuD,IAC5E,IACC,CAACwL,EAAiB9K,EAAiBhJ,EAASsU,IAEzChgB,IAAc4hB,EAAAA,EAAAA,cAAY,UACHjlB,IAAvBwR,IAAoC,IAAIS,KAAST,GAAmBM,SACtEuF,EAAAA,EAAAA,IAAmB,qDAIGrX,IAApB2R,GACFgW,KAEAc,IACF,GACC,CAACjX,GAAoBG,GAAiBgW,GAAyBc,KAE5DU,IAAelE,EAAAA,EAAAA,cAAYjQ,gBACJoF,EAAAA,GAAAA,IAAwB,CACjDC,UACEvb,EAAAA,EAAAA,MAAA,OAAKhB,UAAW+K,EAAAA,YAAoB9K,SAAA,EAClCF,EAAAA,EAAAA,KAACmV,EAAAA,EAAQ,CAAC9S,QAAQ,kDAClBrC,EAAAA,EAAAA,KAACmV,EAAAA,EAAQ,CAAC9S,QAAQ,4FAGtBoa,cAAe,SACfC,eAAgB,UAChBC,cAAe,aAIfoM,IACF,GACC,CAACA,KAKEwC,IAA4BnE,EAAAA,EAAAA,cAChC,CACEnI,EACAuG,EACAF,EACAxR,KAEA,QAAwB3R,IAApB2R,EACF,OAAO,EAGT,MAAMkL,EAAYC,EAAoB,EACtC,SAAKjP,EAAAA,EAAAA,SAAQwV,EAASxG,GAAYsG,EAAetG,KACxClS,OAAO0e,QACZ,uFAIO,GAEb,IAGIC,IAAkBrE,EAAAA,EAAAA,cAAY,KAClC,GACEmE,GACEtM,GACAuG,EACAF,EACAxR,IAEF,CACA,IAAI4X,EAAiBlG,OACGrjB,IAApB2R,KACF4X,EAAiBpG,EAAehkB,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,KAC9E2O,GAAmB2D,IAGrBvE,GADsBlI,GAAoB,EACOyM,EACnD,IACC,CACDzM,GACAuG,EACAF,EACAxR,GACAiU,GACAwD,GACApE,KAGIpiB,IAAcqiB,EAAAA,EAAAA,cAAY,KAC9B,GACEmE,GACEtM,GACAuG,EACAF,EACAxR,IAEF,CACA,IAAI4X,EAAiBlG,OACGrjB,IAApB2R,KACF4X,EAAiBpG,EAAehkB,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,KAC9E2O,GAAmB2D,IAGrBvE,GADsBlI,GAAoB,EACOyM,EACnD,IACC,CACDzM,GACAuG,EACAF,EACAxR,GACAiU,GACAwD,GACApE,KAGIriB,IAAgBsiB,EAAAA,EAAAA,cAAY,KAChCnU,EAAS,8BAA8B,GACtC,CAACA,KAKJrT,EAAAA,EAAAA,YAAU,KAELiR,IACAjG,KAAgBmD,GAAAA,GAAAA,cACfnD,KAAgBmD,GAAAA,GAAAA,iBAElB2Y,GAAe3Y,GAAAA,GAAAA,iBACjB,GACC,CAAC8C,GAAoBjG,GAAa8b,KAErC,MAAMiF,IAAsBvE,EAAAA,EAAAA,cAC1B,CAAClD,EAAwB0H,KAEvBlI,EAAwB,EAAGkI,GAC3BhD,GAAS3J,GAAmB2M,EAAI,GAElC,CAAC3M,GAAmB2J,GAAUlF,IAG1BmI,GAAeA,CACnBhe,EACAC,EACA3G,KAEI0G,IAAaC,GAGjB4Y,GAAe7Y,EAAS,EASpBie,IAAYC,EAAAA,EAAAA,QAAOnhB,IACzBkhB,GAAUhO,QAAUlT,GACpB,MAAMohB,GAAaA,KACjBte,IAGIoe,GAAUhO,UAAY/P,GAAAA,GAAAA,WACxBsV,GAAS4I,EAAAA,EAAAA,iBAAgB5hB,IAC3B,EAGI8U,IAAsBiI,EAAAA,EAAAA,cACzB5H,IACC,MAAMwI,EAA0B,GAEhC,IAAK,IAAI5hB,EAAI,EAAGA,EAAIof,EAASjkB,OAAQ6E,IAAK,CACxC,MAAM8lB,EAAcrT,OAAOgG,OAAO,CAAC,EAAG2G,EAASpf,IAC/C8lB,EAAY7V,gBAAkBmJ,EAAoBpZ,GAClD4hB,EAAYxP,KAAK0T,EACnB,CAEAnE,GAAmBC,EAAY,GAEjC,CAACxC,EAAUuC,KAGPvG,IAAmB4F,EAAAA,EAAAA,cACtBtF,IACC,MAAMgH,EAAiBtD,EAASlkB,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,KAC9E0P,EAAe7J,GAAoB,GAAK,IACnC6J,EAAe7J,GAAoB,GACtCnI,UAAWgL,GAGbgC,EAAsB,CACpB+C,gBAAiBiC,EAAe7J,GAAoB,GAAGnI,YAGzDiR,GAAmBe,EAAe,GAEpC,CAAC7J,GAAmBuG,EAAU1B,EAAuBiE,KAGjDtG,IAAiB2F,EAAAA,EAAAA,cACpB+E,IACC,MAAMrD,EAAiBtD,EAASlkB,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,KAC9E0P,EAAe7J,GAAoB,GAAK,IACnC6J,EAAe7J,GAAoB,GACtCrI,YAAauV,GAEfpE,GAAmBe,EAAe,GAEpC,CAAC7J,GAAmBuG,EAAUuC,KAG1BrG,IAAkB0F,EAAAA,EAAAA,cACrBgF,IACC,MAAMtD,EAAiBtD,EAASlkB,KAAK8X,GAAuBP,OAAOgG,OAAO,CAAC,EAAGzF,KAC9E0P,EAAe7J,GAAoB,GAAK,IACnC6J,EAAe7J,GAAoB,GACtCpI,aAAcuV,GAEhBrE,GAAmBe,EAAe,GAEpC,CAAC7J,GAAmBuG,EAAUuC,KAG1BsE,GAAmBA,KACvB,MAAM5hB,EAAyB,CAC7B,CACEhG,MAAO,OACPgH,SAAUnH,EAAAA,EAAAA,MACVgG,MACEtK,EAAAA,EAAAA,KAACssB,GAAqB,CACpB1O,WAAYmI,GACZ9G,kBAAmBA,GACnBC,iBAAkBsG,EAASlkB,KAAI8X,GAAYA,EAAS/C,kBACpD8I,oBAAqBA,KAGzBhZ,GAAI4H,GAAAA,GAAAA,kBAEN,CACEtJ,MAAO,WACPgH,SAAUnH,EAAAA,EAAAA,UACVgG,MACEtK,EAAAA,EAAAA,KAAC0f,GAAyB,CACxB9B,WAAYmI,GACZ1jB,QAAS2iB,EACT5G,WAAYwJ,KAGhBzhB,GAAI4H,GAAAA,GAAAA,WAIFiR,EAAYC,GAAoB,EAChCrI,EAAc4O,EAASxG,GAAawG,EAASxG,GAAWpI,YAAc,GACtEC,EAAe2O,EAASxG,GAAawG,EAASxG,GAAWnI,aAAe,GAmC9E,OAlCApM,EAAK+N,KAAK,CACR/T,MAAO,YACPgH,SAAUnH,EAAAA,EAAAA,SACVgG,MACEtK,EAAAA,EAAAA,KAACusB,GAAyB,CACxB3O,WAAYmI,GACZxE,UAAWsF,GACXjQ,YAAaA,EACbC,aAAcA,EACd2K,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjB/R,mBAAoBiS,GAAcyB,GAASmJ,EAAAA,EAAAA,cAAaniB,GAAmBuX,MAG/Ezb,GAAI4H,GAAAA,GAAAA,YAGFgY,IAEFtb,EAAK+N,KAAK,CACR/T,MAAO,mBACPgH,SAAUnH,EAAAA,EAAAA,MACVgG,MACEtK,EAAAA,EAAAA,KAACysB,GAAwB,CACvB7qB,oBAAqBA,GACrBsY,gBAAiBA,EACjB4E,mBAAoBC,KAGxB5Y,GAAI4H,GAAAA,GAAAA,kBAID,CACLnE,cAAegB,GACfH,KAAM,CACJiE,kBAAmBjE,EACnBkE,iBAAkB,IAEpBhF,SAAUkiB,GACVxhB,kBAAmBA,GACpB,EAGGgS,GAAiBA,KACrB,MAAM2L,EAAcxC,EACjBtD,MAAM,EAAGjD,IACTkD,OAAO,CAACe,KACRf,OAAOqD,EAAStD,MAAMjD,GAAmBuG,EAASjkB,SACrDwmB,GAAmBC,GAGnBb,GADsBlI,GAAoB,EACO+I,EAAY,EAGzDpL,GAAwBA,KAC5B,MAAM8P,EAAgBzN,GAAoB,EAEpC+I,EAAcxC,EACjBtD,MAAM,EAAGwK,GACTvK,OAAOqD,EAAStD,MAAMjD,GAAmBuG,EAASjkB,SACrDwmB,GAAmBC,GAGnBb,GAD4C,IAAtBlI,GAA0BA,GAAoBA,GAAoB,EACvC+I,EAAY,EAGzD2E,GAAyCA,KAC7C,MAAMC,GACJ5sB,EAAAA,EAAAA,KAAC6sB,GAAAA,EAAmB,CAClBC,wBAAkD,OAAzBrI,GACzB/W,iBAAkBse,IACd,OAIFe,GACJ/sB,EAAAA,EAAAA,KAACmF,GAAAA,EAAuB,CACtBE,kBAAmBA,GAEnBG,YAAaA,IADT,QAKFwnB,GAAchtB,EAAAA,EAAAA,KAACkF,GAAAA,EAAqB,CAAa3C,QAAS+oB,IAAjB,SAEzC2B,GACJjtB,EAAAA,EAAAA,KAAC2C,GAAAA,EAAuB,CACtBG,oBAAqBA,OACrBlB,oBAAqBA,GACrBgB,cAAesX,EAAgBC,cAC/BtX,cAAeW,GAAAA,EAAAA,qBACflB,UAAU,GACN,WAIF4qB,GACJltB,EAAAA,EAAAA,KAAC4E,GAAAA,EAAoB,CACnBG,YAAaA,GACbD,cAAeA,GACfD,iBAAkB,CAACoa,GAAmBuG,EAASjkB,SAC3C,iBAIF4rB,GACJntB,EAAAA,EAAAA,KAACgF,GAAAA,EAAwB,CACvBzC,QAASkpB,GACT5mB,iBAAkB,CAACoa,GAAmBuG,EAASjkB,SAC3C,qBAIF6rB,GACJptB,EAAAA,EAAAA,KAACiF,GAAAA,EAA4B,CAE3BJ,iBAAkB,CAACoa,GAAmBuG,EAASjkB,SAD3C,aAKF4H,EAAiB0H,GAEnB,CAACkc,EAAYC,GADb,CAACJ,EAAWG,EAAYC,EAAaC,GAGzC,GAAIlH,GAAe,CACjB,MAAMsH,GACJrtB,EAAAA,EAAAA,KAACmc,GAAuB,CACtBE,eAAgBA,GAChBD,cAAeoJ,EAASjkB,QACpB,YAGF+rB,GACJttB,EAAAA,EAAAA,KAACsc,GAA0B,CACzBM,sBAAuBA,GACvBR,cAAeoJ,EAASjkB,QACpB,eAGFgsB,GACJvtB,EAAAA,EAAAA,KAAC0V,GAA0B,CACzBI,mBAAoBA,IAAMmS,IAA6B,GACvDpS,oBAAqBA,IAAMoS,IAA6B,GACxDtS,aAAcG,IACV,eAIR3M,EAAcqP,KAAK6U,EAAeC,EAAkBC,EACtD,CAIA,MAAO,CACLpkB,cAAeA,EACfC,YAJkB,CAAC+jB,EAAgBC,EAAcF,GAKlD,EA8CGM,IAAkBpG,EAAAA,EAAAA,cACrBqG,IACC,IAAKtH,GACH,OAGF,MAAMuH,EAAiB7U,OAAOgG,OAAO,CAAC,EAAG9D,IACzC2S,EAAexd,OAASud,EAExBnH,GAAeoH,GACf9E,GAAS3J,GVnkBR,SAAsC0O,GAC3C,MAAM5R,EAAgB4R,EAAIzd,OACpB7M,EAAUsqB,EAAItqB,QAAQ/B,KAAKssB,IACxB,CACL3R,OAAQ2R,EAAOvrB,QACf6Z,KAAM0R,EAAO1R,SAGXlB,EAAW2S,EAAI3S,SAQrB,MAAO,QAAUhF,GANJ,CACX3S,QAASA,EACT6M,OAAQ6L,EACRf,SAAUA,GAId,CUkjBkC6S,CAA6BH,GAAgB,GAE3E,CAACvH,GAAkBlH,GAAmB2J,GAAU7N,KAG5C1L,IAAW+D,EAAAA,EAAAA,UAAQ,IAChB+S,IAAoBrQ,GACvB,CACE6X,IAAK5S,GACLyS,gBAAiBA,SAEnBrrB,GACH,CAACgkB,GAAkBrQ,GAAoBiF,GAAayS,KAEjD7f,GAAmD,CACvDuB,cAAe,SACftN,uBACA6iB,wBACAV,0BACAC,yBACA4C,WAAYA,GAAWtlB,IAAIwsB,GAAAA,GAC3BC,gBAAiB,GACjBC,0BAA4BC,GAC1B5K,GAAS6K,EAAAA,EAAAA,uBAAsB7jB,GAAmB4jB,IACpDvgB,iBAAkBse,GAClBtI,wBAAyBiI,GACzB9H,8BAA+BA,EAC/BsK,8BAA+BA,CAACjK,EAAwBkK,IACtD/K,GAASgL,EAAAA,EAAAA,qBAAoBhkB,GAAmB6Z,EAAgBkK,IAClEE,yBAA0BA,CAACC,EAAaC,EAAaC,IACnDpL,GAASqL,EAAAA,EAAAA,oBAAmBrkB,GAAmBkkB,EAAKC,EAAKC,IAC3DE,iBAAiB,GAEbroB,GAAY,CAChBsoB,wBAAyBA,IAAMvL,GAASwL,EAAAA,EAAAA,uBAAsBxkB,KAC9DykB,sBAAuBA,IAAMzL,GAAS0L,EAAAA,EAAAA,qBAAoB1kB,KAC1DsZ,eAAgBA,EAChBqL,sBAAwBrQ,GACtB0E,GAAS4L,EAAAA,EAAAA,iBAAgBtQ,EAAUtU,KACrC0c,OAAQA,GACRC,UAAWA,GACXpkB,cAAesX,EAAgBC,eAAiBlY,EAAAA,QAAAA,SAChDY,cAAe9B,EAAAA,QAAAA,QACfmuB,gBAAiBC,EAAAA,EAAAA,KACjBC,YAlEkBA,MAClB,MAAMC,GACJrvB,EAAAA,EAAAA,KAACsvB,GAAAA,EAAqB,CAAC1L,sBAAuBA,GAA2B,cAO3E,MAAO,EAHL5jB,EAAAA,EAAAA,KAACuvB,GAAAA,EAAoB,CAAC5L,eAAgBA,EAAgBmD,UAAWA,IAAe,aAG9DuI,EAAY,EAyDnBD,IAETlhB,GAAe,CACnBzD,KAAM,IAGF+kB,GAAiC,CACrC7C,gBAAiBA,KACjBhf,qBAAsBwY,IAAoBrQ,QAAqB3T,EAAYwL,GAC3E8hB,8BAA+BC,GAC7BrM,GAASsM,EAAAA,EAAAA,yBAAwBD,EAAcrlB,KACjDhF,kBAAmBA,GACnBgK,SAAUA,GACVnB,aAAcA,GACdme,iBAAkBA,KAClB/lB,UAAWA,IAEPspB,GAA6C,CACjDjiB,qBAAsBwY,IAAoBrQ,QAAqB3T,EAAYwL,GAC3ErH,UAAWA,GACX4H,aAAcA,GACd7I,kBAAmBA,GACnBgK,SAAUA,GACV3C,uBAxH2DA,MAC3D,MAiBMmjB,EAAcxD,KAEpB,MAAO,CACL3iB,sBAAuB,IAClBijB,SAEFkD,EACHlmB,SAxBmBkiB,CACnBhe,EACAC,EACA3G,KAEI0G,IAAaC,IAMbA,IAAcC,GAAAA,GAAAA,WAA6BF,IAAaE,GAAAA,GAAAA,iBAE1D2Y,GAAe7Y,GACjB,EAWAjE,cAAegB,GACf8C,iBAAkBse,GACnB,EA4FuBtf,IAG1B,OAAIuZ,IAEAjmB,EAAAA,EAAAA,KAAA,OAAKC,UAAW8K,IAAWmS,EAA2BlS,EAAAA,MAAc9K,UAClEF,EAAAA,EAAAA,KAACwT,EAAAA,EAAa,CAAC8B,YAAY,UAAU5T,MAAM1B,EAAAA,EAAAA,KAACuV,EAAAA,EAAO,CAACua,KAAMC,EAAAA,EAAAA,aAK5D9uB,EAAAA,EAAAA,MAAA,OAAKhB,UAAW8K,IAAW,kBAAmBC,EAAAA,MAAc9K,SAAA,CACzDyoB,GACA9X,IACC7Q,EAAAA,EAAAA,KAACgwB,GAAAA,EAAe,IAAKJ,MAErB5vB,EAAAA,EAAAA,KAACiwB,GAAAA,EAAS,IAAKT,OAIvB,ECzmCF,GA7ByCU,KAErClwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACH,UAAU,yBAAwBC,UACtCF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,CAAE+uB,UAAW,OAAQ5vB,QAAS,OAAQ6vB,eAAgB,UAAWlwB,UAC3Ee,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEF,EAAAA,EAAAA,KAACqwB,EAAAA,GAAE,CAAAnwB,SAAC,sDACJF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACiV,EAAAA,GAAE,CAAA/U,SAAC,2EACJF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,CAAEb,QAAS,OAAQ6vB,eAAgB,UAAWlwB,UACxDe,EAAAA,EAAAA,MAACqvB,EAAAA,GAAE,CAAClvB,MAAO,CAAEmvB,UAAW,WAAYrwB,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8JAIJe,EAAAA,EAAAA,MAAA,MAAAf,SAAA,CAAI,iDAC6C,KAC/CF,EAAAA,EAAAA,KAAA,KAAGwwB,KAAK,sDAAqDtwB,SAAC,SAAQ,4D,uBCCxF,MAAMuwB,GAAiB,CACrBC,aAAc,QACdC,eAAgB,UAChBC,cAAe,SACfC,sBAAuB1e,EAAAA,IAenB2e,GAA4BA,KAChC,MACMC,GADWvN,EAAAA,EAAAA,MACcpR,MAEzBlB,GAA+BlO,EAAAA,EAAAA,KACnCC,GAASA,EAAM+N,QAAQC,sBACvBC,QACImS,GAAWC,EAAAA,EAAAA,OAIVjR,EAAS2e,IAAchU,EAAAA,EAAAA,UAA4C,OAAb+T,QAAa,IAAbA,OAAa,EAAbA,EAAe1e,UACrEE,EAAgB0e,IAAqBjU,EAAAA,EAAAA,WAA8B,OAAb+T,QAAa,IAAbA,OAAa,EAAbA,EAAexe,iBAAkB,KACvFD,EAAyB4e,IAA8BlU,EAAAA,EAAAA,UAE/C,OAAb+T,QAAa,IAAbA,OAAa,EAAbA,EAAeze,yBACXP,EAA+B,OAAvBO,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBhR,KAAI6vB,GAAYA,EAASC,YAEhExxB,EAAAA,EAAAA,YAAU,UACQuC,IAAZ+O,IAICmB,GA6HT8E,eACEjG,EACA8f,EACAC,EACAC,GAEA,MAAM7e,EAAoB,GACpBgf,SAAiBngB,EAAQogB,KAAKC,yBAAyB,CAAEC,SAAU,OAAQvZ,KACpEoZ,EAAQxwB,QAAO4wB,GAAOA,EAAIjJ,MAAM1gB,SAAS,2BACjD+iB,SAAQ4G,IACXpf,EAAQmG,KAAKiZ,EAAIjJ,MAAMkJ,QAAQ,yBAA0B,IAAI,IAE/DV,EAAW3e,GACPA,EAAQ9Q,OAAS,IACnB0vB,EAAkB5e,EAAQ,IAC1Bsf,GAAyBzgB,EAASmB,EAAQ,GAAI6e,GAElD,CA7IMU,CAAa1gB,EAAS8f,EAAYC,EAAmBC,GACvD,GACC,CAAC7e,EAASnB,IAEb,MAAMQ,EAAsBjL,EAAAA,aACzB+B,SACiBrG,IAAZ+O,IAIJygB,GAAyBzgB,EAAS1I,EAAE6U,OAAOwU,UAAWX,GACtDD,EAAkBzoB,EAAE6U,OAAOwU,WAAU,GAEvC,CAAC3gB,EAAS+f,EAAmBC,IAGzB5d,EAA6BA,UACjBnR,IAAZ+O,GAIJygB,GAAyBzgB,EAASqB,EAAgB2e,EAA2B,EAGzEY,GAAkB9xB,EAAAA,EAAAA,KAAC+xB,EAAAA,GAAQ,CAAC7f,GAAIue,GAAeC,aAAcgB,SAAO,IACpEM,GACJhyB,EAAAA,EAAAA,KAAC+xB,EAAAA,GAAQ,CACP7f,GAAK,GAAEue,GAAeI,sBACpB9e,EAAQA,EAAM,GAAK0e,GAAeE,kBAEpCve,MAAO,CACLC,QAASA,EACTC,wBAAyBA,EACzBC,eAAgBA,GAElBmf,SAAO,IAIX,OACEzwB,EAAAA,EAAAA,MAAA,OAAKhB,UAAWgyB,EAAAA,EAAAA,QAA2B7wB,MAAO,CAAEoU,SAAU,UAAWtV,SAAA,EACvEF,EAAAA,EAAAA,KAACkyB,EAA8B,CAC7BxgB,oBAAqBA,EACrBqB,kBA3DoBA,IAAMsQ,GAAS8O,EAAAA,EAAAA,gBA4DnCnf,mBAAoBA,KA3DOqQ,GAAS+O,EAAAA,EAAAA,iBA6DlCpB,OAAW7uB,GACX+uB,OAA2B/uB,GAC3B8uB,EAAkB,GAAG,EAEvB/f,QAASA,EACTmB,QAASA,EACTE,eAAgBA,EAChBR,MAAOA,EACPO,wBAAyBA,KAE3BrR,EAAAA,EAAAA,MAACoxB,EAAAA,GAAM,CAAAnyB,SAAA,EACLF,EAAAA,EAAAA,KAACsyB,EAAAA,GAAK,CACJva,KAAM0Y,GAAeC,aACrBhd,QACExC,KAAamB,GAAYA,EAAQ9Q,OAAS,IAAM+Q,IAC9CtS,EAAAA,EAAAA,KAACyV,EAAAA,EAAc,CACblV,SAASP,EAAAA,EAAAA,KAACwT,EAAAA,EAAa,CAAC8B,YAAY,aAAa5T,MAAM1B,EAAAA,EAAAA,KAACuV,EAAAA,EAAO,MAC/DzV,oBAAqBA,SAErBoR,GAAWmB,GAA8B,IAAnBA,EAAQ9Q,QAChCvB,EAAAA,EAAAA,KAAC+xB,EAAAA,GAAQ,CAAC7f,GAAIue,GAAeE,eAAgBe,SAAO,IAClDxgB,EACF8gB,GAEAhyB,EAAAA,EAAAA,KAACyV,EAAAA,EAAc,CACblV,SACEP,EAAAA,EAAAA,KAACwT,EAAAA,EAAa,CACZ8B,YAAY,4BACZ5T,KAAM4C,EAAAA,EAAAA,eAGVxE,oBAAqBA,YAK7BE,EAAAA,EAAAA,KAACsyB,EAAAA,GAAK,CACJva,KAAM0Y,GAAeE,eACrBjd,QAASxC,GAAUlR,EAAAA,EAAAA,KAACkwB,GAAsB,IAAM4B,KAElD9xB,EAAAA,EAAAA,KAACsyB,EAAAA,GAAK,CAACva,KAAM0Y,GAAeG,cAAeld,SAAS1T,EAAAA,EAAAA,KAACojB,GAAyB,MAC7ElS,EACQ,OAALa,QAAK,IAALA,OAAK,EAALA,EAAOzQ,KAAI,CAACgP,EAAM0B,KAChB,MAAMugB,EAAsBjgB,EACxBA,EAAwBN,GAAKwgB,iBAC7BrwB,EACJ,OACEnC,EAAAA,EAAAA,KAACsyB,EAAAA,GAAK,CACJva,KAAO,GAAE0Y,GAAeI,sBAAsBvgB,KAC9CoD,SACE1T,EAAAA,EAAAA,KAACyyB,EAAuB,CACtBlf,oBAAqBgf,EACrBjf,2BAA4BA,KAG3BtB,EACL,IAGN,MACJhS,EAAAA,EAAAA,KAACsyB,EAAAA,GAAK,CACJva,KAAK,IACLrE,QACExC,GAAWmB,GAAWA,EAAQ9Q,OAAS,EAAIywB,EAAwBF,SAIrE,EAwDV3a,eAAewa,GACbzgB,EACAqB,EACA2e,GAEA,MAAM9T,SAAmBlM,EAAQmX,MAAMC,oBAAoBrQ,KAAKuQ,MAC1DkK,EAAW,yBAAyBvQ,OAAO5P,GAI3CogB,SACEzhB,EAAQyG,MAAM4Z,yBAAyB,CAAEC,SAAU,OACzDvZ,KAEI2a,EADcD,EAAU9xB,QAAOiX,GAAQA,EAAKD,MAAO2Q,QAAUkK,IAChCra,MAAKP,GAAQA,EAAKS,KAAKzQ,SAAS,iBAEnE,QAAuB3F,IAAnBywB,EAEF,YADApZ,EAAAA,EAAAA,IAAmB,gDAAiD,KAItE,MAAMxB,SACE9G,EAAQyG,MAAMC,WAAW,CAC7BC,MAAO+a,EAAe/a,MAAO2Q,MAC7B1Q,KAAM8a,EAAera,KACrBR,KAAM,MAERE,KAEF,GAAIjP,MAAMkP,QAAQF,GAAQ,CACxB,IAAIA,EAAMK,MAAKC,GAAsB,qBAAdA,EAAKC,OAiD1B,YADAiB,EAAAA,EAAAA,IAAmB,+CAAgD,KAhDX,CACxD,MAAM1J,QAAeoB,EAAQyG,MAAMC,WAAW,CAC5CC,MAAO+a,EAAe/a,MAAO2Q,MAC7B1Q,KAAM8a,EAAera,KACrBR,KAAM,qBAGF8a,EAAa3c,KAAKa,MAAM0D,GAAOxR,KAAM6G,EAAOmI,KAAa5V,QAAS,UAAUqY,YAElFmY,EAAW9gB,MAAM8Y,SAASva,IACxB,MAAMiD,EAA8C,GACpDjD,EAAKkiB,YAAY3H,SAASiI,IACxB,IAAKA,EAAWC,UACd,OAGF,MAAMC,EAAcF,EAAWG,WAAa,IAAM7V,EAC5C8V,EAAcP,EAAUta,MAAKP,GAAQA,EAAKS,OAASya,IAEzD,IACIG,EADAC,EAAY,IAAIhf,UAEAjS,IAAhB+wB,EACFC,EAAaL,EAAWK,WAEO,OAA3BD,EAAYG,aACdD,EAAY,IAAIhf,KAAK8e,EAAYG,aAIrC9f,EAAoBiF,KAAK,CACvB5M,MAAOknB,EAAWlnB,MAClBiJ,WAAYie,EAAWje,WACvBO,WAAY0d,EAAWQ,aACvBxf,gBAAiB,CACfC,UAAW6e,EAAe/a,MAAO2Q,MACjCxU,SAAUgf,EACV3H,eAAgB+H,GAElBnf,QAAS,IAAIG,KAAK0e,EAAWS,SAC7Bhf,KAAM4e,IAGR5f,EAAoBoG,MAAK,CAACC,EAAGC,IAAOD,EAAE3F,SAAW4F,EAAE5F,SAAW,EAAI,GAAG,IAEtE3D,EAAakiB,YAAcjf,CAAmB,IAEjD2d,EAA2B2B,EAAW9gB,MACxC,CAIF,CACF,CAIO,MAAMyhB,GAAY1C,GACzB0C,GAAUhxB,YAAc,kBAExB,W,mCChUA,SAAgB,kBAAoB,mCAAmC,gBAAkB,iCAAiC,UAAU,yBAAyB,MAAQ,uBAAuB,cAAc,6BAA6B,sBAAsB,qCAAqC,YAAY,2BAA2B,QAAU,yBAAyB,4BAA4B,2C","sources":["commons/ContentDisplay.tsx","commons/controlBar/ControlBarChapterSelect.tsx","commons/controlBar/ControlBarReturnToAcademyButton.tsx","commons/controlBar/ControlBarNextButton.tsx","commons/controlBar/ControlBarPreviousButton.tsx","commons/controlBar/ControlBarQuestionViewButton.tsx","commons/controlBar/ControlBarResetButton.tsx","commons/controlBar/ControlBarSaveButton.tsx","commons/mobileWorkspace/DraggableRepl.tsx","commons/mobileWorkspace/MobileKeyboard.tsx","commons/mobileWorkspace/mobileSideContent/MobileControlBar.tsx","commons/mobileWorkspace/mobileSideContent/MobileSideContent.tsx","commons/mobileWorkspace/MobileWorkspace.tsx","commons/sideContent/content/SideContentTestcaseCard.tsx","commons/controlBar/github/ControlBarGitHubLoginButton.tsx","commons/navigationBar/subcomponents/GitHubAssessmentsNavigationBar.tsx","pages/githubAssessments/GitHubAssessmentListing.tsx","webpack://frontend/./src/styles/GithubAssessments.module.scss?798f","commons/controlBar/github/ControlBarDisplayMCQButton.tsx","commons/githubAssessments/GitHubMissionDataUtils.ts","commons/controlBar/github/ControlBarTaskAddButton.tsx","commons/controlBar/github/ControlBarTaskDeleteButton.tsx","commons/githubAssessments/GitHubMissionCreateDialog.tsx","commons/sideContent/content/githubAssessments/SideContentMarkdownEditor.tsx","commons/sideContent/content/githubAssessments/SideContentMissionEditor.tsx","commons/sideContent/content/githubAssessments/SideContentTaskEditor.tsx","commons/sideContent/content/githubAssessments/SideContentEditableTestcaseCard.tsx","commons/sideContent/content/githubAssessments/SideContentTestcaseEditor.tsx","pages/githubAssessments/GitHubAssessmentDefaultValues.ts","pages/githubAssessments/GitHubAssessmentWorkspace.tsx","pages/githubAssessments/GitHubClassroomWelcome.tsx","pages/githubAssessments/GitHubClassroom.tsx","webpack://frontend/./src/styles/Academy.module.scss?bc46"],"sourcesContent":["import { Card, Elevation } from '@blueprintjs/core';\nimport React, { useEffect } from 'react';\n\nexport type ContentDisplayProps = {\n  fullWidth?: boolean;\n  display: JSX.Element;\n  loadContentDispatch?: () => void;\n};\n\nconst ContentDisplay: React.FC<ContentDisplayProps> = props => {\n  useEffect(() => {\n    props.loadContentDispatch?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"ContentDisplay row center-xs\">\n      <div\n        className={`${\n          props.fullWidth ? 'col-md-12' : 'col-md-10 col-xs-11'\n        } contentdisplay-content-parent`}\n      >\n        <Card className=\"contentdisplay-content\" elevation={Elevation.THREE}>\n          {props.display}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentDisplay;\n","import { Button, Menu, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { ItemListRenderer, ItemRenderer, Select } from '@blueprintjs/select';\nimport { Chapter, Variant } from 'js-slang/dist/types';\nimport React from 'react';\n\nimport {\n  fullJSLanguage,\n  fullTSLanguage,\n  goLanguage,\n  htmlLanguage,\n  pyLanguages,\n  SALanguage,\n  schemeLanguages,\n  sourceLanguages,\n  styliseSublanguage\n} from '../application/ApplicationTypes';\nimport Constants from '../utils/Constants';\nimport { useTypedSelector } from '../utils/Hooks';\n\ntype ControlBarChapterSelectProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChapterSelect?: (i: SALanguage, e?: React.SyntheticEvent<HTMLElement>) => void;\n};\n\ntype StateProps = {\n  isFolderModeEnabled: boolean;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  disabled?: boolean;\n};\n\nconst chapterListRenderer: ItemListRenderer<SALanguage> = ({\n  itemsParentRef,\n  renderItem,\n  items\n}) => {\n  const defaultChoices = items.filter(({ variant }) => variant === Variant.DEFAULT);\n  const variantChoices = items.filter(({ variant }) => variant !== Variant.DEFAULT);\n\n  return (\n    <Menu ulRef={itemsParentRef} style={{ display: 'flex', flexDirection: 'column' }}>\n      {defaultChoices.map(renderItem)}\n      {variantChoices.length > 0 && (\n        <MenuItem key=\"variant-menu\" text=\"Variants\" icon=\"cog\">\n          {variantChoices.map(renderItem)}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nconst chapterRenderer: (isFolderModeEnabled: boolean) => ItemRenderer<SALanguage> =\n  (isFolderModeEnabled: boolean) =>\n  (lang, { handleClick }) => {\n    const isDisabled = isFolderModeEnabled && lang.chapter === Chapter.SOURCE_1;\n    const tooltipContent = isDisabled\n      ? 'Folder mode makes use of lists which are not available in Source 1. To switch to Source 1, disable Folder mode.'\n      : undefined;\n    return (\n      <Tooltip2\n        key={lang.displayName}\n        content={tooltipContent}\n        disabled={tooltipContent === undefined}\n      >\n        <MenuItem onClick={handleClick} text={lang.displayName} disabled={isDisabled} />\n      </Tooltip2>\n    );\n  };\n\nconst ChapterSelectComponent = Select.ofType<SALanguage>();\n\nexport const ControlBarChapterSelect: React.FC<ControlBarChapterSelectProps> = ({\n  isFolderModeEnabled,\n  sourceChapter,\n  sourceVariant,\n  handleChapterSelect = () => {},\n  disabled = false\n}) => {\n  const selectedLang = useTypedSelector(store => store.playground.languageConfig.mainLanguage);\n\n  const choices = [\n    goLanguage,\n    ...sourceLanguages,\n    // Full JS/TS version uses eval(), which is a huge security risk, so we only enable\n    // for public deployments. HTML, while sandboxed, is treated the same way to be safe.\n    // See https://github.com/source-academy/frontend/pull/2460#issuecomment-1528759912\n    ...(Constants.playgroundOnly ? [fullJSLanguage, fullTSLanguage, htmlLanguage] : []),\n    ...schemeLanguages,\n    ...pyLanguages\n  ];\n\n  return (\n    <ChapterSelectComponent\n      items={choices.filter(({ mainLanguage }) => mainLanguage === selectedLang)}\n      onItemSelect={handleChapterSelect}\n      itemRenderer={chapterRenderer(isFolderModeEnabled)}\n      itemListRenderer={chapterListRenderer}\n      filterable={false}\n      disabled={disabled}\n    >\n      <Button\n        minimal\n        text={styliseSublanguage(sourceChapter, sourceVariant)}\n        rightIcon={disabled ? null : IconNames.DOUBLE_CARET_VERTICAL}\n        disabled={disabled}\n      />\n    </ChapterSelectComponent>\n  );\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarReturnToAcademyButtonProps = {\n  onClick?(): any;\n};\n\nexport const ControlBarReturnToAcademyButton: React.FC<ControlBarReturnToAcademyButtonProps> = ({\n  onClick\n}) => {\n  return (\n    <ControlButton\n      label=\"Return to Academy\"\n      icon={IconNames.ARROW_RIGHT}\n      onClick={onClick}\n      options={{ iconOnRight: true }}\n    />\n  );\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\nimport { ControlBarReturnToAcademyButton } from './ControlBarReturnToAcademyButton';\n\ntype ControlBarNextButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClickNext?(): any;\n  onClickReturn?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  questionProgress: [number, number] | null;\n};\n\nexport const ControlBarNextButton: React.FC<ControlBarNextButtonProps> = props => {\n  return props.questionProgress![0] === props.questionProgress![1] ? (\n    <ControlBarReturnToAcademyButton onClick={props.onClickReturn} key=\"return_to_academy\" />\n  ) : (\n    <ControlButton\n      label=\"Next\"\n      icon={IconNames.ARROW_RIGHT}\n      onClick={props.onClickNext}\n      options={{ iconOnRight: true }}\n    />\n  );\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarPreviousButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClick?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  questionProgress: [number, number] | null;\n};\n\nexport const ControlBarPreviousButton: React.FC<ControlBarPreviousButtonProps> = props => {\n  return props.questionProgress![0] <= 1 ? null : (\n    <ControlButton label=\"Previous\" icon={IconNames.ARROW_LEFT} onClick={props.onClick} />\n  );\n};\n","import React from 'react';\n\nimport ControlButton from '../ControlButton';\n\n/**\n * @prop questionProgress a tuple of (current question number, question length) where\n *   the current question number is 1-based.\n */\ntype ControlBarQuestionViewButtonProps = {\n  questionProgress: [number, number] | null;\n};\n\nexport const ControlBarQuestionViewButton: React.FC<ControlBarQuestionViewButtonProps> = ({\n  questionProgress\n}) => {\n  return (\n    <ControlButton\n      label={`Question ${questionProgress![0]} of ${questionProgress![1]}  `}\n      isDisabled\n    />\n  );\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarResetButtonProps = {\n  onClick?(): any;\n};\n\nexport const ControlBarResetButton: React.FC<ControlBarResetButtonProps> = ({ onClick }) => {\n  return <ControlButton label=\"Reset\" icon={IconNames.REPEAT} onClick={onClick} />;\n};\n","import { Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarSaveButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClickSave?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  hasUnsavedChanges?: boolean;\n};\n\nexport const ControlButtonSaveButton: React.FC<ControlBarSaveButtonProps> = props => {\n  const saveButtonOpts = props.hasUnsavedChanges ? { intent: Intent.WARNING, minimal: false } : {};\n\n  return (\n    <ControlButton\n      label=\"Save\"\n      icon={IconNames.FLOPPY_DISK}\n      onClick={props.onClickSave}\n      options={saveButtonOpts}\n    />\n  );\n};\n","import React from 'react';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\n\nimport Repl, { ReplProps } from '../repl/Repl';\n\ntype DraggableReplProps = {\n  position: { x: number; y: number };\n  onDrag: DraggableEventHandler;\n  disabled: boolean;\n  replProps: ReplProps;\n};\n\nconst DraggableRepl: React.FC<DraggableReplProps> = (props: DraggableReplProps) => {\n  return (\n    <Draggable\n      axis=\"y\"\n      handle=\"#dragHandle\"\n      position={props.position}\n      bounds={{ top: -500, left: 0, right: 0, bottom: 0 }}\n      onDrag={props.onDrag}\n      disabled={props.disabled}\n    >\n      <div className=\"mobile-draggable\">\n        {!props.disabled ? (\n          <div className=\"handle enabled\" id=\"dragHandle\">\n            {['1', '2', '3'].map(i => (\n              <div className=\"circle\" key={i} />\n            ))}\n          </div>\n        ) : (\n          <div className=\"handle disabled\" id=\"draghandle\">\n            {['1', '2', '3'].map(i => (\n              <div className=\"circle\" key={i} />\n            ))}\n          </div>\n        )}\n        <div className=\"REPL-content\">\n          <Repl {...props.replProps} />\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default DraggableRepl;\n","import { Ace } from 'ace-builds';\nimport React from 'react';\nimport Draggable, { DraggableEvent, DraggableEventHandler } from 'react-draggable';\nimport Keyboard from 'react-simple-keyboard';\n\nexport type MobileKeyboardProps = OwnProps;\n\ntype OwnProps = {\n  targetKeyboardInput: Ace.Editor | null;\n};\n\nconst MobileKeyboard: React.FC<MobileKeyboardProps> = props => {\n  const [isKeyboardShown, setIsKeyoardShown] = React.useState(false);\n  const [buttonContent, setButtonContent] = React.useState('ᐸ');\n  const [keyboardPosition, setKeyboardPosition] = React.useState({ x: 0, y: 0 });\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const onDrag: DraggableEventHandler = (\n    e: DraggableEvent,\n    position: { x: number; y: number }\n  ): void => {\n    setKeyboardPosition(position);\n  };\n\n  const handlePreventDefault = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n  };\n\n  const handleHiding = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (isKeyboardShown) {\n      //do hiding\n      document.getElementById('mobile-keyboard-toggle')!.style.setProperty('display', 'none');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('width', '42px');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('opacity', '0.6');\n      setButtonContent('ᐸ');\n      setIsKeyoardShown(false);\n    } else {\n      //do showing\n      document.getElementById('mobile-keyboard-toggle')!.style.setProperty('display', 'flex');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('width', '99%');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('opacity', '1');\n      setButtonContent('ᐳ');\n      setIsKeyoardShown(true);\n    }\n  };\n\n  const handleRowToggle = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setSelectedIndex((selectedIndex + 1) % 3);\n    const keyboardClass = document.getElementsByClassName('simple-keyboard-shortcut');\n    Array.from(keyboardClass as HTMLCollectionOf<HTMLElement>)[0].style.top =\n      -selectedIndex * 45 + 'px';\n  };\n\n  const handleKeyPress = (button: string) => {\n    if (!props.targetKeyboardInput) {\n      return;\n    }\n    const editor = props.targetKeyboardInput;\n    if (button === '{arrowleft}') {\n      editor.navigateLeft();\n    } else if (button === '{arrowright}') {\n      editor.navigateRight();\n    } else if (button === '{bksp}') {\n      editor.remove('left');\n    } else if (button === '{tab}') {\n      editor.insert('\\t');\n    } else if (['+', '-', '*', '/', '%', '=>', '===', '&&', '||'].includes(button)) {\n      editor.insert(' ' + button + ' ');\n    } else {\n      editor.insert(button);\n    }\n  };\n\n  const keyboardProps = {\n    onKeyPress: handleKeyPress,\n    baseClass: 'simple-keyboard-shortcut',\n    layout: {\n      default: [\n        '{ } ( ) \" \\' _ => ;',\n        '{tab} && || ! < > = ===',\n        '+ - * / % // {arrowleft} {arrowright}'\n      ]\n    },\n    buttonTheme: [\n      {\n        class: 'mobile-navigation',\n        buttons: '{arrowleft} {arrowright}'\n      },\n      {\n        class: 'big-buttons',\n        buttons: '=== &&'\n      }\n    ],\n    theme: 'hg-theme-default',\n    preventMouseDownDefault: true,\n    disableCaretPositioning: false\n  };\n\n  return (\n    <Draggable\n      axis=\"y\"\n      handle=\"#floating-dragHandle\"\n      position={keyboardPosition}\n      bounds={{ top: -200, left: 0, right: 0, bottom: +200 }}\n      onDrag={onDrag}\n    >\n      <div className=\"mobile-floating-keyboard\" id=\"mobile-floating-toggle\">\n        <button\n          className=\"mobile-floating-toggle\"\n          onClick={handleHiding}\n          onMouseDown={handlePreventDefault}\n        >\n          {buttonContent}\n        </button>\n\n        <div className=\"mobile-keyboard-toggle-container\" id=\"mobile-keyboard-toggle\">\n          <div className=\"mobile-keyboard-container\">\n            <Keyboard {...keyboardProps} />\n          </div>\n          <button\n            className=\"mobile-keyboard-row-toggle\"\n            onClick={handleRowToggle}\n            onMouseDown={handlePreventDefault}\n          >\n            ⤸\n          </button>\n        </div>\n\n        <div id=\"floating-dragHandle\">:</div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default MobileKeyboard;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\n\nimport { ControlBarProps } from '../../controlBar/ControlBar';\n\nconst MobileControlBar: React.FC<ControlBarProps> = props => {\n  const controlBarMenu = (\n    <div className=\"mobile-control-bar\">\n      {props.editorButtons}\n      {props.flowButtons}\n      {props.editingWorkspaceButtons}\n    </div>\n  );\n\n  return (\n    <Popover2 content={controlBarMenu} autoFocus={false}>\n      <Button minimal icon={IconNames.COG} className=\"mobile-control-bar-button\" />\n    </Popover2>\n  );\n};\n\nexport default MobileControlBar;\n","import { Classes, Icon, Tab, Tabs } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { SideContentProps } from 'src/commons/sideContent/SideContent';\nimport { generateIconId } from 'src/commons/sideContent/SideContentHelper';\nimport SideContentProvider from 'src/commons/sideContent/SideContentProvider';\n\nimport { ControlBarProps } from '../../controlBar/ControlBar';\nimport {\n  ChangeTabsCallback,\n  SideContentLocation,\n  SideContentTab,\n  SideContentType\n} from '../../sideContent/SideContentTypes';\nimport { propsAreEqual } from '../../utils/MemoizeHelper';\nimport MobileControlBar from './MobileControlBar';\n\nexport type MobileSideContentProps = Omit<SideContentProps, 'onChange'> & {\n  onChange: ChangeTabsCallback;\n} & MobileControlBarProps;\n\ntype MobileControlBarProps = {\n  mobileControlBarProps: ControlBarProps;\n};\n\nconst renderTab = (tab: SideContentTab, isIOS: boolean) => {\n  const iconSize = 20;\n  const tabId = tab.id === undefined ? tab.label : tab.id;\n  const tabTitle: JSX.Element = (\n    <Tooltip2\n      content={tab.label}\n      onOpening={() => {\n        // Handles iOS hover requiring double taps to press the button\n        if (isIOS) {\n          document.getElementById(generateIconId(tabId))?.click();\n        }\n      }}\n    >\n      <div className=\"side-content-tooltip\" id={generateIconId(tabId)}>\n        <Icon icon={tab.iconName} iconSize={iconSize} />\n      </div>\n    </Tooltip2>\n  );\n\n  return (\n    <Tab\n      key={tabId}\n      id={tabId}\n      title={tabTitle}\n      disabled={tab.disabled}\n      className=\"side-content-tab\"\n    />\n  );\n};\n\nconst MobileSideContent: React.FC<MobileSideContentProps> = ({\n  renderActiveTabPanelOnly,\n  mobileControlBarProps,\n  onChange,\n  selectedTabId,\n  ...props\n}) => {\n  const isIOS = /iPhone|iPod/.test(navigator.platform);\n\n  /**\n   * renderedPanels is not memoized since a change in selectedTabId (when changing tabs)\n   * would force React.useMemo to recompute the nullary function anyway\n   */\n  const renderedPanels = (dynamicTabs: SideContentTab[], selectedTabId?: SideContentType) => {\n    // TODO: Fix the CSS of all the panels (e.g. subst_visualizer)\n    const renderPanel = (tab: SideContentTab, workspaceLocation?: SideContentLocation) => {\n      if (!tab.body) return;\n\n      const tabBody: JSX.Element = workspaceLocation\n        ? {\n            ...tab.body,\n            props: {\n              ...tab.body.props,\n              workspaceLocation\n            }\n          }\n        : tab.body;\n\n      // Render the other panels only when their corresponding tab is selected\n      return (\n        <div\n          className={tab.id === selectedTabId ? 'mobile-selected-panel' : 'mobile-unselected-panel'}\n          key={tab.id}\n        >\n          {tabBody}\n        </div>\n      );\n    };\n\n    return dynamicTabs.map(tab => renderPanel(tab, props.workspaceLocation));\n  };\n\n  return (\n    <SideContentProvider {...props}>\n      {({ tabs: allTabs, changeTabsCallback, selectedTab }) => (\n        <>\n          {renderedPanels(allTabs, selectedTab)}\n          <div className=\"mobile-tabs-container\">\n            <Tabs\n              id=\"mobile-side-content\"\n              onChange={changeTabsCallback}\n              renderActiveTabPanelOnly={renderActiveTabPanelOnly}\n              selectedTabId={selectedTab}\n              className={classNames(Classes.DARK, 'mobile-side-content')}\n            >\n              {allTabs.map(tab => renderTab(tab, isIOS))}\n\n              {/* Render the bottom ControlBar 'Cog' button only in the Playground or Sicp Workspace */}\n              {(props.workspaceLocation === 'playground' || props.workspaceLocation === 'sicp') && (\n                <MobileControlBar {...mobileControlBarProps} />\n              )}\n            </Tabs>\n          </div>\n        </>\n      )}\n    </SideContentProvider>\n  );\n};\n\nexport default React.memo(MobileSideContent, propsAreEqual);\n","import { FocusStyleManager } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Ace } from 'ace-builds';\nimport React from 'react';\nimport { DraggableEvent } from 'react-draggable';\nimport { useMediaQuery } from 'react-responsive';\n\nimport ControlBar from '../controlBar/ControlBar';\nimport EditorContainer, { EditorContainerProps } from '../editor/EditorContainer';\nimport McqChooser, { McqChooserProps } from '../mcqChooser/McqChooser';\nimport { Prompt } from '../ReactRouterPrompt';\nimport { ReplProps } from '../repl/Repl';\nimport { SideBarTab } from '../sideBar/SideBar';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport DraggableRepl from './DraggableRepl';\nimport MobileKeyboard from './MobileKeyboard';\nimport MobileSideContent, { MobileSideContentProps } from './mobileSideContent/MobileSideContent';\n\nexport type MobileWorkspaceProps = StateProps;\n\ntype StateProps = {\n  editorContainerProps?: EditorContainerProps; // Either editorProps or mcqProps must be provided\n  hasUnsavedChanges?: boolean; // Not used in Playground\n  mcqProps?: McqChooserProps; // Not used in Playground\n  replProps: ReplProps;\n  sideBarProps: {\n    tabs: SideBarTab[];\n  };\n  mobileSideContentProps: MobileSideContentProps;\n};\n\nconst MobileWorkspace: React.FC<MobileWorkspaceProps> = props => {\n  const isAndroid = /Android/.test(navigator.userAgent);\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n  const [draggableReplPosition, setDraggableReplPosition] = React.useState({ x: 0, y: 0 });\n\n  // For disabling draggable Repl when in stepper tab\n  const [isDraggableReplDisabled, setIsDraggableReplDisabled] = React.useState(false);\n\n  // Get rid of the focus border on blueprint components\n  FocusStyleManager.onlyShowFocusOnTabs();\n\n  // Handles the panel height when the mobile top controlbar is rendered in the Assessment Workspace\n  React.useEffect(() => {\n    if (props.mobileSideContentProps.workspaceLocation === 'assessment') {\n      document.documentElement.style.setProperty(\n        '--mobile-panel-height',\n        'calc(100% - 100px - 1.1rem)'\n      );\n    }\n\n    return () => {\n      document.documentElement.style.setProperty('--mobile-panel-height', 'calc(100% - 70px)');\n    };\n    // This effect should only trigger once during the initial rendering of the workspace\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * The following effect prevents the bottom MobileSideContent tabs from floating above the\n   * soft keyboard on Android devices. This is due to the viewport height changing when the soft\n   * keyboard is up on Android devices. IOS devices are not affected.\n   */\n  React.useEffect(() => {\n    if (isPortrait && isAndroid) {\n      document.documentElement.style.setProperty('overflow', 'auto');\n      const metaViewport = document.querySelector('meta[name=viewport]');\n      metaViewport!.setAttribute(\n        'content',\n        'height=' + window.innerHeight + ', width=device-width'\n      );\n    }\n\n    // Reset above CSS and hides draggable Repl on orientation change\n    return () => {\n      if (isAndroid) {\n        document.documentElement.style.setProperty('overflow', 'hidden');\n        const metaViewport = document.querySelector('meta[name=viewport]');\n        metaViewport!.setAttribute(\n          'content',\n          'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'\n        );\n      }\n      handleHideRepl();\n    };\n  }, [isPortrait, isAndroid]);\n\n  const [targetKeyboardInput, setTargetKeyboardInput] = React.useState<Ace.Editor | null>(null);\n\n  const clearTargetKeyboardInput = () => setTargetKeyboardInput(null);\n\n  const enableMobileKeyboardForEditor = (props: EditorContainerProps): EditorContainerProps => {\n    const onFocus = (event: any, editor?: Ace.Editor) => {\n      if (props.onFocus) {\n        props.onFocus(event, editor);\n      }\n      if (!editor) {\n        return;\n      }\n      setTargetKeyboardInput(editor);\n    };\n    const onBlur = (event: any, editor?: Ace.Editor) => {\n      if (props.onBlur) {\n        props.onBlur(event, editor);\n      }\n      clearTargetKeyboardInput();\n    };\n    return {\n      ...props,\n      onFocus,\n      onBlur\n    };\n  };\n\n  const enableMobileKeyboardForRepl = (props: ReplProps): ReplProps => {\n    const onFocus = (editor: Ace.Editor) => {\n      if (props.onFocus) {\n        props.onFocus(editor);\n      }\n      setTargetKeyboardInput(editor);\n    };\n    const onBlur = () => {\n      if (props.onBlur) {\n        props.onBlur();\n      }\n      clearTargetKeyboardInput();\n    };\n    return {\n      ...props,\n      onFocus,\n      onBlur\n    };\n  };\n\n  const createWorkspaceInput = () => {\n    if (props.editorContainerProps) {\n      const editorContainerProps = {\n        ...props.editorContainerProps\n      };\n      if (editorContainerProps.editorVariant === 'sourcecast') {\n        editorContainerProps.setDraggableReplPosition = () => handleShowRepl(-100);\n      }\n      return <EditorContainer {...enableMobileKeyboardForEditor(props.editorContainerProps)} />;\n    } else {\n      return <McqChooser {...props.mcqProps!} />;\n    }\n  };\n\n  /**\n   * The following 3 'react-draggable' handlers include the updating of CSS variable:\n   * '--mobile-repl-height'.\n   *\n   * 'position: absolute' for the 'react-draggable' component is used in conjunction with the\n   * modification of the mobile browser's meta viewport height to ensure that the draggable\n   * component (and bottom MobileSideContentTabs) remain at the bottom of the screen when the\n   * keyboard is up on Android devices. This is because viewport height changes by default when\n   * the keyboard is up on Android devices, causing unexpected UI distortions. IOS devices do\n   * not have this problem.\n   * ('position: fixed' does not work as the element would then be positioned relative to the\n   * browser window, and would still be 'pushed up' by the keyboard)\n   *\n   * Since 'position: absolute' elements take up 'full space', we have to dynamically update the\n   * height of the entire draggable component ('--mobile-repl-height') to ensure that the draggable\n   * component is 'properly closed' and does not continue to display content underneath the\n   * MobileSideContentTabs.\n   *\n   * This also ensures proper scrolling of overflowing Repl outputs inside the dynamically resizing\n   * draggable component.\n   */\n  const onDrag = (e: DraggableEvent, position: { x: number; y: number }): void => {\n    document.documentElement.style.setProperty(\n      '--mobile-repl-height',\n      Math.max(-position.y, 0) + 'px'\n    );\n    setDraggableReplPosition(position);\n  };\n\n  const handleShowRepl = (offset: number) => {\n    document.documentElement.style.setProperty('--mobile-repl-height', Math.max(-offset, 0) + 'px');\n    setDraggableReplPosition({ x: 0, y: offset });\n  };\n\n  const handleHideRepl = () => {\n    setDraggableReplPosition({ x: 0, y: 0 });\n    document.documentElement.style.setProperty('--mobile-repl-height', '0px');\n  };\n\n  const handleEditorEval = props.editorContainerProps?.handleEditorEval;\n  const handleTabChangeForRepl = React.useCallback(\n    (newTabId: SideContentType, prevTabId: SideContentType) => {\n      // Evaluate program upon pressing the run tab.\n      if (newTabId === SideContentType.mobileEditorRun) {\n        if (handleEditorEval) {\n          handleEditorEval();\n        }\n      }\n\n      // Show the REPL upon pressing the run tab if the previous tab is not listed below.\n      if (\n        newTabId === SideContentType.mobileEditorRun &&\n        !(\n          prevTabId === SideContentType.substVisualizer ||\n          prevTabId === SideContentType.autograder ||\n          prevTabId === SideContentType.testcases\n        )\n      ) {\n        handleShowRepl(-300);\n      } else {\n        handleHideRepl();\n      }\n\n      // Disable draggable REPL when on the files & stepper tab.\n      if (\n        newTabId === SideContentType.folder ||\n        newTabId === SideContentType.substVisualizer ||\n        (prevTabId === SideContentType.substVisualizer &&\n          newTabId === SideContentType.mobileEditorRun)\n      ) {\n        setIsDraggableReplDisabled(true);\n      } else {\n        setIsDraggableReplDisabled(false);\n      }\n    },\n    [handleEditorEval]\n  );\n\n  const onChange = props.mobileSideContentProps.onChange;\n  const onSideContentTabChange = React.useCallback(\n    (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      onChange(newTabId, prevTabId, event);\n      handleTabChangeForRepl(newTabId, prevTabId);\n    },\n    [handleTabChangeForRepl, onChange]\n  );\n\n  // Convert sidebar tabs with a side content tab ID into side content tabs.\n  const sideBarTabs: SideContentTab[] = props.sideBarProps.tabs.filter(tab => tab.id !== undefined);\n\n  const mobileEditorTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Editor',\n      iconName: IconNames.EDIT,\n      body: null,\n      id: SideContentType.mobileEditor\n    }),\n    []\n  );\n\n  const mobileRunTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Run',\n      iconName: IconNames.PLAY,\n      body: null,\n      id: SideContentType.mobileEditorRun\n    }),\n    []\n  );\n\n  const updatedMobileSideContentProps = React.useCallback(() => {\n    return {\n      ...props.mobileSideContentProps,\n      onChange: onSideContentTabChange,\n      tabs: {\n        beforeDynamicTabs: [\n          ...sideBarTabs,\n          mobileEditorTab,\n          ...(props.mobileSideContentProps.tabs?.beforeDynamicTabs ?? [])\n        ],\n        afterDynamicTabs: [\n          ...(props.mobileSideContentProps.tabs?.afterDynamicTabs ?? []),\n          mobileRunTab\n        ]\n      }\n    };\n  }, [\n    onSideContentTabChange,\n    mobileEditorTab,\n    mobileRunTab,\n    props.mobileSideContentProps,\n    sideBarTabs\n  ]);\n\n  const inAssessmentWorkspace =\n    props.mobileSideContentProps.workspaceLocation === 'assessment' ||\n    props.mobileSideContentProps.workspaceLocation === 'githubAssessment';\n\n  return (\n    <div className=\"workspace mobile-workspace\">\n      <Prompt\n        when={!!props.hasUnsavedChanges}\n        message={'You have changes that may not be saved. Are you sure you want to leave?'}\n      />\n\n      {/* Render the top ControlBar when it is the Assessment Workspace */}\n      {inAssessmentWorkspace && (\n        <ControlBar {...props.mobileSideContentProps.mobileControlBarProps} />\n      )}\n\n      <div>\n        <div className=\"mobile-editor-panel\">{createWorkspaceInput()}</div>\n        <MobileSideContent {...updatedMobileSideContentProps()} />\n      </div>\n\n      <DraggableRepl\n        key=\"repl\"\n        position={draggableReplPosition}\n        onDrag={onDrag}\n        disabled={isDraggableReplDisabled}\n        replProps={enableMobileKeyboardForRepl(props.replProps)}\n      />\n\n      <MobileKeyboard targetKeyboardInput={targetKeyboardInput} />\n    </div>\n  );\n};\n\nexport default MobileWorkspace;\n","import { Card, Classes, Elevation, Pre } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport { parseError } from 'js-slang';\nimport { stringify } from 'js-slang/dist/utils/stringify';\nimport React from 'react';\n\nimport { Testcase, TestcaseTypes } from '../../assessment/AssessmentTypes';\nimport { WorkspaceLocation } from '../../workspace/WorkspaceTypes';\n\ntype SideContentTestcaseCardProps = DispatchProps & StateProps & OwnProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  index: number;\n  testcase: Testcase;\n};\n\ntype OwnProps = {\n  workspaceLocation: WorkspaceLocation;\n};\n\nconst SideContentTestcaseCard: React.FunctionComponent<SideContentTestcaseCardProps> = props => {\n  const { index, testcase, handleTestcaseEval } = props;\n\n  const extraClasses = React.useMemo(() => {\n    const isEvaluated = testcase.result !== undefined || testcase.errors;\n    const isEqual = stringify(testcase.result) === testcase.answer;\n\n    return {\n      correct: isEvaluated && isEqual,\n      wrong: isEvaluated && !isEqual,\n      // opaque and secret testcases will be greyed in the GradingWorkspace\n      secret: testcase.type === TestcaseTypes.secret || testcase.type === TestcaseTypes.opaque\n    };\n  }, [testcase]);\n\n  const handleRunTestcase = React.useCallback(() => {\n    handleTestcaseEval(index);\n  }, [index, handleTestcaseEval]);\n\n  /**\n   * Note: There are 3 testcase types in the backend: public, opaque, secret\n   *\n   * Public testcases are always sent from the backend, and displayed for both\n   * students and staff/ admin in the AssessmentWorkspace and/ or GradingWorkspace.\n   *\n   * Opaque testcases are always sent from the backend, and are 'hidden' with a\n   * placeholder cell in the AssessmentWorkspace, but displayed in the\n   * GradingWorkspace albeit with grey CSS styling.\n   *\n   * Secret testcases are only sent from the backend when the grading endpoint is\n   * accessed (i.e. NOT sent in the AssessmentWorkspace). Thus they are only seen\n   * in the GradingWorkspace albeit with grey CSS styling, which is only accessible\n   * by staff/ admin.\n   *\n   * Extra info: The GitHubAssessmentWorkspace uses this testcase card component even\n   * though they only have public testcases (as of July 2021). Thus all testcases will\n   * be rendered in the GitHubAssessmentWorkspace for students.\n   */\n  return (\n    <div className={classNames('AutograderCard', extraClasses)} data-testid=\"AutograderCard\">\n      <Card className={Classes.INTERACTIVE} elevation={Elevation.ONE} onClick={handleRunTestcase}>\n        {testcase.type === TestcaseTypes.opaque && props.workspaceLocation === 'assessment' ? (\n          // Render a placeholder cell in place of the actual testcase data for opaque testcases\n          <Pre className=\"testcase-placeholder\" data-testid=\"testcase-placeholder\">\n            Hidden testcase\n          </Pre>\n        ) : (\n          <>\n            <Pre className=\"testcase-program\">{testcase.program}</Pre>\n            <Pre className=\"testcase-expected\">{testcase.answer}</Pre>\n            <Pre className=\"testcase-actual\" data-testid=\"testcase-actual\">\n              {testcase.errors\n                ? parseError(testcase.errors)\n                : testcase.result !== undefined\n                ? stringify(testcase.result)\n                : 'No Answer'}\n            </Pre>\n          </>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentTestcaseCard;\n","import { ButtonGroup } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\nimport { useResponsive, useTypedSelector } from 'src/commons/utils/Hooks';\n\nimport ControlButton from '../../ControlButton';\n\nexport type ControlBarGitHubLoginButtonProps = {\n  onClickLogIn: () => void;\n  onClickLogOut: () => void;\n};\n\n/**\n * GitHub buttons to be used for the GitHub-hosted mission interface.\n *\n * @param props Component properties\n */\nexport const ControlBarGitHubLoginButton: React.FC<ControlBarGitHubLoginButtonProps> = props => {\n  const { isMobileBreakpoint } = useResponsive();\n  const isLoggedIn =\n    useTypedSelector(store => store.session.githubOctokitObject).octokit !== undefined;\n\n  const loginButton = isLoggedIn ? (\n    <ControlButton label=\"Log Out\" icon={IconNames.GIT_BRANCH} onClick={props.onClickLogOut} />\n  ) : (\n    <ControlButton label=\"Log In\" icon={IconNames.GIT_BRANCH} onClick={props.onClickLogIn} />\n  );\n\n  return <ButtonGroup large={!isMobileBreakpoint}>{loginButton}</ButtonGroup>;\n};\n","import {\n  Alignment,\n  Button,\n  Classes,\n  Icon,\n  InputGroup,\n  Menu,\n  MenuItem,\n  Navbar,\n  NavbarGroup\n} from '@blueprintjs/core';\nimport { IconName, IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport { Octokit } from '@octokit/rest';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { GHAssessmentTypeOverview } from '../../../pages/githubAssessments/GitHubClassroom';\nimport { ControlBarGitHubLoginButton } from '../../controlBar/github/ControlBarGitHubLoginButton';\nimport { assessmentTypeLink } from '../../utils/ParamParseHelper';\n\ntype GitHubAssessmentsNavigationBarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  changeCourseHandler: (e: any) => void;\n  handleGitHubLogIn: () => void;\n  handleGitHubLogOut: () => void;\n};\n\ntype StateProps = {\n  octokit?: Octokit;\n  courses?: string[];\n  selectedCourse: string;\n  types?: string[];\n  assessmentTypeOverviews?: GHAssessmentTypeOverview[];\n};\n\n/**\n * The white navbar for the website. Should only be displayed when using GitHub-hosted missions.\n */\nconst GitHubAssessmentsNavigationBar: React.FC<GitHubAssessmentsNavigationBarProps> = props => {\n  const handleClick = (e: any) => {\n    props.changeCourseHandler(e);\n  };\n\n  return (\n    <Navbar className=\"NavigationBar secondary-navbar\">\n      <NavbarGroup align={Alignment.LEFT}>\n        {props.types?.map((type, idx) => {\n          return (\n            <NavLink\n              key={type}\n              to={`/githubassessments/${assessmentTypeLink(type)}`}\n              state={{\n                courses: props.courses,\n                assessmentTypeOverviews: props.assessmentTypeOverviews,\n                selectedCourse: props.selectedCourse\n              }}\n              className={({ isActive }) =>\n                classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL, {\n                  [Classes.ACTIVE]: isActive\n                })\n              }\n            >\n              <Icon icon={idx < 5 ? icons[idx] : icons[0]} />\n              <div className=\"hidden-xs hidden-sm\">{type}</div>\n            </NavLink>\n          );\n        })}\n      </NavbarGroup>\n      <NavbarGroup align={Alignment.RIGHT}>\n        {props.octokit !== undefined && props.types && props.types.length > 0 && (\n          <InputGroup\n            key=\"courseselect\"\n            disabled={true}\n            leftElement={\n              <Popover2\n                content={\n                  <Menu>\n                    {props.courses?.map((course: string) => (\n                      <MenuItem key={course} onClick={handleClick} text={course} />\n                    ))}\n                  </Menu>\n                }\n                placement={'bottom-end'}\n              >\n                <Button minimal={true} rightIcon=\"caret-down\" aria-label=\"choose\" />\n              </Popover2>\n            }\n            placeholder={'Select Course'}\n            onChange={props.changeCourseHandler}\n            value={props.selectedCourse}\n          />\n        )}\n        <ControlBarGitHubLoginButton\n          key=\"loginlogout\"\n          onClickLogIn={props.handleGitHubLogIn}\n          onClickLogOut={props.handleGitHubLogOut}\n        />\n      </NavbarGroup>\n    </Navbar>\n  );\n};\n\nconst icons: IconName[] = [\n  IconNames.FLAME,\n  IconNames.LIGHTBULB,\n  IconNames.PREDICTIVE_ANALYSIS,\n  IconNames.COMPARISON,\n  IconNames.MANUAL\n];\n\nexport default GitHubAssessmentsNavigationBar;\n","import {\n  Button,\n  Card,\n  Elevation,\n  H4,\n  H6,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Text\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useMemo } from 'react';\nimport { NavigateFunction, useNavigate } from 'react-router';\nimport { useResponsive } from 'src/commons/utils/Hooks';\n\nimport defaultCoverImage from '../../assets/default_cover_image.jpg';\nimport ContentDisplay from '../../commons/ContentDisplay';\nimport Markdown from '../../commons/Markdown';\nimport { GHAssessmentOverview } from './GitHubClassroom';\n\ntype GitHubAssessmentListingProps = {\n  assessmentOverviews?: GHAssessmentOverview[];\n  refreshAssessmentOverviews: () => void;\n};\n\n/**\n * A page that lists the missions available to the authenticated user.\n * This page should only be reachable if using a GitHub-hosted deployment.\n */\nconst GitHubAssessmentListing: React.FC<GitHubAssessmentListingProps> = props => {\n  const { isMobileBreakpoint } = useResponsive();\n  const navigate = useNavigate();\n\n  let display: JSX.Element;\n\n  const createAssessmentButton = useMemo(\n    () => (\n      <Button icon={IconNames.ADD} onClick={() => navigate(`/githubassessments/editor`)}>\n        Create a New Assessment!\n      </Button>\n    ),\n    [navigate]\n  );\n\n  const refreshButton = useMemo(\n    () => (\n      <Button icon={IconNames.REFRESH} onClick={props.refreshAssessmentOverviews}>\n        Refresh Assessments\n      </Button>\n    ),\n    [props.refreshAssessmentOverviews]\n  );\n\n  if (!props.assessmentOverviews) {\n    display = (\n      <>\n        {createAssessmentButton}\n        <NonIdealState description=\"Fetching assessment...\" icon={<Spinner />} />\n      </>\n    );\n  } else if (props.assessmentOverviews.length === 0) {\n    display = (\n      <>\n        {createAssessmentButton}\n        {refreshButton}\n        <NonIdealState title=\"There are no assessments.\" icon={IconNames.FLAME} />\n      </>\n    );\n  } else {\n    // Create cards\n    const cards = props.assessmentOverviews.map(element =>\n      convertAssessmentOverviewToCard(element, isMobileBreakpoint, navigate)\n    );\n    display = (\n      <>\n        {createAssessmentButton}\n        {refreshButton}\n        {cards}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"Assessment\" style={{ overflow: 'auto' }}>\n      <ContentDisplay display={display} loadContentDispatch={() => {}} />\n    </div>\n  );\n};\n\n/**\n * Maps from a BrowsableMission object to a JSX card that can be displayed on the Mission Listing.\n *\n * @param missionRepo The BrowsableMission representation of a single mission repository\n * @param isMobileBreakpoint Whether we are using mobile breakpoint\n */\nfunction convertAssessmentOverviewToCard(\n  assessmentOverview: GHAssessmentOverview,\n  isMobileBreakpoint: boolean,\n  navigate: NavigateFunction\n) {\n  const ratio = isMobileBreakpoint ? 5 : 3;\n  const ownerSlashName =\n    assessmentOverview.missionRepoData.repoOwner +\n    '/' +\n    assessmentOverview.missionRepoData.repoName;\n  const dueDate = assessmentOverview.dueDate.toDateString();\n\n  const hasDueDate = new Date(8640000000000000) > assessmentOverview.dueDate;\n  const isOverdue = new Date() > assessmentOverview.dueDate;\n\n  const assessmentNotAccepted = assessmentOverview.link !== undefined;\n  let buttonText = 'Open';\n  let handleClick = () => navigate(`/githubassessments/editor`, { state: assessmentOverview });\n\n  if (assessmentNotAccepted) {\n    buttonText = 'Accept';\n    handleClick = () => window.open(assessmentOverview.link);\n  } else if (isOverdue) {\n    buttonText = 'Review Answers';\n  }\n\n  return (\n    <div key={ownerSlashName}>\n      <Card className=\"row listing\" elevation={Elevation.ONE}>\n        <div className={`col-xs-${String(ratio)} listing-picture`}>\n          <img\n            alt=\"Assessment\"\n            className={`cover-image-${assessmentOverview.title}`}\n            src={assessmentOverview.coverImage ? assessmentOverview.coverImage : defaultCoverImage}\n          />\n        </div>\n\n        <div className={`col-xs-${String(12 - ratio)} listing-text`}>\n          <div className=\"listing-header\">\n            <Text ellipsize={true}>\n              <H4 className=\"listing-title\">{assessmentOverview.title}</H4>\n              <H6>{ownerSlashName}</H6>\n            </Text>\n          </div>\n\n          <div className=\"listing-description\">\n            <Markdown content={assessmentOverview.webSummary} />\n          </div>\n\n          <div className=\"listing-footer\">\n            <Text className=\"listing-due-date\">\n              <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.TIME} />\n              {hasDueDate ? 'Due: ' + dueDate : 'No due date'}\n            </Text>\n            <div className=\"listing-button\">\n              <Button icon={IconNames.PLAY} minimal={true} onClick={handleClick}>\n                <span className=\"custom-hidden-xxxs\">{buttonText}</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default GitHubAssessmentListing;\n","// extracted by mini-css-extract-plugin\nexport default {\"Application__main\":\"GithubAssessments_Application__main__i1gkd\",\"WorkspaceParent\":\"GithubAssessments_WorkspaceParent__G9QTU\",\"bp5-tag\":\"GithubAssessments_bp5-tag__59NjO\",\"badge\":\"GithubAssessments_badge__h746U\",\"bp5-overlay\":\"GithubAssessments_bp5-overlay__gAaRx\",\"bp5-popover-content\":\"GithubAssessments_bp5-popover-content__1o4L0\",\"badge-tag\":\"GithubAssessments_badge-tag__nPTWk\",\"missionBrowser\":\"GithubAssessments_missionBrowser__gt6-p\",\"missionLoading\":\"GithubAssessments_missionLoading__tNH6Q\",\"SideContentMissionEditor\":\"GithubAssessments_SideContentMissionEditor__jPyyQ\",\"SideContentMissionEditorRow\":\"GithubAssessments_SideContentMissionEditorRow__0G8qF\",\"SideContentMissionEditorLabelColumn\":\"GithubAssessments_SideContentMissionEditorLabelColumn__o8uDr\",\"SideContentMissionEditorOptionColumn\":\"GithubAssessments_SideContentMissionEditorOptionColumn__4BMYM\"};","import { IconNames } from '@blueprintjs/icons';\n\nimport ControlButton from '../../ControlButton';\n\ntype ControlBarDisplayMCQButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  displayMCQInEditor: () => void;\n  displayTextInEditor: () => void;\n};\n\ntype StateProps = {\n  mcqDisplayed: boolean;\n  key: string;\n};\n\nexport const ControlBarDisplayMCQButton: React.FC<ControlBarDisplayMCQButtonProps> = props => {\n  const label = props.mcqDisplayed ? 'Show MCQ Text' : 'Hide MCQ Text';\n  const behaviour = props.mcqDisplayed ? props.displayTextInEditor : props.displayMCQInEditor;\n\n  return <ControlButton label={label} icon={IconNames.REFRESH} onClick={behaviour} />;\n};\n","import { Octokit } from '@octokit/rest';\nimport {\n  GetResponseDataTypeFromEndpointMethod,\n  GetResponseTypeFromEndpointMethod\n} from '@octokit/types';\nimport { Chapter } from 'js-slang/dist/types';\nimport { isEqual } from 'lodash';\n\nimport { IMCQQuestion, Testcase } from '../assessment/AssessmentTypes';\nimport { showWarningMessage } from '../utils/notifications/NotificationsHelper';\nimport { MissionData, MissionMetadata, MissionRepoData, TaskData } from './GitHubMissionTypes';\n\nexport const maximumTasksPerMission = 20;\n\nconst jsonStringify = (object: any) => JSON.stringify(object, null, 4);\nconst convertTestsToSaveableJson = (tests: Testcase[]) => {\n  const saveableTests = tests.map((test: Testcase) => {\n    return {\n      answer: test.answer,\n      program: test.program,\n      score: test.score ? test.score : 0,\n      type: test.type ? test.type : 'public'\n    };\n  });\n  return jsonStringify(saveableTests);\n};\nconst identity = (content: any) => content;\n\n// 1) fileName: the name of the file corresponding to the named property\n// 2) isDefaultValue: function should return true if the input value is the default value of the property\n// 3) fromStringConverter: a function to be applied to raw text data to convert it into the property\n// 4) toStringConverter: a function to be applied to the property to convert it to raw text data\nconst taskDataPropertyTable = {\n  taskDescription: {\n    fileName: 'Problem.md',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  starterCode: {\n    fileName: 'StarterCode.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  savedCode: {\n    fileName: 'SavedCode.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  testPrepend: {\n    fileName: 'TestPrepend.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  testPostpend: {\n    fileName: 'TestPostpend.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  testCases: {\n    fileName: 'TestCases.json',\n    isDefaultValue: (value: Testcase[]) => value.length === 0,\n    fromStringConverter: JSON.parse,\n    toStringConverter: convertTestsToSaveableJson\n  }\n};\n\n/**\n * Retrieves mission information - such as the briefings, questions, metadata etc. from a GitHub Repository.\n *\n * @param missionRepoData Repository information where the mission is stored\n * @param octokit The Octokit instance for the authenticated user\n */\nexport async function getMissionData(missionRepoData: MissionRepoData, octokit: Octokit) {\n  const briefingStringPromise = getContentAsString(\n    missionRepoData.repoOwner,\n    missionRepoData.repoName,\n    'README.md',\n    octokit\n  );\n\n  const metadataStringPromise = getContentAsString(\n    missionRepoData.repoOwner,\n    missionRepoData.repoName,\n    '.metadata',\n    octokit\n  );\n\n  const tasksDataPromise = getTasksData(\n    missionRepoData.repoOwner,\n    missionRepoData.repoName,\n    octokit\n  );\n\n  const [briefingString, metadataString, tasksData] = await Promise.all([\n    briefingStringPromise,\n    metadataStringPromise,\n    tasksDataPromise\n  ]);\n  const missionMetadata = convertMetadataStringToMissionMetadata(metadataString);\n\n  const newMissionData: MissionData = {\n    missionRepoData: missionRepoData,\n    missionBriefing: briefingString,\n    missionMetadata: missionMetadata,\n    tasksData: tasksData\n  };\n\n  return newMissionData;\n}\n\n/**\n * Retrieves information regarding each task in the Mission from the GitHub repository.\n *\n * @param repoOwner The owner of the mission repository\n * @param repoName The name of the mission repository\n * @param octokit The Octokit instance for the authenticated user\n */\nasync function getTasksData(repoOwner: string, repoName: string, octokit: Octokit) {\n  const questions: TaskData[] = [];\n\n  if (octokit === undefined) {\n    return questions;\n  }\n\n  // Get files in root\n  type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n  const rootFolderContents: GetContentResponse = await octokit.repos.getContent({\n    owner: repoOwner,\n    repo: repoName,\n    path: ''\n  });\n\n  type GetContentData = GetResponseDataTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n  const files: GetContentData = rootFolderContents.data;\n\n  if (!Array.isArray(files)) {\n    return questions;\n  }\n\n  const promises = [];\n\n  for (let i = 1; i <= maximumTasksPerMission; i++) {\n    const questionFolderName = 'Q' + i;\n\n    // We make the assumption that there are no gaps in question numbering\n    // If the question does not exist, we may break\n    if (files.find(file => file.name === questionFolderName) === undefined) {\n      break;\n    }\n\n    promises.push(\n      octokit.repos\n        .getContent({\n          owner: repoOwner,\n          repo: repoName,\n          path: questionFolderName\n        })\n        .then((folderContents: GetContentResponse) => {\n          if (!Array.isArray(folderContents.data)) {\n            return;\n          }\n\n          const folderContentsAsArray = folderContents.data as any[];\n          const folderContentFileNames = folderContentsAsArray.map(\n            (file: any) => file.name as string\n          );\n\n          const properties = Object.keys(taskDataPropertyTable);\n\n          const filteredProperties = properties.filter((property: string) =>\n            folderContentFileNames.includes(taskDataPropertyTable[property].fileName)\n          );\n\n          const promises = filteredProperties.map(async (property: string) => {\n            const fileName = taskDataPropertyTable[property].fileName;\n\n            const stringContent = await getContentAsString(\n              repoOwner,\n              repoName,\n              questionFolderName + '/' + fileName,\n              octokit\n            );\n\n            return taskDataPropertyTable[property].fromStringConverter(stringContent);\n          });\n\n          return Promise.all(promises).then((stringContents: string[]) => {\n            const taskData: TaskData = {\n              questionNumber: i,\n              taskDescription: '',\n              starterCode: '',\n              savedCode: '',\n              testPrepend: '',\n              testPostpend: '',\n              testCases: []\n            };\n\n            for (let i = 0; i < stringContents.length; i++) {\n              taskData[filteredProperties[i]] = stringContents[i];\n            }\n\n            if (taskData.savedCode === '') {\n              taskData.savedCode = taskData.starterCode;\n            }\n\n            questions.push(taskData);\n          });\n        })\n        .catch(err => {\n          showWarningMessage('Error occurred while trying to retrieve file content', 1000);\n          console.error(err);\n        })\n    );\n  }\n  await Promise.all(promises);\n  questions.sort((a, b) => a.questionNumber - b.questionNumber);\n\n  return questions;\n}\n\n/**\n * Retrieves content from a single file on GitHub and returns it in string form.\n *\n * @param repoOwner The owner of the mission repository\n * @param repoName The name of the mission repository\n * @param filepath The path to the file to be retrieved\n * @param octokit The Octokit instance for the authenticated user\n */\nexport async function getContentAsString(\n  repoOwner: string,\n  repoName: string,\n  filepath: string,\n  octokit: Octokit\n) {\n  let contentString = '';\n\n  if (octokit === undefined) {\n    return contentString;\n  }\n\n  try {\n    type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n    const fileInfo: GetContentResponse = await octokit.repos.getContent({\n      owner: repoOwner,\n      repo: repoName,\n      path: filepath\n    });\n\n    contentString = Buffer.from((fileInfo.data as any).content, 'base64').toString();\n  } catch (err) {\n    showWarningMessage('Error occurred while trying to retrieve file content', 1000);\n    console.error(err);\n  }\n\n  return contentString;\n}\n\n/**\n * Converts the contents of the '.metadata' file into a MissionMetadata object.\n *\n * @param metadataString The file contents of the '.metadata' file of a mission repository\n */\nfunction convertMetadataStringToMissionMetadata(metadataString: string) {\n  try {\n    return JSON.parse(metadataString) as MissionMetadata;\n  } catch (err) {\n    console.error(err);\n    return {\n      sourceVersion: Chapter.SOURCE_4\n    } as MissionMetadata;\n  }\n}\n\nfunction convertMissionMetadataToMetadataString(missionMetadata: MissionMetadata) {\n  return jsonStringify(missionMetadata);\n}\n\n/**\n * Discovers files to be changed when saving to an existing GitHub repository\n * Return value is an array in the format [filenameToContentMap, foldersToDelete]\n * filenameToContentMap is an object whose key-value pairs are filenames and their new contents\n * foldersToDelete is an array containing the names of folders\n * @param missionMetadata The current MissionMetadata\n * @param cachedMissionMetadata The cached MissionMetadata\n * @param briefingContent The current briefing\n * @param cachedBriefingContent The cached briefing\n * @param taskList The current taskList\n * @param cachedTaskList The cached taskList\n * @param isTeacherMode If this is true, any changes to the saved code will be made to starter code instead\n */\nexport function discoverFilesToBeChangedWithMissionRepoData(\n  missionMetadata: MissionMetadata,\n  cachedMissionMetadata: MissionMetadata,\n  briefingContent: string,\n  cachedBriefingContent: string,\n  taskList: TaskData[],\n  cachedTaskList: TaskData[],\n  isTeacherMode: boolean\n): [any, string[]] {\n  const filenameToContentMap = {};\n  const foldersToDelete: string[] = [];\n\n  if (missionMetadata !== cachedMissionMetadata) {\n    filenameToContentMap['.metadata'] = convertMissionMetadataToMetadataString(missionMetadata);\n  }\n\n  if (briefingContent !== cachedBriefingContent) {\n    filenameToContentMap['README.md'] = briefingContent;\n  }\n\n  let i = 0;\n  while (i < taskList.length) {\n    const taskNumber = i + 1;\n    const questionFolderName = 'Q' + taskNumber;\n\n    if (taskNumber > cachedTaskList.length) {\n      // Look for files to create\n      filenameToContentMap[questionFolderName + '/StarterCode.js'] = taskList[i].savedCode;\n      filenameToContentMap[questionFolderName + '/Problem.md'] = taskList[i].taskDescription;\n\n      const propertiesToCheck = ['testCases', 'testPrepend', 'testPostpend'];\n\n      for (const propertyName of propertiesToCheck) {\n        const currentValue = taskList[i][propertyName];\n        const isDefaultValue = taskDataPropertyTable[propertyName].isDefaultValue(currentValue);\n\n        if (!isDefaultValue) {\n          const onRepoFileName =\n            questionFolderName + '/' + taskDataPropertyTable[propertyName].fileName;\n          const stringContent = taskDataPropertyTable[propertyName].toStringConverter(\n            taskList[i][propertyName]\n          );\n\n          filenameToContentMap[onRepoFileName] = stringContent;\n        }\n      }\n    } else {\n      // Look for files to edit\n      const propertiesToCheck = Object.keys(taskDataPropertyTable);\n\n      for (const propertyName of propertiesToCheck) {\n        const currentValue = taskList[i][propertyName];\n        const cachedValue = cachedTaskList[i][propertyName];\n\n        if (!isEqual(currentValue, cachedValue)) {\n          const onRepoFileName =\n            questionFolderName + '/' + taskDataPropertyTable[propertyName].fileName;\n          const stringContent = taskDataPropertyTable[propertyName].toStringConverter(\n            taskList[i][propertyName]\n          );\n\n          filenameToContentMap[onRepoFileName] = stringContent;\n        }\n      }\n\n      if (\n        isTeacherMode &&\n        filenameToContentMap[questionFolderName + '/' + taskDataPropertyTable['savedCode'].fileName]\n      ) {\n        // replace changes to savedCode with changes to starterCode\n        const savedCodeValue =\n          filenameToContentMap[\n            questionFolderName + '/' + taskDataPropertyTable['savedCode'].fileName\n          ];\n        delete filenameToContentMap[\n          questionFolderName + '/' + taskDataPropertyTable['savedCode'].fileName\n        ];\n        filenameToContentMap[\n          questionFolderName + '/' + taskDataPropertyTable['starterCode'].fileName\n        ] = savedCodeValue;\n      }\n    }\n    i++;\n  }\n\n  while (i < cachedTaskList.length) {\n    const taskNumber = i + 1;\n    foldersToDelete.push('Q' + taskNumber);\n    i++;\n  }\n\n  return [filenameToContentMap, foldersToDelete];\n}\n\n/**\n * Discovers files to be changed when saving to a new GitHub repository\n * @param missionMetadata The current MissionMetadata\n * @param briefingContent The current briefing\n * @param taskList The current taskList\n */\nexport function discoverFilesToBeCreatedWithoutMissionRepoData(\n  missionMetadata: MissionMetadata,\n  briefingContent: string,\n  taskList: TaskData[]\n) {\n  const filenameToContentMap = {};\n  filenameToContentMap['.metadata'] = convertMissionMetadataToMetadataString(missionMetadata);\n  filenameToContentMap['README.md'] = briefingContent;\n\n  const propertiesToCheck = ['testCases', 'testPrepend', 'testPostpend'];\n\n  for (let i = 0; i < taskList.length; i++) {\n    const taskNumber = i + 1;\n    const questionFolderName = 'Q' + taskNumber;\n\n    filenameToContentMap[questionFolderName + '/' + taskDataPropertyTable['starterCode'].fileName] =\n      taskList[i].savedCode;\n    filenameToContentMap[\n      questionFolderName + '/' + taskDataPropertyTable['taskDescription'].fileName\n    ] = taskList[i].taskDescription;\n\n    propertiesToCheck.forEach((propertyName: string) => {\n      const currentValue = taskList[i][propertyName];\n      const isDefaultValue = taskDataPropertyTable[propertyName].isDefaultValue(currentValue);\n\n      if (!isDefaultValue) {\n        const onRepoFileName =\n          questionFolderName + '/' + taskDataPropertyTable[propertyName].fileName;\n        const stringContent = taskDataPropertyTable[propertyName].toStringConverter(\n          taskList[i][propertyName]\n        );\n\n        filenameToContentMap[onRepoFileName] = stringContent;\n      }\n    });\n  }\n\n  return filenameToContentMap;\n}\n\n/**\n * Checks if the textual contents of a GitHub-hosted file is for an MCQ question, and converts it if so\n * returns an array of 2 values, a boolean and an IMCQQuestion\n * The boolean specifies whether the input corresponded to an MCQQuestion\n * The IMCQQuestion is only meaningful if the boolean is true, and contains the converted information\n * @param possibleMCQText The text to be checked and converted\n */\nexport function convertToMCQQuestionIfMCQText(possibleMCQText: string): [boolean, IMCQQuestion] {\n  let isMCQText = false;\n  const mcqQuestion = {\n    answer: 0,\n    choices: [],\n    solution: -1,\n    type: 'mcq',\n    content: '',\n    grade: 0,\n    id: 0,\n    library: { chapter: Chapter.SOURCE_4, external: { name: 'NONE', symbols: [] }, globals: [] },\n    maxGrade: 0,\n    xp: 0,\n    maxXp: 0\n  } as IMCQQuestion;\n\n  const trimmedText = possibleMCQText.trim();\n\n  if (trimmedText.substring(0, 3).toLowerCase() === 'mcq') {\n    isMCQText = true;\n  }\n\n  if (isMCQText) {\n    const onlyQuestionInformation = trimmedText.substring(3, trimmedText.length);\n    try {\n      const intermediateObject = JSON.parse(onlyQuestionInformation);\n\n      const studentAnswer = intermediateObject.answer;\n      const intermediateChoices = intermediateObject.choices as any[];\n      const choices = intermediateChoices.map((question: { option: string; hint: string }) => {\n        return {\n          content: question.option,\n          hint: question.hint\n        };\n      });\n      const solution = intermediateObject.solution;\n\n      mcqQuestion.answer = studentAnswer;\n      mcqQuestion.choices = choices;\n      mcqQuestion.solution = solution;\n    } catch (err) {\n      isMCQText = false;\n    }\n  }\n\n  return [isMCQText, mcqQuestion];\n}\n\n/**\n * Converts an IMCQQuestion object into textual contents to be saved to a GitHub repository\n * @param mcq The IMCQQuestion object\n */\nexport function convertIMCQQuestionToMCQText(mcq: IMCQQuestion) {\n  const studentAnswer = mcq.answer;\n  const choices = mcq.choices.map((choice: { content: string; hint: string | null }) => {\n    return {\n      option: choice.content,\n      hint: choice.hint\n    };\n  });\n  const solution = mcq.solution;\n\n  const json = {\n    choices: choices,\n    answer: studentAnswer,\n    solution: solution\n  };\n\n  return 'MCQ\\n' + jsonStringify(json);\n}\n","import { IconNames } from '@blueprintjs/icons';\n\nimport ControlButton from '../../ControlButton';\nimport { maximumTasksPerMission } from '../../githubAssessments/GitHubMissionDataUtils';\nimport { showWarningMessage } from '../../utils/notifications/NotificationsHelper';\n\nexport type ControlBarTaskAddButtonProps = {\n  addNewQuestion: () => void;\n  numberOfTasks: number;\n  key: string;\n};\n\nexport const ControlBarTaskAddButton: React.FC<ControlBarTaskAddButtonProps> = props => {\n  function onClickAdd() {\n    if (props.numberOfTasks === maximumTasksPerMission) {\n      showWarningMessage(\n        'Cannot have more than ' + maximumTasksPerMission + ' Tasks in a Mission!'\n      );\n      return;\n    }\n\n    props.addNewQuestion();\n  }\n\n  return <ControlButton label=\"Add Task\" icon={IconNames.ADD} onClick={onClickAdd} />;\n};\n","import { IconNames } from '@blueprintjs/icons';\n\nimport ControlButton from '../../ControlButton';\nimport { showSimpleConfirmDialog } from '../../utils/DialogHelper';\nimport { showWarningMessage } from '../../utils/notifications/NotificationsHelper';\n\nexport type ControlBarTaskDeleteButtonProps = {\n  deleteCurrentQuestion: () => void;\n  numberOfTasks: number;\n  key: string;\n};\n\nexport const ControlBarTaskDeleteButton: React.FC<ControlBarTaskDeleteButtonProps> = props => {\n  async function onClickDelete() {\n    if (props.numberOfTasks <= 1) {\n      showWarningMessage('Cannot delete the only remaining task!');\n      return;\n    }\n\n    const confirmDelete = await showSimpleConfirmDialog({\n      contents: (\n        <div>\n          <p>Warning: you are about to delete a task.</p>\n          <p>This action cannot be undone.</p>\n          <p>Please click 'Confirm' to continue, or 'Cancel' to go back.</p>\n        </div>\n      ),\n      negativeLabel: 'Cancel',\n      positiveIntent: 'primary',\n      positiveLabel: 'Confirm'\n    });\n\n    if (confirmDelete) {\n      props.deleteCurrentQuestion();\n    }\n  }\n\n  return (\n    <ControlButton label=\"Delete Current Task\" icon={IconNames.DELETE} onClick={onClickDelete} />\n  );\n};\n","import { AnchorButton, Button, Classes, Dialog, InputGroup, Intent } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport classes from 'src/styles/GithubAssessments.module.scss';\n\nimport { showWarningMessage } from '../utils/notifications/NotificationsHelper';\n\nexport type GitHubMissionCreateDialogResolution = {\n  confirmSave: boolean;\n  repoName: string;\n};\n\nexport type GitHubMissionCreateDialogProps = {\n  filesToCreate: string[];\n  userLogin: string;\n  resolveDialog: (arg: GitHubMissionCreateDialogResolution) => void;\n};\n\nexport const GitHubMissionCreateDialog: React.FC<GitHubMissionCreateDialogProps> = props => {\n  const [repositoryName, setrepositoryName] = useState('sa-new-mission-repository');\n\n  return (\n    <Dialog className={classes['missionBrowser']} isOpen={true}>\n      <div className={classNames('githubDialogHeader', Classes.DIALOG_HEADER)}>\n        <h3>Please confirm your save</h3>\n      </div>\n      <div className={classNames('githubDialogBody', Classes.DIALOG_BODY)}>\n        <div>\n          <h4>This will create a repository owned by {props.userLogin} with the title:</h4>\n          <InputGroup\n            onChange={handleTitleChange}\n            placeholder={'Enter Repository Title'}\n            value={repositoryName}\n          />\n        </div>\n        <div>\n          <h4>This repository will be created with following files:</h4>\n          {props.filesToCreate.map(filepath => (\n            <li key={filepath}>{filepath}</li>\n          ))}\n        </div>\n      </div>\n\n      <div className={classNames(Classes.DIALOG_FOOTER)}>\n        <div className={classNames(Classes.DIALOG_FOOTER_ACTIONS)}>\n          <Button onClick={handleClose}>Close</Button>\n          <AnchorButton onClick={handleConfirm} intent={Intent.PRIMARY}>\n            Confirm\n          </AnchorButton>\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  function handleTitleChange(event: any) {\n    setrepositoryName(event.target.value);\n  }\n\n  function handleClose() {\n    props.resolveDialog({\n      confirmSave: false,\n      repoName: ''\n    });\n  }\n\n  function handleConfirm() {\n    if (repositoryName === '') {\n      showWarningMessage('Cannot create repository without title!', 2000);\n      return;\n    }\n\n    props.resolveDialog({\n      confirmSave: true,\n      repoName: repositoryName\n    });\n  }\n};\n","import { TextArea } from '@blueprintjs/core';\nimport React, { useEffect } from 'react';\n\nimport Markdown from '../../../Markdown';\n\nexport type SideContentMarkdownEditorProps = {\n  allowEdits: boolean;\n  content: string;\n  setContent: (content: string) => void;\n};\n\nconst SideContentMarkdownEditor: React.FC<SideContentMarkdownEditorProps> = props => {\n  const [editorModeOn, setEditorModeOn] = React.useState(false);\n  const allowEdits = props.allowEdits;\n\n  const node = React.useRef() as any;\n\n  useEffect(() => {\n    function handleClick(event: any) {\n      if (!allowEdits) {\n        return;\n      }\n\n      if (node.current && !node.current.contains(event.target)) {\n        setEditorModeOn(false);\n      }\n\n      if (node.current && node.current.contains(event.target)) {\n        setEditorModeOn(true);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [allowEdits]);\n\n  return (\n    <div ref={node}>\n      {editorModeOn ? (\n        <TextArea\n          onChange={onEditorChange}\n          fill={true}\n          growVertically={true}\n          defaultValue={props.content}\n        />\n      ) : (\n        <Markdown content={props.content} openLinksInNewWindow={true} />\n      )}\n    </div>\n  );\n\n  function onEditorChange(event: any) {\n    props.setContent(event.target.value);\n  }\n};\n\nexport default SideContentMarkdownEditor;\n","import { Label } from '@blueprintjs/core';\nimport { Chapter } from 'js-slang/dist/types';\nimport React from 'react';\nimport classes from 'src/styles/GithubAssessments.module.scss';\n\nimport { SALanguage } from '../../../application/ApplicationTypes';\nimport { ControlBarChapterSelect } from '../../../controlBar/ControlBarChapterSelect';\nimport { MissionMetadata } from '../../../githubAssessments/GitHubMissionTypes';\nimport Constants from '../../../utils/Constants';\n\nexport type SideContentMissionEditorProps = {\n  isFolderModeEnabled: boolean;\n  missionMetadata: MissionMetadata;\n  setMissionMetadata: (missionMetadata: MissionMetadata) => void;\n};\n\nconst SideContentMissionEditor: React.FC<SideContentMissionEditorProps> = props => {\n  return (\n    <div className={classes['SideContentMissionEditor']}>\n      <div className={classes['SideContentMissionEditorRow']}>\n        <div className={classes['SideContentMissionEditorLabelColumn']}>\n          <Label>Source Version</Label>\n        </div>\n        <div className={classes['SideContentMissionEditorOptionColumn']}>\n          <ControlBarChapterSelect\n            isFolderModeEnabled={props.isFolderModeEnabled}\n            sourceChapter={props.missionMetadata.sourceVersion}\n            sourceVariant={Constants.defaultSourceVariant}\n            key=\"chapter\"\n            disabled={false}\n            handleChapterSelect={handleChapterSelect}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  function setMissionMetadataWrapper<T>(changedProperty: string, newValue: T) {\n    const newMetadata = Object.assign({}, props.missionMetadata);\n    newMetadata[changedProperty] = newValue;\n    props.setMissionMetadata(newMetadata);\n  }\n\n  function handleChapterSelect(i: SALanguage, e?: React.SyntheticEvent<HTMLElement>) {\n    setMissionMetadataWrapper<Chapter>('sourceVersion', i.chapter);\n  }\n};\n\nexport default SideContentMissionEditor;\n","import React from 'react';\n\nimport SideContentMarkdownEditor from './SideContentMarkdownEditor';\n\nexport type SideContentTaskEditorProps = {\n  allowEdits: boolean;\n  currentTaskNumber: number;\n  taskDescriptions: any[];\n  setTaskDescriptions: (newList: any[]) => void;\n};\n\nconst SideContentTaskEditor: React.FC<SideContentTaskEditorProps> = props => {\n  const taskIndex = props.currentTaskNumber - 1;\n  const taskDescriptions = props.taskDescriptions;\n  const setTaskDescriptions = props.setTaskDescriptions;\n\n  const indexOutOfRange =\n    taskIndex < 0 || taskIndex >= taskDescriptions.length || taskDescriptions.length === 0;\n\n  const taskBriefing = indexOutOfRange\n    ? 'Welcome to Mission Mode! This is where the Task Briefing for each question will appear!'\n    : taskDescriptions[taskIndex];\n\n  const taskBriefingSetter = React.useCallback(\n    (newDescription: string) => {\n      if (indexOutOfRange) {\n        return;\n      }\n\n      const newTaskDescriptions = taskDescriptions.map(desc => desc);\n      newTaskDescriptions[taskIndex] = newDescription;\n      setTaskDescriptions(newTaskDescriptions);\n    },\n    [setTaskDescriptions, taskDescriptions, taskIndex, indexOutOfRange]\n  );\n\n  return (\n    <div>\n      <SideContentMarkdownEditor\n        allowEdits={props.allowEdits}\n        content={taskBriefing}\n        setContent={taskBriefingSetter}\n      />\n    </div>\n  );\n};\n\nexport default SideContentTaskEditor;\n","import { Button, Card, Classes, Elevation, InputGroup } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport { parseError } from 'js-slang';\nimport { stringify } from 'js-slang/dist/utils/stringify';\nimport React from 'react';\n\nimport { Testcase, TestcaseTypes } from '../../../assessment/AssessmentTypes';\n\ntype SideContentEditableTestcaseCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  setTestcaseProgram: (newProgram: string) => void;\n  setTestcaseExpectedResult: (newExpectedResult: string) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  deleteTestcase: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  index: number;\n  testcase: Testcase;\n};\n\nconst SideContentEditableTestcaseCard: React.FunctionComponent<\n  SideContentEditableTestcaseCardProps\n> = props => {\n  const {\n    index,\n    testcase,\n    setTestcaseProgram,\n    setTestcaseExpectedResult,\n    handleTestcaseEval,\n    deleteTestcase\n  } = props;\n\n  // TODO (Refactor): testcase type seems unused in GitHub Assessments\n  const extraClasses = React.useMemo(() => {\n    const isEvaluated = testcase.result !== undefined || testcase.errors;\n    const isEqual = stringify(testcase.result) === testcase.answer;\n\n    return {\n      correct: isEvaluated && isEqual,\n      wrong: isEvaluated && !isEqual,\n      secret: testcase.type === TestcaseTypes.secret || testcase.type === TestcaseTypes.opaque\n    };\n  }, [testcase]);\n\n  const handleRunTestcase = React.useCallback(() => {\n    handleTestcaseEval(index);\n  }, [index, handleTestcaseEval]);\n\n  const testProgram = testcase.program;\n  const expectedAnswer = testcase.answer;\n\n  const playButton = (\n    <Button className=\"testcase-button\" icon={IconNames.PLAY} onClick={handleRunTestcase} />\n  );\n  const deleteButton = (\n    <Button\n      className=\"testcase-button\"\n      icon={IconNames.DELETE}\n      onClick={() => deleteTestcase(index)}\n    />\n  );\n\n  const answer = React.useMemo(() => {\n    let answer = 'No Answer';\n    if (testcase.errors) {\n      answer = parseError(testcase.errors);\n    } else {\n      if (testcase.result !== undefined) {\n        answer = stringify(testcase.result) as string;\n      }\n    }\n    return answer;\n  }, [testcase]);\n\n  return (\n    <div className={classNames('EditableAutograderCard', extraClasses)}>\n      <Card className={Classes.INTERACTIVE} elevation={Elevation.ONE}>\n        {\n          <>\n            <InputGroup\n              className=\"testcase-program\"\n              value={testProgram}\n              onChange={(event: any) => setTestcaseProgram(event.target.value)}\n            />\n            <InputGroup\n              className=\"testcase-expected\"\n              value={expectedAnswer}\n              onChange={(event: any) => setTestcaseExpectedResult(event.target.value)}\n            />\n            <InputGroup className=\"testcase-actual\" value={answer} readOnly={true} />\n          </>\n        }\n        {playButton}\n        {deleteButton}\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentEditableTestcaseCard;\n","import { Button, Collapse, Icon, PopoverPosition } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\nimport AceEditor from 'react-ace';\n\nimport { Testcase } from '../../../assessment/AssessmentTypes';\nimport ControlButton from '../../../ControlButton';\nimport { showSimpleConfirmDialog } from '../../../utils/DialogHelper';\nimport SideContentTestcaseCard from '../../content/SideContentTestcaseCard';\nimport SideContentEditableTestcaseCard from './SideContentEditableTestcaseCard';\n\nexport type SideContentTestcaseEditorProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n  setTaskTestcases: (newTestcases: Testcase[]) => void;\n  setTestPrepend: (newTestPrepend: string) => void;\n  setTestPostpend: (newTestPostpend: string) => void;\n};\n\ntype StateProps = {\n  allowEdits: boolean;\n  testcases: Testcase[];\n  testPrepend: string;\n  testPostpend: string;\n};\n\nconst SideContentTestcaseEditor: React.FunctionComponent<\n  SideContentTestcaseEditorProps\n> = props => {\n  const [showsTestPrepend, setTestPrependShown] = React.useState<boolean>(true);\n  const [showsTestPostpend, setTestPostpendShown] = React.useState<boolean>(true);\n  const [showsTestcases, setTestcasesShown] = React.useState<boolean>(true);\n\n  const {\n    testcases,\n    testPrepend,\n    testPostpend,\n    allowEdits,\n    handleTestcaseEval,\n    setTaskTestcases,\n    setTestPrepend,\n    setTestPostpend\n  } = props;\n\n  const setTestcaseProgramSetterCreator = React.useCallback(\n    (testcaseId: number) => {\n      return (newProgram: string) => {\n        const newTestcases = testcases.map((testcase: Testcase) => Object.assign({}, testcase));\n        newTestcases[testcaseId].program = newProgram;\n        delete newTestcases[testcaseId].result;\n        setTaskTestcases(newTestcases);\n      };\n    },\n    [setTaskTestcases, testcases]\n  );\n\n  const setTestcaseExpectedResultSetterCreator = React.useCallback(\n    (testcaseId: number) => {\n      return (newExpectedResult: string) => {\n        const newTestcases = testcases.map((testcase: Testcase) => Object.assign({}, testcase));\n        newTestcases[testcaseId].answer = newExpectedResult;\n        delete newTestcases[testcaseId].result;\n        setTaskTestcases(newTestcases);\n      };\n    },\n    [setTaskTestcases, testcases]\n  );\n\n  const addTestcase = React.useCallback(() => {\n    const newTestcases = [...testcases];\n    newTestcases.push({\n      answer: '',\n      program: '',\n      score: 0,\n      type: 'public'\n    });\n    setTaskTestcases(newTestcases);\n  }, [testcases, setTaskTestcases]);\n\n  const deleteTestcase = React.useCallback(\n    async (testcaseId: number) => {\n      const confirmDelete = await showSimpleConfirmDialog({\n        title: 'confirm testcase deletion',\n        contents: 'Are you sure you want to delete this testcase? This cannot be undone.',\n        positiveLabel: 'Confirm',\n        negativeLabel: 'Cancel'\n      });\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      const newTestcases = testcases.slice(0, testcaseId).concat(testcases.slice(testcaseId + 1));\n      setTaskTestcases(newTestcases);\n    },\n    [testcases, setTaskTestcases]\n  );\n\n  const convertToTestcaseCard = React.useCallback(\n    (testcase: Testcase, index: number) => {\n      if (allowEdits) {\n        return (\n          <SideContentEditableTestcaseCard\n            key={index}\n            index={index}\n            testcase={testcase}\n            setTestcaseProgram={setTestcaseProgramSetterCreator(index)}\n            setTestcaseExpectedResult={setTestcaseExpectedResultSetterCreator(index)}\n            deleteTestcase={deleteTestcase}\n            handleTestcaseEval={handleTestcaseEval}\n          />\n        );\n      } else {\n        return (\n          <SideContentTestcaseCard\n            key={index}\n            index={index}\n            testcase={testcase}\n            handleTestcaseEval={handleTestcaseEval}\n            workspaceLocation=\"githubAssessment\"\n          />\n        );\n      }\n    },\n    [\n      allowEdits,\n      deleteTestcase,\n      handleTestcaseEval,\n      setTestcaseProgramSetterCreator,\n      setTestcaseExpectedResultSetterCreator\n    ]\n  );\n\n  const testcaseCards = React.useMemo(\n    () =>\n      testcases.length > 0 ? (\n        <div className=\"testcaseCards\">\n          {testcasesHeader}\n          {testcases.map((testcase, index) => convertToTestcaseCard(testcase, index))}\n        </div>\n      ) : (\n        <div className=\"noResults\">There are no testcases provided for this question.</div>\n      ),\n    [testcases, convertToTestcaseCard]\n  );\n\n  const createTestCaseButton = React.useMemo(\n    () => (\n      <Button\n        className=\"collapse-button\"\n        icon={IconNames.ADD}\n        minimal={true}\n        text={'Add a new testcase'}\n        onClick={addTestcase}\n      />\n    ),\n    [addTestcase]\n  );\n\n  const toggleTestPrepend = React.useCallback(() => {\n    setTestPrependShown(!showsTestPrepend);\n  }, [showsTestPrepend]);\n\n  const toggleTestPostpend = React.useCallback(() => {\n    setTestPostpendShown(!showsTestPostpend);\n  }, [showsTestPostpend]);\n\n  const toggleTestcases = React.useCallback(() => {\n    setTestcasesShown(!showsTestcases);\n  }, [showsTestcases]);\n\n  return (\n    <div className=\"Autograder\">\n      <Button\n        className=\"collapse-button\"\n        icon={showsTestcases ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n        minimal={true}\n        onClick={toggleTestcases}\n      >\n        <span>Testcases</span>\n        <Tooltip2 content={autograderTooltip} placement={PopoverPosition.LEFT}>\n          <Icon icon={IconNames.HELP} />\n        </Tooltip2>\n      </Button>\n      <Collapse isOpen={showsTestcases} keepChildrenMounted={true}>\n        <div className=\"testcaseeditor-subcomponent\">\n          {testcaseCards}\n          {allowEdits && createTestCaseButton}\n        </div>\n      </Collapse>\n\n      {allowEdits && collapseButton('Testcase Prepend', showsTestPrepend, toggleTestPrepend)}\n      {allowEdits && (\n        <Collapse isOpen={showsTestPrepend} keepChildrenMounted={true}>\n          <div className=\"testcaseeditor-subcomponent\">\n            {createEditor(testPrepend, (newValue: string) => setTestPrepend(newValue))}\n          </div>\n        </Collapse>\n      )}\n\n      {allowEdits && collapseButton('Testcase Postpend', showsTestPostpend, toggleTestPostpend)}\n      {allowEdits && (\n        <Collapse isOpen={showsTestPostpend} keepChildrenMounted={true}>\n          <div className=\"testcaseeditor-subcomponent\">\n            {createEditor(testPostpend, (newValue: string) => setTestPostpend(newValue))}\n          </div>\n        </Collapse>\n      )}\n    </div>\n  );\n};\n\nfunction createEditor(value: string, onChange: (newValue: string) => void) {\n  return (\n    <AceEditor\n      className=\"react-ace\"\n      fontSize={14}\n      highlightActiveLine={false}\n      mode=\"javascript\"\n      onChange={onChange}\n      theme=\"source\"\n      value={value}\n      width=\"100%\"\n      height=\"16rem\"\n    />\n  );\n}\n\nconst autograderTooltip = (\n  <div className=\"autograder-help-tooltip\">\n    <p>Click on each testcase below to execute it with the program in the editor.</p>\n    <p>\n      To execute all testcases at once, evaluate the program in the editor with this tab active.\n    </p>\n    <p>A green or red background indicates a passed or failed testcase respectively.</p>\n    <p>Private testcases (only visible to staff when grading) have a grey background.</p>\n  </div>\n);\n\nconst columnHeader = (colClass: string, colTitle: string) => (\n  <div className={colClass}>\n    {colTitle}\n    <Icon icon={IconNames.CARET_DOWN} />\n  </div>\n);\n\nconst testcasesHeader = (\n  <div className=\"testcases-header\">\n    {columnHeader('header-fn', 'Testcase')}\n    {columnHeader('header-expected', 'Expected result')}\n    {columnHeader('header-actual', 'Actual result')}\n  </div>\n);\n\nconst collapseButton = (label: string, isOpen: boolean, toggleFunc: () => void) => (\n  <ControlButton\n    label={label}\n    icon={isOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n    onClick={toggleFunc}\n    options={{ className: 'collapse-button', minimal: true }}\n  />\n);\n\nexport default SideContentTestcaseEditor;\n","import { Chapter } from 'js-slang/dist/types';\n\nimport { IMCQQuestion } from '../../commons/assessment/AssessmentTypes';\nimport { MissionMetadata, TaskData } from '../../commons/githubAssessments/GitHubMissionTypes';\n\nexport const defaultMissionBriefing = `### Assignment Briefing (Click to Edit!)\nWelcome to Assignment Creator! This is where the Briefing for each assignment will appear.\n\nIf you are on the SourceAcademy website, you may edit **this section** by clicking on it. You can also add or delete questions through the control bar.\n\nThe text written here will show up as the \\`README.md\\` file on the GitHub repository.\n\nPlease also refer to our instructor's guide [here](https://github.com/source-academy/general/tree/master/instructor/github) to learn more about how to use this website.\n\n### Brief Markdown Cheatsheet\nEverything here is written in Markdown.\n\nThis means that you can **bolden** or *italicize* text by adding asterisks.\n\nPrograms can be formatted through the use of triple backticks:\n\\`\\`\\`\n// This is a program example\n\\`\\`\\`\nIf you want to in-line program snippets, rather than display it as a block, you can also use single backticks like \\`this\\`.\n\nLists can be created by adding dashes to the start of a line:\n- First element\n- Second element\n- Third element\n\n\nIt is also possible to embed images, like this:\n\n![an embedded image](https://avatars.githubusercontent.com/u/35620705?s=400&u=32f72fd1d65a0d6877ad1d5870ffa327dda754f1&v=4)\n\nIf you need a more detailed cheatsheet, please click [here](https://www.markdownguide.org/cheat-sheet/)!\n`;\n\nexport const defaultTaskDescription = `### Problem Description (Click to Edit!)\nWelcome to the Assignment Creator! This is where the problem description specific to each problem should be written.\n\nIf you are on the SourceAcademy website, you may edit **this section** by clicking on it. You can also add or delete questions through the control bar.\n\nIf you would like to add new questions outside of the website, simply duplicate this folder, and edit the \\`Problem.md\\` and \\`StarterCode.js\\` files accordingly. Make sure that the folders are named 'Q1', 'Q2', 'Q3' and so on.\n\nPlease also refer to our instructor's guide [here](https://github.com/source-academy/general/tree/master/instructor/github).\n\n### Brief Markdown Cheatsheet\nEverything here is written in Markdown.\n\nThis means that you can **bolden** or *italicize* text by adding asterisks.\n\nPrograms can be formatted through the use of triple backticks:\n\\`\\`\\`\n// This is a program example\n\\`\\`\\`\nIf you want to in-line program snippets, rather than display it as a block, you can also use single backticks like \\`this\\`.\n\nLists can be created by adding dashes to the start of a line:\n- First element\n- Second element\n- Third element\n\n\nIt is also possible to embed images, like this:\n\n![an embedded image](https://avatars.githubusercontent.com/u/35620705?s=400&u=32f72fd1d65a0d6877ad1d5870ffa327dda754f1&v=4)\n\nIf you need a more detailed cheatsheet, please click [here](https://www.markdownguide.org/cheat-sheet/)!\n`;\n\nexport const defaultStarterCode = '// Your program here!\\n';\n\nexport const defaultMissionMetadata = {\n  sourceVersion: Chapter.SOURCE_1\n} as MissionMetadata;\n\nexport const defaultTask = {\n  questionNumber: 0,\n  taskDescription: defaultTaskDescription,\n  starterCode: defaultStarterCode,\n  savedCode: defaultStarterCode,\n  testPrepend: '',\n  testPostpend: '',\n  testCases: []\n} as TaskData;\n\nexport const defaultMCQQuestion = {\n  answer: -1,\n  choices: [],\n  solution: -1,\n  type: 'mcq',\n  content: '',\n  grade: 0,\n  id: 0,\n  library: { chapter: Chapter.SOURCE_4, external: { name: 'NONE', symbols: [] }, globals: [] },\n  maxGrade: 0,\n  xp: 0,\n  maxXp: 0\n} as IMCQQuestion;\n","import {\n  Button,\n  Card,\n  Classes,\n  Dialog,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { GetResponseTypeFromEndpointMethod } from '@octokit/types';\nimport classNames from 'classnames';\nimport { Chapter, Variant } from 'js-slang/dist/types';\nimport { isEqual } from 'lodash';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router';\nimport { SideContentProps } from 'src/commons/sideContent/SideContent';\nimport { changeSideContentHeight } from 'src/commons/sideContent/SideContentActions';\nimport { useSideContent } from 'src/commons/sideContent/SideContentHelper';\nimport { useResponsive, useTypedSelector } from 'src/commons/utils/Hooks';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  removeEditorTab,\n  runAllTestcases,\n  setEditorBreakpoint,\n  updateActiveEditorTabIndex,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateReplValue,\n  updateWorkspace\n} from 'src/commons/workspace/WorkspaceActions';\nimport classes from 'src/styles/GithubAssessments.module.scss';\n\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Testcase } from '../../commons/assessment/AssessmentTypes';\nimport { ControlBarProps } from '../../commons/controlBar/ControlBar';\nimport { ControlBarChapterSelect } from '../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../../commons/controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../../commons/controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../../commons/controlBar/ControlBarQuestionViewButton';\nimport { ControlBarResetButton } from '../../commons/controlBar/ControlBarResetButton';\nimport { ControlBarRunButton } from '../../commons/controlBar/ControlBarRunButton';\nimport { ControlButtonSaveButton } from '../../commons/controlBar/ControlBarSaveButton';\nimport { ControlBarDisplayMCQButton } from '../../commons/controlBar/github/ControlBarDisplayMCQButton';\nimport { ControlBarTaskAddButton } from '../../commons/controlBar/github/ControlBarTaskAddButton';\nimport { ControlBarTaskDeleteButton } from '../../commons/controlBar/github/ControlBarTaskDeleteButton';\nimport {\n  convertEditorTabStateToProps,\n  NormalEditorContainerProps\n} from '../../commons/editor/EditorContainer';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport {\n  GitHubMissionCreateDialog,\n  GitHubMissionCreateDialogProps,\n  GitHubMissionCreateDialogResolution\n} from '../../commons/githubAssessments/GitHubMissionCreateDialog';\nimport {\n  convertIMCQQuestionToMCQText,\n  convertToMCQQuestionIfMCQText,\n  discoverFilesToBeChangedWithMissionRepoData,\n  discoverFilesToBeCreatedWithoutMissionRepoData,\n  getMissionData\n} from '../../commons/githubAssessments/GitHubMissionDataUtils';\nimport {\n  MissionData,\n  MissionMetadata,\n  MissionRepoData,\n  TaskData\n} from '../../commons/githubAssessments/GitHubMissionTypes';\nimport Markdown from '../../commons/Markdown';\nimport { MobileSideContentProps } from '../../commons/mobileWorkspace/mobileSideContent/MobileSideContent';\nimport MobileWorkspace, {\n  MobileWorkspaceProps\n} from '../../commons/mobileWorkspace/MobileWorkspace';\nimport SideContentMarkdownEditor from '../../commons/sideContent/content/githubAssessments/SideContentMarkdownEditor';\nimport SideContentMissionEditor from '../../commons/sideContent/content/githubAssessments/SideContentMissionEditor';\nimport SideContentTaskEditor from '../../commons/sideContent/content/githubAssessments/SideContentTaskEditor';\nimport SideContentTestcaseEditor from '../../commons/sideContent/content/githubAssessments/SideContentTestcaseEditor';\nimport { SideContentTab, SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport Constants from '../../commons/utils/Constants';\nimport { promisifyDialog, showSimpleConfirmDialog } from '../../commons/utils/DialogHelper';\nimport { showWarningMessage } from '../../commons/utils/notifications/NotificationsHelper';\nimport Workspace, { WorkspaceProps } from '../../commons/workspace/Workspace';\nimport { WorkspaceLocation, WorkspaceState } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  checkIfFileCanBeSavedAndGetSaveType,\n  getGitHubOctokitInstance,\n  performCreatingSave,\n  performFolderDeletion,\n  performOverwritingSave\n} from '../../features/github/GitHubUtils';\nimport {\n  defaultMCQQuestion,\n  defaultMissionBriefing,\n  defaultMissionMetadata,\n  defaultTask\n} from './GitHubAssessmentDefaultValues';\nimport { GHAssessmentOverview } from './GitHubClassroom';\n\nconst workspaceLocation: WorkspaceLocation = 'githubAssessment';\n\nconst GitHubAssessmentWorkspace: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const octokit = getGitHubOctokitInstance();\n\n  if (octokit === undefined) {\n    navigate('/githubassessments/login');\n  }\n\n  // Handlers migrated over from deprecated withRouter implementation\n  const {\n    handleEditorEval,\n    handleEditorValueChange,\n    handleReplEval,\n    handleReplOutputClear,\n    handleUpdateHasUnsavedChanges,\n    handleUpdateWorkspace,\n    setActiveEditorTabIndex,\n    removeEditorTabByIndex\n  } = useMemo(() => {\n    return {\n      handleEditorEval: () => dispatch(evalEditor(workspaceLocation)),\n      handleEditorValueChange: (editorTabIndex: number, newEditorValue: string) =>\n        dispatch(updateEditorValue(workspaceLocation, editorTabIndex, newEditorValue)),\n      handleReplEval: () => dispatch(evalRepl(workspaceLocation)),\n      handleReplOutputClear: () => dispatch(clearReplOutput(workspaceLocation)),\n      handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) =>\n        dispatch(updateHasUnsavedChanges(workspaceLocation, hasUnsavedChanges)),\n      handleUpdateWorkspace: (options: Partial<WorkspaceState>) =>\n        dispatch(updateWorkspace(workspaceLocation, options)),\n      setActiveEditorTabIndex: (activeEditorTabIndex: number | null) =>\n        dispatch(updateActiveEditorTabIndex(workspaceLocation, activeEditorTabIndex)),\n      removeEditorTabByIndex: (editorTabIndex: number) =>\n        dispatch(removeEditorTab(workspaceLocation, editorTabIndex))\n    };\n  }, [dispatch]);\n\n  /**\n   * State variables relating to information we are concerned with saving\n   */\n  const [missionMetadata, setMissionMetadata] = useState(defaultMissionMetadata);\n  const [cachedMissionMetadata, setCachedMissionMetadata] = useState(defaultMissionMetadata);\n  const [hasUnsavedChangesToMetadata, setHasUnsavedChangesToMetadata] = useState(false);\n\n  const [briefingContent, setBriefingContent] = useState(defaultMissionBriefing);\n  const [cachedBriefingContent, setCachedBriefingContent] = useState(defaultMissionBriefing);\n  const [hasUnsavedChangesToBriefing, setHasUnsavedChangesToBriefing] = useState(false);\n\n  const [cachedTaskList, setCachedTaskList] = useState<TaskData[]>([]);\n  const [taskList, setTaskList] = useState<TaskData[]>([]);\n  const [hasUnsavedChangesToTasks, setHasUnsavedChangesToTasks] = useState(false);\n\n  /**\n   * State variables relating to the rendering and function of the workspace\n   */\n  const [summary, setSummary] = useState('');\n  const [currentTaskNumber, setCurrentTaskNumber] = useState(0);\n  const [isTeacherMode, setIsTeacherMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentTaskIsMCQ, setCurrentTaskIsMCQ] = useState(false);\n  const [displayMCQInEditor, setDisplayMCQInEditor] = useState(true);\n  const [mcqQuestion, setMCQQuestion] = useState(defaultMCQQuestion);\n  const [missionRepoData, setMissionRepoData] = useState<MissionRepoData | undefined>(undefined);\n  const assessmentOverview = location.state as GHAssessmentOverview;\n\n  const [showBriefingOverlay, setShowBriefingOverlay] = useState(false);\n  const { selectedTab, setSelectedTab } = useSideContent(\n    workspaceLocation,\n    SideContentType.questionOverview\n  );\n  const { isMobileBreakpoint } = useResponsive();\n\n  const {\n    isFolderModeEnabled,\n    activeEditorTabIndex,\n    editorTabs,\n    editorTestcases,\n    hasUnsavedChanges,\n    isRunning,\n    output,\n    replValue\n  } = useTypedSelector(state => state.workspaces.githubAssessment);\n\n  /**\n   * Should be called to change the task number, rather than using setCurrentTaskNumber\n   */\n  const changeStateDueToChangedTaskNumber = useCallback(\n    (newTaskNumber: number, currentTaskList: TaskData[]) => {\n      setCurrentTaskNumber(newTaskNumber);\n      const actualTaskIndex = newTaskNumber - 1;\n\n      handleUpdateWorkspace({\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        editorTabs: [\n          {\n            value: currentTaskList[actualTaskIndex].savedCode,\n            highlightedLines: [],\n            breakpoints: []\n          }\n        ],\n        programPrependValue: currentTaskList[actualTaskIndex].testPrepend,\n        programPostpendValue: currentTaskList[actualTaskIndex].testPostpend,\n        editorTestcases: currentTaskList[actualTaskIndex].testCases\n      });\n      handleReplOutputClear();\n\n      const [isMCQText, mcqQuestion] = convertToMCQQuestionIfMCQText(\n        currentTaskList[actualTaskIndex].savedCode\n      );\n\n      setCurrentTaskIsMCQ(isMCQText);\n      setMCQQuestion(mcqQuestion);\n    },\n    [handleUpdateWorkspace, handleReplOutputClear]\n  );\n\n  const setBriefingContentWrapper = useCallback(\n    (newBriefingContent: string) => {\n      setBriefingContent(newBriefingContent);\n      setHasUnsavedChangesToBriefing(newBriefingContent !== cachedBriefingContent);\n    },\n    [cachedBriefingContent]\n  );\n\n  const setMissionMetadataWrapper = useCallback(\n    (newMissionMetadata: MissionMetadata) => {\n      setMissionMetadata(newMissionMetadata);\n      setHasUnsavedChangesToMetadata(!isEqual(newMissionMetadata, cachedMissionMetadata));\n    },\n    [cachedMissionMetadata]\n  );\n\n  const setTaskListWrapper = useCallback(\n    (newTaskList: TaskData[]) => {\n      setTaskList(newTaskList);\n      setHasUnsavedChangesToTasks(!isEqual(newTaskList, cachedTaskList));\n    },\n    [cachedTaskList]\n  );\n\n  const setDisplayMCQInEditorWrapper = useCallback(\n    (shouldDisplayMCQ: boolean) => {\n      if (shouldDisplayMCQ) {\n        const [isMCQText, mcqQuestion] = convertToMCQQuestionIfMCQText(\n          taskList[currentTaskNumber - 1].savedCode\n        );\n        setCurrentTaskIsMCQ(isMCQText);\n        setMCQQuestion(mcqQuestion);\n      }\n\n      setDisplayMCQInEditor(shouldDisplayMCQ);\n    },\n    [taskList, currentTaskNumber]\n  );\n\n  // Forces a re-render when saveable information changes, keeps environment state in-sync with component state\n  const computedHasUnsavedChanges = useMemo(() => {\n    return hasUnsavedChangesToMetadata || hasUnsavedChangesToBriefing || hasUnsavedChangesToTasks;\n  }, [hasUnsavedChangesToMetadata, hasUnsavedChangesToBriefing, hasUnsavedChangesToTasks]);\n\n  useEffect(() => {\n    if (computedHasUnsavedChanges !== hasUnsavedChanges) {\n      handleUpdateHasUnsavedChanges(computedHasUnsavedChanges);\n    }\n  }, [computedHasUnsavedChanges, hasUnsavedChanges, handleUpdateHasUnsavedChanges]);\n\n  /**\n   * Sets up the workspace for when the user is retrieving Mission information from a GitHub repository\n   */\n  const setUpWithAssessmentOverview = useCallback(async () => {\n    if (octokit === undefined) return;\n\n    const missionRepoData = assessmentOverview.missionRepoData;\n\n    const missionDataPromise = getMissionData(missionRepoData, octokit);\n    const isTeacherModePromise = octokit.users.getAuthenticated().then((authenticatedUser: any) => {\n      const userLogin = authenticatedUser.data.login;\n      return userLogin === missionRepoData.repoOwner;\n    });\n\n    const promises = [missionDataPromise, isTeacherModePromise];\n\n    Promise.all(promises).then((promises: any[]) => {\n      setMissionRepoData(missionRepoData);\n\n      setHasUnsavedChangesToTasks(false);\n      setHasUnsavedChangesToBriefing(false);\n      setHasUnsavedChangesToMetadata(false);\n      handleUpdateHasUnsavedChanges(false);\n\n      const missionData: MissionData = promises[0];\n      setSummary(missionData.missionBriefing);\n\n      setMissionMetadata(missionData.missionMetadata);\n      setCachedMissionMetadata(missionData.missionMetadata);\n\n      setBriefingContent(missionData.missionBriefing);\n      setCachedBriefingContent(missionData.missionBriefing);\n\n      setTaskList(missionData.tasksData);\n      setCachedTaskList(\n        missionData.tasksData.map((taskData: TaskData) => Object.assign({}, taskData))\n      );\n\n      changeStateDueToChangedTaskNumber(1, missionData.tasksData);\n\n      const isTeacherMode: boolean = promises[1];\n      setIsTeacherMode(isTeacherMode);\n\n      setIsLoading(false);\n    });\n  }, [\n    assessmentOverview,\n    octokit,\n    changeStateDueToChangedTaskNumber,\n    handleUpdateHasUnsavedChanges\n  ]);\n\n  /**\n   * Sets up the workspace for when the user is creating a new Mission\n   */\n  const setUpWithoutAssessmentOverview = useCallback(() => {\n    setSummary(defaultMissionBriefing);\n\n    setMissionMetadata(defaultMissionMetadata);\n    setCachedMissionMetadata(defaultMissionMetadata);\n\n    setBriefingContent(defaultMissionBriefing);\n    setCachedBriefingContent(defaultMissionBriefing);\n\n    setTaskList([defaultTask]);\n    setCachedTaskList([defaultTask]);\n\n    setDisplayMCQInEditor(false);\n    changeStateDueToChangedTaskNumber(1, [defaultTask]);\n\n    setHasUnsavedChangesToTasks(false);\n    setHasUnsavedChangesToBriefing(false);\n    setHasUnsavedChangesToMetadata(false);\n    handleUpdateHasUnsavedChanges(false);\n\n    setIsTeacherMode(true);\n    setIsLoading(false);\n  }, [changeStateDueToChangedTaskNumber, handleUpdateHasUnsavedChanges]);\n\n  useEffect(() => {\n    if (assessmentOverview === undefined || assessmentOverview === null) {\n      setUpWithoutAssessmentOverview();\n    } else {\n      setUpWithAssessmentOverview();\n    }\n  }, [assessmentOverview, setUpWithAssessmentOverview, setUpWithoutAssessmentOverview]);\n\n  const briefingOverlay = (\n    <Dialog className=\"assessment-briefing\" isOpen={showBriefingOverlay}>\n      <Card>\n        <Markdown content={summary} />\n        <Button\n          className=\"assessment-briefing-button\"\n          onClick={() => setShowBriefingOverlay(false)}\n          text=\"Continue\"\n        />\n      </Card>\n    </Dialog>\n  );\n\n  /**\n   * Handles the changes to the taskList\n   */\n  const editCode = useCallback(\n    (taskNumber: number, newValue: string) => {\n      if (taskNumber > taskList.length) {\n        return;\n      }\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[taskNumber - 1] = {\n        ...editedTaskList[taskNumber - 1],\n        savedCode: newValue\n      };\n\n      setTaskListWrapper(editedTaskList);\n    },\n    [taskList, setTaskListWrapper]\n  );\n\n  const resetToTemplate = useCallback(() => {\n    const originalCode = taskList[currentTaskNumber - 1].starterCode;\n    // TODO: Hardcoded to make use of the first editor tab. Refactoring is needed for this workspace to enable Folder mode.\n    handleEditorValueChange(0, originalCode);\n    editCode(currentTaskNumber, originalCode);\n  }, [currentTaskNumber, editCode, handleEditorValueChange, taskList]);\n\n  const conductSave = useCallback(\n    async (\n      changedFile: string,\n      newFileContent: string,\n      githubName: string | null,\n      githubEmail: string | null,\n      commitMessage: string\n    ) => {\n      const typedMissionRepoData = missionRepoData as MissionRepoData;\n\n      const { saveType } = await checkIfFileCanBeSavedAndGetSaveType(\n        octokit,\n        typedMissionRepoData.repoOwner,\n        typedMissionRepoData.repoName,\n        changedFile\n      );\n\n      if (saveType === 'Overwrite') {\n        await performOverwritingSave(\n          octokit,\n          typedMissionRepoData.repoOwner,\n          typedMissionRepoData.repoName,\n          changedFile,\n          githubName,\n          githubEmail,\n          commitMessage,\n          newFileContent\n        );\n      }\n\n      if (saveType === 'Create') {\n        await performCreatingSave(\n          octokit,\n          typedMissionRepoData.repoOwner,\n          typedMissionRepoData.repoName,\n          changedFile,\n          githubName,\n          githubEmail,\n          commitMessage,\n          newFileContent\n        );\n      }\n    },\n    [missionRepoData, octokit]\n  );\n\n  const conductDelete = useCallback(\n    async (\n      fileName: string,\n      githubName: string | null,\n      githubEmail: string | null,\n      commitMessage: string\n    ) => {\n      const typedMissionRepoData = missionRepoData as MissionRepoData;\n\n      await performFolderDeletion(\n        octokit,\n        typedMissionRepoData.repoOwner,\n        typedMissionRepoData.repoName,\n        fileName,\n        githubName,\n        githubEmail,\n        commitMessage\n      );\n    },\n    [missionRepoData, octokit]\n  );\n\n  /**\n   * To be used when the information to be saved corresponds to an existing GitHub repository\n   */\n  const saveWithMissionRepoData = useCallback(async () => {\n    if (octokit === undefined) {\n      showWarningMessage('Please sign in with GitHub!', 2000);\n      return;\n    }\n\n    const [filenameToContentMap, foldersToDelete] = discoverFilesToBeChangedWithMissionRepoData(\n      missionMetadata,\n      cachedMissionMetadata,\n      briefingContent,\n      cachedBriefingContent,\n      taskList,\n      cachedTaskList,\n      isTeacherMode\n    );\n    const changedFiles = Object.keys(filenameToContentMap);\n\n    type GetAuthenticatedResponse = GetResponseTypeFromEndpointMethod<\n      typeof octokit.users.getAuthenticated\n    >;\n    const authUser: GetAuthenticatedResponse = await octokit.users.getAuthenticated();\n    const githubName = authUser.data.name;\n    const githubEmail = authUser.data.email;\n    const commitMessage = '';\n\n    for (let i = 0; i < foldersToDelete.length; i++) {\n      await conductDelete(foldersToDelete[i], githubName, githubEmail, commitMessage);\n    }\n\n    for (let i = 0; i < changedFiles.length; i++) {\n      const filename = changedFiles[i];\n      const newFileContent = filenameToContentMap[filename];\n      await conductSave(filename, newFileContent, githubName, githubEmail, commitMessage);\n    }\n\n    setCachedTaskList(taskList);\n    setCachedBriefingContent(briefingContent);\n    setCachedMissionMetadata(missionMetadata);\n\n    setHasUnsavedChangesToTasks(false);\n    setHasUnsavedChangesToBriefing(false);\n    setHasUnsavedChangesToMetadata(false);\n  }, [\n    octokit,\n    isTeacherMode,\n    briefingContent,\n    missionMetadata,\n    taskList,\n    cachedTaskList,\n    cachedBriefingContent,\n    cachedMissionMetadata,\n    conductSave,\n    conductDelete\n  ]);\n\n  /**\n   * To be used when the information to be saved to a new GitHub repository\n   */\n  const saveWithoutMissionRepoData = useCallback(async () => {\n    if (octokit === undefined) {\n      showWarningMessage('Please sign in with GitHub!', 2000);\n      return;\n    }\n\n    const filenameToContentMap = discoverFilesToBeCreatedWithoutMissionRepoData(\n      missionMetadata,\n      briefingContent,\n      taskList\n    );\n\n    const changedFiles = Object.keys(filenameToContentMap).sort();\n    const authUser = await octokit.users.getAuthenticated();\n\n    const dialogResults = await promisifyDialog<\n      GitHubMissionCreateDialogProps,\n      GitHubMissionCreateDialogResolution\n    >(GitHubMissionCreateDialog, resolve => ({\n      filesToCreate: changedFiles,\n      userLogin: authUser.data.login,\n      resolveDialog: dialogResults => resolve(dialogResults)\n    }));\n\n    if (!dialogResults.confirmSave) {\n      return;\n    }\n\n    const githubName = authUser.data.name;\n    const githubEmail = authUser.data.email;\n    const repoName = dialogResults.repoName;\n    const repoOwner = authUser.data.login;\n\n    try {\n      await octokit.repos.createForAuthenticatedUser({\n        name: repoName\n      });\n\n      for (let i = 0; i < changedFiles.length; i++) {\n        const fileToCreate = changedFiles[i];\n        const fileContent = filenameToContentMap[fileToCreate];\n\n        await performCreatingSave(\n          octokit,\n          repoOwner,\n          repoName,\n          fileToCreate,\n          githubName,\n          githubEmail,\n          'Repository created from Source Academy',\n          fileContent\n        );\n      }\n\n      setCachedTaskList(taskList);\n      setCachedBriefingContent(briefingContent);\n      setCachedMissionMetadata(missionMetadata);\n\n      setHasUnsavedChangesToTasks(false);\n      setHasUnsavedChangesToBriefing(false);\n      setHasUnsavedChangesToMetadata(false);\n\n      setMissionRepoData({\n        repoOwner: repoOwner,\n        repoName: repoName,\n        dateOfCreation: new Date()\n      });\n    } catch (err) {\n      console.error(err);\n      showWarningMessage('Something went wrong while creating the repository!', 2000);\n    }\n  }, [briefingContent, missionMetadata, octokit, taskList]);\n\n  const onClickSave = useCallback(() => {\n    if (assessmentOverview !== undefined && new Date() > assessmentOverview.dueDate) {\n      showWarningMessage('It is past the due date for this assessment!');\n      return;\n    }\n\n    if (missionRepoData !== undefined) {\n      saveWithMissionRepoData();\n    } else {\n      saveWithoutMissionRepoData();\n    }\n  }, [assessmentOverview, missionRepoData, saveWithMissionRepoData, saveWithoutMissionRepoData]);\n\n  const onClickReset = useCallback(async () => {\n    const confirmReset = await showSimpleConfirmDialog({\n      contents: (\n        <div className={Classes.DIALOG_BODY}>\n          <Markdown content=\"Are you sure you want to reset the template?\" />\n          <Markdown content=\"*Note this will not affect the saved copy of your program, unless you save over it.*\" />\n        </div>\n      ),\n      negativeLabel: 'Cancel',\n      positiveIntent: 'primary',\n      positiveLabel: 'Confirm'\n    });\n\n    if (confirmReset) {\n      resetToTemplate();\n    }\n  }, [resetToTemplate]);\n\n  /**\n   * Checks to ensure that the user wants to discard their current changes\n   */\n  const shouldProceedToChangeTask = useCallback(\n    (\n      currentTaskNumber: number,\n      taskList: TaskData[],\n      cachedTaskList: TaskData[],\n      missionRepoData: MissionRepoData\n    ) => {\n      if (missionRepoData === undefined) {\n        return true;\n      }\n\n      const taskIndex = currentTaskNumber - 1;\n      if (!isEqual(taskList[taskIndex], cachedTaskList[taskIndex])) {\n        return window.confirm(\n          'You have unsaved changes to the current question. Are you sure you want to continue?'\n        );\n      }\n\n      return true;\n    },\n    []\n  );\n\n  const onClickPrevious = useCallback(() => {\n    if (\n      shouldProceedToChangeTask(\n        currentTaskNumber,\n        taskList,\n        cachedTaskList,\n        missionRepoData as MissionRepoData\n      )\n    ) {\n      let activeTaskList = taskList;\n      if (missionRepoData !== undefined) {\n        activeTaskList = cachedTaskList.map((taskData: TaskData) => Object.assign({}, taskData));\n        setTaskListWrapper(activeTaskList);\n      }\n      const newTaskNumber = currentTaskNumber - 1;\n      changeStateDueToChangedTaskNumber(newTaskNumber, activeTaskList);\n    }\n  }, [\n    currentTaskNumber,\n    taskList,\n    cachedTaskList,\n    missionRepoData,\n    setTaskListWrapper,\n    shouldProceedToChangeTask,\n    changeStateDueToChangedTaskNumber\n  ]);\n\n  const onClickNext = useCallback(() => {\n    if (\n      shouldProceedToChangeTask(\n        currentTaskNumber,\n        taskList,\n        cachedTaskList,\n        missionRepoData as MissionRepoData\n      )\n    ) {\n      let activeTaskList = taskList;\n      if (missionRepoData !== undefined) {\n        activeTaskList = cachedTaskList.map((taskData: TaskData) => Object.assign({}, taskData));\n        setTaskListWrapper(activeTaskList);\n      }\n      const newTaskNumber = currentTaskNumber + 1;\n      changeStateDueToChangedTaskNumber(newTaskNumber, activeTaskList);\n    }\n  }, [\n    currentTaskNumber,\n    taskList,\n    cachedTaskList,\n    missionRepoData,\n    setTaskListWrapper,\n    shouldProceedToChangeTask,\n    changeStateDueToChangedTaskNumber\n  ]);\n\n  const onClickReturn = useCallback(() => {\n    navigate('/githubassessments/missions');\n  }, [navigate]);\n\n  /**\n   * Handles toggling of relevant SideContentTabs when mobile breakpoint it hit\n   */\n  useEffect(() => {\n    if (\n      !isMobileBreakpoint &&\n      (selectedTab === SideContentType.mobileEditor ||\n        selectedTab === SideContentType.mobileEditorRun)\n    ) {\n      setSelectedTab(SideContentType.questionOverview);\n    }\n  }, [isMobileBreakpoint, selectedTab, setSelectedTab]);\n\n  const onEditorValueChange = useCallback(\n    (editorTabIndex: number, val: string) => {\n      // TODO: Hardcoded to make use of the first editor tab. Refactoring is needed for this workspace to enable Folder mode.\n      handleEditorValueChange(0, val);\n      editCode(currentTaskNumber, val);\n    },\n    [currentTaskNumber, editCode, handleEditorValueChange]\n  );\n\n  const onChangeTabs = (\n    newTabId: SideContentType,\n    prevTabId: SideContentType,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    if (newTabId === prevTabId) {\n      return;\n    }\n    setSelectedTab(newTabId);\n  };\n\n  /**\n   * handleEval used in both the Run button, and during 'shift-enter' in AceEditor\n   *\n   * However, AceEditor only binds commands on mount (https://github.com/securingsincity/react-ace/issues/684)\n   * Thus, we use a mutable ref to overcome the stale closure problem\n   */\n  const activeTab = useRef(selectedTab);\n  activeTab.current = selectedTab;\n  const handleEval = () => {\n    handleEditorEval();\n\n    // Run testcases when the GitHub testcases tab is selected\n    if (activeTab.current === SideContentType.testcases) {\n      dispatch(runAllTestcases(workspaceLocation));\n    }\n  };\n\n  const setTaskDescriptions = useCallback(\n    (newTaskDescriptions: string[]) => {\n      const newTaskList: TaskData[] = [];\n\n      for (let i = 0; i < taskList.length; i++) {\n        const nextElement = Object.assign({}, taskList[i]) as TaskData;\n        nextElement.taskDescription = newTaskDescriptions[i];\n        newTaskList.push(nextElement);\n      }\n\n      setTaskListWrapper(newTaskList);\n    },\n    [taskList, setTaskListWrapper]\n  );\n\n  const setTaskTestcases = useCallback(\n    (newTestcases: Testcase[]) => {\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[currentTaskNumber - 1] = {\n        ...editedTaskList[currentTaskNumber - 1],\n        testCases: newTestcases\n      };\n\n      handleUpdateWorkspace({\n        editorTestcases: editedTaskList[currentTaskNumber - 1].testCases\n      });\n\n      setTaskListWrapper(editedTaskList);\n    },\n    [currentTaskNumber, taskList, handleUpdateWorkspace, setTaskListWrapper]\n  );\n\n  const setTestPrepend = useCallback(\n    (newTestPrepend: string) => {\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[currentTaskNumber - 1] = {\n        ...editedTaskList[currentTaskNumber - 1],\n        testPrepend: newTestPrepend\n      };\n      setTaskListWrapper(editedTaskList);\n    },\n    [currentTaskNumber, taskList, setTaskListWrapper]\n  );\n\n  const setTestPostpend = useCallback(\n    (newTestPostpend: string) => {\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[currentTaskNumber - 1] = {\n        ...editedTaskList[currentTaskNumber - 1],\n        testPostpend: newTestPostpend\n      };\n      setTaskListWrapper(editedTaskList);\n    },\n    [currentTaskNumber, taskList, setTaskListWrapper]\n  );\n\n  const sideContentProps = (): SideContentProps => {\n    const tabs: SideContentTab[] = [\n      {\n        label: 'Task',\n        iconName: IconNames.NINJA,\n        body: (\n          <SideContentTaskEditor\n            allowEdits={isTeacherMode}\n            currentTaskNumber={currentTaskNumber}\n            taskDescriptions={taskList.map(taskData => taskData.taskDescription)}\n            setTaskDescriptions={setTaskDescriptions}\n          />\n        ),\n        id: SideContentType.questionOverview\n      },\n      {\n        label: 'Briefing',\n        iconName: IconNames.BRIEFCASE,\n        body: (\n          <SideContentMarkdownEditor\n            allowEdits={isTeacherMode}\n            content={briefingContent}\n            setContent={setBriefingContentWrapper}\n          />\n        ),\n        id: SideContentType.briefing\n      }\n    ];\n\n    const taskIndex = currentTaskNumber - 1;\n    const testPrepend = taskList[taskIndex] ? taskList[taskIndex].testPrepend : '';\n    const testPostpend = taskList[taskIndex] ? taskList[taskIndex].testPostpend : '';\n    tabs.push({\n      label: 'Testcases',\n      iconName: IconNames.AIRPLANE,\n      body: (\n        <SideContentTestcaseEditor\n          allowEdits={isTeacherMode}\n          testcases={editorTestcases}\n          testPrepend={testPrepend}\n          testPostpend={testPostpend}\n          setTaskTestcases={setTaskTestcases}\n          setTestPrepend={setTestPrepend}\n          setTestPostpend={setTestPostpend}\n          handleTestcaseEval={testcaseId => dispatch(evalTestcase(workspaceLocation, testcaseId))}\n        />\n      ),\n      id: SideContentType.testcases\n    });\n\n    if (isTeacherMode) {\n      // Teachers have ability to edit mission metadata\n      tabs.push({\n        label: 'Mission Metadata',\n        iconName: IconNames.BUILD,\n        body: (\n          <SideContentMissionEditor\n            isFolderModeEnabled={isFolderModeEnabled}\n            missionMetadata={missionMetadata}\n            setMissionMetadata={setMissionMetadataWrapper}\n          />\n        ),\n        id: SideContentType.missionMetadata\n      });\n    }\n\n    return {\n      selectedTabId: selectedTab,\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      onChange: onChangeTabs,\n      workspaceLocation: workspaceLocation\n    };\n  };\n\n  const addNewQuestion = () => {\n    const newTaskList = taskList\n      .slice(0, currentTaskNumber)\n      .concat([defaultTask])\n      .concat(taskList.slice(currentTaskNumber, taskList.length));\n    setTaskListWrapper(newTaskList);\n\n    const newTaskNumber = currentTaskNumber + 1;\n    changeStateDueToChangedTaskNumber(newTaskNumber, newTaskList);\n  };\n\n  const deleteCurrentQuestion = () => {\n    const deleteAtIndex = currentTaskNumber - 1;\n\n    const newTaskList = taskList\n      .slice(0, deleteAtIndex)\n      .concat(taskList.slice(currentTaskNumber, taskList.length));\n    setTaskListWrapper(newTaskList);\n\n    const newTaskNumber = currentTaskNumber === 1 ? currentTaskNumber : currentTaskNumber - 1;\n    changeStateDueToChangedTaskNumber(newTaskNumber, newTaskList);\n  };\n\n  const controlBarProps: () => ControlBarProps = () => {\n    const runButton = (\n      <ControlBarRunButton\n        isEntrypointFileDefined={activeEditorTabIndex !== null}\n        handleEditorEval={handleEval}\n        key=\"run\"\n      />\n    );\n\n    const saveButton = (\n      <ControlButtonSaveButton\n        hasUnsavedChanges={hasUnsavedChanges}\n        key=\"save\"\n        onClickSave={onClickSave}\n      />\n    );\n\n    const resetButton = <ControlBarResetButton key=\"reset\" onClick={onClickReset} />;\n\n    const chapterSelect = (\n      <ControlBarChapterSelect\n        handleChapterSelect={() => {}}\n        isFolderModeEnabled={isFolderModeEnabled}\n        sourceChapter={missionMetadata.sourceVersion}\n        sourceVariant={Constants.defaultSourceVariant}\n        disabled={true}\n        key=\"chapter\"\n      />\n    );\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={onClickNext}\n        onClickReturn={onClickReturn}\n        questionProgress={[currentTaskNumber, taskList.length]}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={[currentTaskNumber, taskList.length]}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton\n        key=\"task_view\"\n        questionProgress={[currentTaskNumber, taskList.length]}\n      />\n    );\n\n    const editorButtons = !isMobileBreakpoint\n      ? [runButton, saveButton, resetButton, chapterSelect]\n      : [saveButton, resetButton];\n\n    if (isTeacherMode) {\n      const addTaskButton = (\n        <ControlBarTaskAddButton\n          addNewQuestion={addNewQuestion}\n          numberOfTasks={taskList.length}\n          key=\"add_task\"\n        />\n      );\n      const deleteTaskButton = (\n        <ControlBarTaskDeleteButton\n          deleteCurrentQuestion={deleteCurrentQuestion}\n          numberOfTasks={taskList.length}\n          key=\"delete_task\"\n        />\n      );\n      const showMCQButton = (\n        <ControlBarDisplayMCQButton\n          displayMCQInEditor={() => setDisplayMCQInEditorWrapper(true)}\n          displayTextInEditor={() => setDisplayMCQInEditorWrapper(false)}\n          mcqDisplayed={displayMCQInEditor}\n          key=\"display MCQ\"\n        />\n      );\n\n      editorButtons.push(addTaskButton, deleteTaskButton, showMCQButton);\n    }\n\n    const flowButtons = [previousButton, questionView, nextButton];\n\n    return {\n      editorButtons: editorButtons,\n      flowButtons: flowButtons\n    };\n  };\n\n  const mobileSideContentProps: () => MobileSideContentProps = () => {\n    const onChangeTabs = (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n\n      // Do nothing when clicking the mobile 'Run' tab while on the testcases tab.\n      if (\n        !(prevTabId === SideContentType.testcases && newTabId === SideContentType.mobileEditorRun)\n      ) {\n        setSelectedTab(newTabId);\n      }\n    };\n\n    const sideContent = sideContentProps();\n\n    return {\n      mobileControlBarProps: {\n        ...controlBarProps()\n      },\n      ...sideContent,\n      onChange: onChangeTabs,\n      selectedTabId: selectedTab,\n      handleEditorEval: handleEval\n    };\n  };\n\n  const replButtons = () => {\n    const clearButton = (\n      <ControlBarClearButton handleReplOutputClear={handleReplOutputClear} key=\"clear_repl\" />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton handleReplEval={handleReplEval} isRunning={isRunning} key=\"eval_repl\" />\n    );\n\n    return [evalButton, clearButton];\n  };\n\n  const handleMCQSubmit = useCallback(\n    (choiceId: number) => {\n      if (!currentTaskIsMCQ) {\n        return;\n      }\n\n      const newMCQQuestion = Object.assign({}, mcqQuestion);\n      newMCQQuestion.answer = choiceId;\n\n      setMCQQuestion(newMCQQuestion);\n      editCode(currentTaskNumber, convertIMCQQuestionToMCQText(newMCQQuestion));\n    },\n    [currentTaskIsMCQ, currentTaskNumber, editCode, mcqQuestion]\n  );\n\n  const mcqProps = useMemo(() => {\n    return currentTaskIsMCQ && displayMCQInEditor\n      ? {\n          mcq: mcqQuestion,\n          handleMCQSubmit: handleMCQSubmit\n        }\n      : undefined;\n  }, [currentTaskIsMCQ, displayMCQInEditor, mcqQuestion, handleMCQSubmit]);\n\n  const editorContainerProps: NormalEditorContainerProps = {\n    editorVariant: 'normal',\n    isFolderModeEnabled,\n    activeEditorTabIndex,\n    setActiveEditorTabIndex,\n    removeEditorTabByIndex,\n    editorTabs: editorTabs.map(convertEditorTabStateToProps),\n    editorSessionId: '',\n    handleDeclarationNavigate: (cursorPosition: Position) =>\n      dispatch(navigateToDeclaration(workspaceLocation, cursorPosition)),\n    handleEditorEval: handleEval,\n    handleEditorValueChange: onEditorValueChange,\n    handleUpdateHasUnsavedChanges: handleUpdateHasUnsavedChanges,\n    handleEditorUpdateBreakpoints: (editorTabIndex: number, newBreakpoints: string[]) =>\n      dispatch(setEditorBreakpoint(workspaceLocation, editorTabIndex, newBreakpoints)),\n    handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n      dispatch(promptAutocomplete(workspaceLocation, row, col, callback)),\n    isEditorAutorun: false\n  };\n  const replProps = {\n    handleBrowseHistoryDown: () => dispatch(browseReplHistoryDown(workspaceLocation)),\n    handleBrowseHistoryUp: () => dispatch(browseReplHistoryUp(workspaceLocation)),\n    handleReplEval: handleReplEval,\n    handleReplValueChange: (newValue: string) =>\n      dispatch(updateReplValue(newValue, workspaceLocation)),\n    output: output,\n    replValue: replValue,\n    sourceChapter: missionMetadata.sourceVersion || Chapter.SOURCE_4,\n    sourceVariant: Variant.DEFAULT,\n    externalLibrary: ExternalLibraryName.NONE,\n    replButtons: replButtons()\n  };\n  const sideBarProps = {\n    tabs: []\n  };\n\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: controlBarProps(),\n    editorContainerProps: currentTaskIsMCQ && displayMCQInEditor ? undefined : editorContainerProps,\n    handleSideContentHeightChange: heightChange =>\n      dispatch(changeSideContentHeight(heightChange, workspaceLocation)),\n    hasUnsavedChanges: hasUnsavedChanges,\n    mcqProps: mcqProps,\n    sideBarProps: sideBarProps,\n    sideContentProps: sideContentProps(),\n    replProps: replProps\n  };\n  const mobileWorkspaceProps: MobileWorkspaceProps = {\n    editorContainerProps: currentTaskIsMCQ && displayMCQInEditor ? undefined : editorContainerProps,\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    hasUnsavedChanges: hasUnsavedChanges,\n    mcqProps: mcqProps,\n    mobileSideContentProps: mobileSideContentProps()\n  };\n\n  if (isLoading) {\n    return (\n      <div className={classNames(classes['missionLoading'], Classes.DARK)}>\n        <NonIdealState description=\"Loading\" icon={<Spinner size={SpinnerSize.LARGE} />} />\n      </div>\n    );\n  } else {\n    return (\n      <div className={classNames('WorkspaceParent', Classes.DARK)}>\n        {briefingOverlay}\n        {isMobileBreakpoint ? (\n          <MobileWorkspace {...mobileWorkspaceProps} />\n        ) : (\n          <Workspace {...workspaceProps} />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default GitHubAssessmentWorkspace;\n","import { Card, H2, H4, UL } from '@blueprintjs/core';\n\nconst GitHubClassroomWelcome: React.FC = () => {\n  return (\n    <div className=\"github-welcome\">\n      <Card className=\"github-welcome-content\">\n        <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>\n          <div>\n            <H2>Welcome to Source Academy with GitHub Classroom!</H2>\n            <br />\n            <H4>Source Academy does not find any course information for this account.</H4>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <UL style={{ textAlign: 'justify' }}>\n                <li>\n                  If you are enrolled in a Source Academy course that uses GitHub Classroom, check\n                  with the course staff to make sure your account is added to the course.\n                </li>\n                <li>\n                  If you are looking for a course to join, check{' '}\n                  <a href=\"https://about.sourceacademy.org/learner/README.html\">here</a> to find a\n                  course that suits your needs.\n                </li>\n              </UL>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default GitHubClassroomWelcome;\n","import { NonIdealState, Spinner } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Octokit } from '@octokit/rest';\nimport { GetResponseDataTypeFromEndpointMethod } from '@octokit/types';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navigate, Route, Routes, useLocation } from 'react-router-dom';\nimport { loginGitHub, logoutGitHub } from 'src/commons/application/actions/SessionActions';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\nimport academyClasses from 'src/styles/Academy.module.scss';\n\nimport ContentDisplay from '../../commons/ContentDisplay';\nimport { MissionRepoData } from '../../commons/githubAssessments/GitHubMissionTypes';\nimport GitHubAssessmentsNavigationBar from '../../commons/navigationBar/subcomponents/GitHubAssessmentsNavigationBar';\nimport { showWarningMessage } from '../../commons/utils/notifications/NotificationsHelper';\nimport { assessmentTypeLink } from '../../commons/utils/ParamParseHelper';\nimport GitHubAssessmentListing from './GitHubAssessmentListing';\nimport GitHubAssessmentWorkspace from './GitHubAssessmentWorkspace';\nimport GitHubClassroomWelcome from './GitHubClassroomWelcome';\n\nconst RelativeRoutes = {\n  GITHUB_LOGIN: 'login',\n  GITHUB_WELCOME: 'welcome',\n  GITHUB_EDITOR: 'editor',\n  getAssessmentTypeLink: assessmentTypeLink\n};\n\ntype GitHubClassroomLocationState =\n  | {\n      courses: string[] | undefined;\n      assessmentTypeOverviews: GHAssessmentTypeOverview[] | undefined;\n      selectedCourse: string | undefined;\n    }\n  | undefined;\n\n/**\n * A page that lists the missions available to the authenticated user.\n * This page should only be reachable if using a GitHub-hosted deployment.\n */\nconst GitHubClassroom: React.FC = () => {\n  const location = useLocation();\n  const locationState = location.state as GitHubClassroomLocationState;\n\n  const octokit: Octokit | undefined = useTypedSelector(\n    store => store.session.githubOctokitObject\n  ).octokit;\n  const dispatch = useDispatch();\n  const handleGitHubLogIn = () => dispatch(loginGitHub());\n  const handleGitHubLogOut = () => dispatch(logoutGitHub());\n\n  const [courses, setCourses] = useState<string[] | undefined>(locationState?.courses);\n  const [selectedCourse, setSelectedCourse] = useState<string>(locationState?.selectedCourse || '');\n  const [assessmentTypeOverviews, setAssessmentTypeOverviews] = useState<\n    GHAssessmentTypeOverview[] | undefined\n  >(locationState?.assessmentTypeOverviews);\n  const types = assessmentTypeOverviews?.map(overview => overview.typeName);\n\n  useEffect(() => {\n    if (octokit === undefined) {\n      return;\n    }\n\n    if (!courses) {\n      fetchCourses(octokit, setCourses, setSelectedCourse, setAssessmentTypeOverviews);\n    }\n  }, [courses, octokit]);\n\n  const changeCourseHandler = React.useCallback(\n    (e: any) => {\n      if (octokit === undefined) {\n        return;\n      }\n\n      fetchAssessmentOverviews(octokit, e.target.innerText, setAssessmentTypeOverviews);\n      setSelectedCourse(e.target.innerText);\n    },\n    [octokit, setSelectedCourse, setAssessmentTypeOverviews]\n  );\n\n  const refreshAssessmentOverviews = () => {\n    if (octokit === undefined) {\n      return;\n    }\n\n    fetchAssessmentOverviews(octokit, selectedCourse, setAssessmentTypeOverviews);\n  };\n\n  const navigateToLogin = <Navigate to={RelativeRoutes.GITHUB_LOGIN} replace />;\n  const navigateToAssessments = (\n    <Navigate\n      to={`${RelativeRoutes.getAssessmentTypeLink(\n        types ? types[0] : RelativeRoutes.GITHUB_WELCOME\n      )}`}\n      state={{\n        courses: courses,\n        assessmentTypeOverviews: assessmentTypeOverviews,\n        selectedCourse: selectedCourse\n      }}\n      replace\n    />\n  );\n\n  return (\n    <div className={academyClasses['Academy']} style={{ overflow: 'hidden' }}>\n      <GitHubAssessmentsNavigationBar\n        changeCourseHandler={changeCourseHandler}\n        handleGitHubLogIn={handleGitHubLogIn}\n        handleGitHubLogOut={() => {\n          handleGitHubLogOut();\n          setCourses(undefined);\n          setAssessmentTypeOverviews(undefined);\n          setSelectedCourse('');\n        }}\n        octokit={octokit}\n        courses={courses}\n        selectedCourse={selectedCourse}\n        types={types}\n        assessmentTypeOverviews={assessmentTypeOverviews}\n      />\n      <Routes>\n        <Route\n          path={RelativeRoutes.GITHUB_LOGIN}\n          element={\n            octokit && (!courses || (courses.length > 0 && !assessmentTypeOverviews)) ? (\n              <ContentDisplay\n                display={<NonIdealState description=\"Loading...\" icon={<Spinner />} />}\n                loadContentDispatch={() => {}}\n              />\n            ) : octokit && courses && courses.length === 0 ? (\n              <Navigate to={RelativeRoutes.GITHUB_WELCOME} replace />\n            ) : octokit ? (\n              navigateToAssessments\n            ) : (\n              <ContentDisplay\n                display={\n                  <NonIdealState\n                    description=\"Please sign in to GitHub.\"\n                    icon={IconNames.WARNING_SIGN}\n                  />\n                }\n                loadContentDispatch={() => {}}\n              />\n            )\n          }\n        />\n        <Route\n          path={RelativeRoutes.GITHUB_WELCOME}\n          element={octokit ? <GitHubClassroomWelcome /> : navigateToLogin}\n        />\n        <Route path={RelativeRoutes.GITHUB_EDITOR} element={<GitHubAssessmentWorkspace />} />\n        {octokit\n          ? types?.map((type, idx) => {\n              const filteredAssessments = assessmentTypeOverviews\n                ? assessmentTypeOverviews[idx].assessments\n                : undefined;\n              return (\n                <Route\n                  path={`${RelativeRoutes.getAssessmentTypeLink(type)}`}\n                  element={\n                    <GitHubAssessmentListing\n                      assessmentOverviews={filteredAssessments}\n                      refreshAssessmentOverviews={refreshAssessmentOverviews}\n                    />\n                  }\n                  key={idx}\n                />\n              );\n            })\n          : null}\n        <Route\n          path=\"*\"\n          element={\n            octokit && courses && courses.length > 0 ? navigateToAssessments : navigateToLogin\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\n/**\n * Retrieves list of organizations for the authenticated user.\n *\n * @param octokit The Octokit instance for the authenticated user\n * @param setCourses The React setter function for an array of courses string names\n * @param setSelectedCourse The React setter function for string name of selected course\n */\nasync function fetchCourses(\n  octokit: Octokit,\n  setCourses: (courses: string[]) => void,\n  setSelectedCourse: (course: string) => void,\n  setAssessmentTypeOverviews: (assessmentTypeOverviews: GHAssessmentTypeOverview[]) => void\n) {\n  const courses: string[] = [];\n  const results = (await octokit.orgs.listForAuthenticatedUser({ per_page: 100 })).data;\n  const orgs = results.filter(org => org.login.includes('source-academy-course')); // filter only organisations with 'source-academy-course' in name\n  orgs.forEach(org => {\n    courses.push(org.login.replace('source-academy-course-', ''));\n  });\n  setCourses(courses);\n  if (courses.length > 0) {\n    setSelectedCourse(courses[0]);\n    fetchAssessmentOverviews(octokit, courses[0], setAssessmentTypeOverviews);\n  }\n}\n\nexport type GHAssessmentTypeOverview = {\n  typeName: string;\n  assessments: GHAssessmentOverview[];\n};\n\nexport type GHAssessmentOverview = {\n  title: string;\n  coverImage: string;\n  webSummary: string;\n  missionRepoData: MissionRepoData;\n  dueDate: Date;\n  link?: string;\n};\n\ntype GitHubAssessment = {\n  id: string;\n  title: string;\n  openAt: string;\n  closeAt: string;\n  published: string;\n  coverImage: string;\n  shortSummary: string;\n  acceptLink: string;\n  repoPrefix: string;\n};\n\nasync function fetchAssessmentOverviews(\n  octokit: Octokit,\n  selectedCourse: string,\n  setAssessmentTypeOverviews: (assessmentTypeOverviews: GHAssessmentTypeOverview[]) => void\n) {\n  const userLogin = (await octokit.users.getAuthenticated()).data.login;\n  const orgLogin = 'source-academy-course-'.concat(selectedCourse);\n  type ListForAuthenticatedUserData = GetResponseDataTypeFromEndpointMethod<\n    typeof octokit.repos.listForAuthenticatedUser\n  >;\n  const userRepos: ListForAuthenticatedUserData = (\n    await octokit.repos.listForAuthenticatedUser({ per_page: 100 })\n  ).data;\n  const courseRepos = userRepos.filter(repo => repo.owner!.login === orgLogin);\n  const courseInfoRepo = courseRepos.find(repo => repo.name.includes('course-info'));\n\n  if (courseInfoRepo === undefined) {\n    showWarningMessage('The course-info repository cannot be located.', 2000);\n    return;\n  }\n\n  const files = (\n    await octokit.repos.getContent({\n      owner: courseInfoRepo.owner!.login,\n      repo: courseInfoRepo.name,\n      path: ''\n    })\n  ).data;\n\n  if (Array.isArray(files)) {\n    if (files.find(file => file.name === 'course-info.json')) {\n      const result = await octokit.repos.getContent({\n        owner: courseInfoRepo.owner!.login,\n        repo: courseInfoRepo.name,\n        path: 'course-info.json'\n      });\n\n      const courseInfo = JSON.parse(Buffer.from((result.data as any).content, 'base64').toString());\n\n      courseInfo.types.forEach((type: { typeName: string; assessments: [GitHubAssessment] }) => {\n        const assessmentOverviews: GHAssessmentOverview[] = [];\n        type.assessments.forEach((assessment: GitHubAssessment) => {\n          if (!assessment.published) {\n            return;\n          }\n\n          const prefixLogin = assessment.repoPrefix + '-' + userLogin;\n          const missionRepo = userRepos.find(repo => repo.name === prefixLogin);\n\n          let createdAt = new Date();\n          let acceptLink = undefined;\n          if (missionRepo === undefined) {\n            acceptLink = assessment.acceptLink;\n          } else {\n            if (missionRepo.created_at !== null) {\n              createdAt = new Date(missionRepo.created_at);\n            }\n          }\n\n          assessmentOverviews.push({\n            title: assessment.title,\n            coverImage: assessment.coverImage,\n            webSummary: assessment.shortSummary,\n            missionRepoData: {\n              repoOwner: courseInfoRepo.owner!.login,\n              repoName: prefixLogin,\n              dateOfCreation: createdAt\n            },\n            dueDate: new Date(assessment.closeAt),\n            link: acceptLink\n          });\n\n          assessmentOverviews.sort((a, b) => (a.dueDate <= b.dueDate ? -1 : 1));\n        });\n        (type as any).assessments = assessmentOverviews;\n      });\n      setAssessmentTypeOverviews(courseInfo.types);\n    } else {\n      showWarningMessage('The course-info.json file cannot be located.', 2000);\n      return;\n    }\n  }\n}\n\n// react-router lazy loading\n// https://reactrouter.com/en/main/route/lazy\nexport const Component = GitHubClassroom;\nComponent.displayName = 'GitHubClassroom';\n\nexport default GitHubClassroom;\n","// extracted by mini-css-extract-plugin\nexport default {\"Application__main\":\"Academy_Application__main__WbAGW\",\"WorkspaceParent\":\"Academy_WorkspaceParent__QkrJ0\",\"bp5-tag\":\"Academy_bp5-tag__qdxCt\",\"badge\":\"Academy_badge__T8ws1\",\"bp5-overlay\":\"Academy_bp5-overlay__NG6bM\",\"bp5-popover-content\":\"Academy_bp5-popover-content__D5ZSM\",\"badge-tag\":\"Academy_badge-tag__A0vj4\",\"Academy\":\"Academy_Academy__1mjfJ\",\"Academy-switching-courses\":\"Academy_Academy-switching-courses__aaVIr\"};"],"names":["props","useEffect","_props$loadContentDis","loadContentDispatch","call","_jsx","className","children","fullWidth","Card","elevation","Elevation","display","chapterListRenderer","itemsParentRef","renderItem","items","defaultChoices","filter","variant","Variant","variantChoices","_jsxs","Menu","ulRef","style","flexDirection","map","length","MenuItem","text","icon","chapterRenderer","isFolderModeEnabled","lang","handleClick","isDisabled","chapter","Chapter","tooltipContent","undefined","Tooltip2","content","disabled","onClick","displayName","ChapterSelectComponent","Select","ControlBarChapterSelect","sourceChapter","sourceVariant","handleChapterSelect","selectedLang","useTypedSelector","store","playground","languageConfig","mainLanguage","choices","goLanguage","sourceLanguages","Constants","fullJSLanguage","fullTSLanguage","htmlLanguage","schemeLanguages","pyLanguages","onItemSelect","itemRenderer","itemListRenderer","filterable","Button","minimal","styliseSublanguage","rightIcon","IconNames","ControlBarReturnToAcademyButton","ControlButton","label","options","iconOnRight","ControlBarNextButton","questionProgress","onClickReturn","onClickNext","ControlBarPreviousButton","ControlBarQuestionViewButton","ControlBarResetButton","ControlButtonSaveButton","saveButtonOpts","hasUnsavedChanges","intent","Intent","onClickSave","Draggable","axis","handle","position","bounds","top","left","right","bottom","onDrag","id","i","Repl","replProps","isKeyboardShown","setIsKeyoardShown","React","buttonContent","setButtonContent","keyboardPosition","setKeyboardPosition","x","y","selectedIndex","setSelectedIndex","handlePreventDefault","event","preventDefault","keyboardProps","onKeyPress","button","targetKeyboardInput","editor","navigateLeft","navigateRight","remove","insert","includes","baseClass","layout","default","buttonTheme","class","buttons","theme","preventMouseDownDefault","disableCaretPositioning","e","document","getElementById","setProperty","onMouseDown","Keyboard","keyboardClass","getElementsByClassName","Array","from","controlBarMenu","editorButtons","flowButtons","editingWorkspaceButtons","Popover2","autoFocus","MobileSideContent","renderActiveTabPanelOnly","mobileControlBarProps","onChange","selectedTabId","isIOS","test","navigator","platform","renderedPanels","dynamicTabs","tab","renderPanel","workspaceLocation","body","tabBody","SideContentProvider","tabs","allTabs","changeTabsCallback","selectedTab","_Fragment","Tabs","classNames","Classes","renderTab","tabId","tabTitle","onOpening","_document$getElementB","generateIconId","click","Icon","iconName","iconSize","Tab","title","MobileControlBar","propsAreEqual","_props$editorContaine","isAndroid","userAgent","isPortrait","useMediaQuery","orientation","draggableReplPosition","setDraggableReplPosition","isDraggableReplDisabled","setIsDraggableReplDisabled","FocusStyleManager","mobileSideContentProps","documentElement","querySelector","setAttribute","window","innerHeight","handleHideRepl","setTargetKeyboardInput","clearTargetKeyboardInput","enableMobileKeyboardForEditor","onFocus","onBlur","handleShowRepl","offset","Math","max","handleEditorEval","editorContainerProps","handleTabChangeForRepl","newTabId","prevTabId","SideContentType","onSideContentTabChange","sideBarTabs","sideBarProps","mobileEditorTab","mobileRunTab","updatedMobileSideContentProps","_props$mobileSideCont","_props$mobileSideCont2","_props$mobileSideCont3","_props$mobileSideCont4","beforeDynamicTabs","afterDynamicTabs","inAssessmentWorkspace","Prompt","when","message","ControlBar","createWorkspaceInput","editorVariant","EditorContainer","McqChooser","mcqProps","DraggableRepl","enableMobileKeyboardForRepl","MobileKeyboard","index","testcase","handleTestcaseEval","extraClasses","isEvaluated","result","errors","isEqual","stringify","answer","correct","wrong","secret","type","TestcaseTypes","handleRunTestcase","Pre","program","parseError","ControlBarGitHubLoginButton","isMobileBreakpoint","useResponsive","loginButton","session","githubOctokitObject","octokit","onClickLogOut","onClickLogIn","ButtonGroup","large","icons","_props$types","_props$courses","changeCourseHandler","Navbar","NavbarGroup","align","Alignment","types","idx","NavLink","to","assessmentTypeLink","state","courses","assessmentTypeOverviews","selectedCourse","isActive","InputGroup","leftElement","course","placement","placeholder","value","handleGitHubLogIn","handleGitHubLogOut","navigate","useNavigate","createAssessmentButton","useMemo","refreshButton","refreshAssessmentOverviews","assessmentOverviews","NonIdealState","cards","element","assessmentOverview","ratio","ownerSlashName","missionRepoData","repoOwner","repoName","dueDate","toDateString","hasDueDate","Date","isOverdue","assessmentNotAccepted","link","buttonText","open","String","alt","src","coverImage","defaultCoverImage","Text","ellipsize","H4","H6","Markdown","webSummary","convertAssessmentOverviewToCard","description","Spinner","overflow","ContentDisplay","ControlBarDisplayMCQButton","mcqDisplayed","behaviour","displayTextInEditor","displayMCQInEditor","maximumTasksPerMission","jsonStringify","object","JSON","identity","taskDataPropertyTable","taskDescription","fileName","isDefaultValue","fromStringConverter","toStringConverter","starterCode","savedCode","testPrepend","testPostpend","testCases","parse","tests","saveableTests","score","async","getMissionData","briefingStringPromise","getContentAsString","metadataStringPromise","tasksDataPromise","questions","rootFolderContents","repos","getContent","owner","repo","path","files","data","isArray","promises","questionFolderName","find","file","name","push","then","folderContents","folderContentFileNames","filteredProperties","Object","keys","property","stringContent","Promise","all","stringContents","taskData","questionNumber","catch","err","showWarningMessage","console","error","sort","a","b","getTasksData","briefingString","metadataString","tasksData","missionMetadata","sourceVersion","convertMetadataStringToMissionMetadata","missionBriefing","filepath","contentString","fileInfo","Buffer","toString","convertMissionMetadataToMetadataString","convertToMCQQuestionIfMCQText","possibleMCQText","isMCQText","mcqQuestion","solution","grade","library","external","symbols","globals","maxGrade","xp","maxXp","trimmedText","trim","substring","toLowerCase","onlyQuestionInformation","intermediateObject","studentAnswer","question","option","hint","ControlBarTaskAddButton","numberOfTasks","addNewQuestion","ControlBarTaskDeleteButton","showSimpleConfirmDialog","contents","negativeLabel","positiveIntent","positiveLabel","deleteCurrentQuestion","GitHubMissionCreateDialog","repositoryName","setrepositoryName","useState","Dialog","classes","isOpen","userLogin","target","filesToCreate","resolveDialog","confirmSave","AnchorButton","editorModeOn","setEditorModeOn","allowEdits","node","current","contains","addEventListener","removeEventListener","ref","TextArea","setContent","fill","growVertically","defaultValue","openLinksInNewWindow","Label","changedProperty","newValue","newMetadata","assign","setMissionMetadata","setMissionMetadataWrapper","taskIndex","currentTaskNumber","taskDescriptions","setTaskDescriptions","indexOutOfRange","taskBriefing","taskBriefingSetter","newDescription","newTaskDescriptions","desc","SideContentMarkdownEditor","setTestcaseProgram","setTestcaseExpectedResult","deleteTestcase","testProgram","expectedAnswer","playButton","deleteButton","readOnly","createEditor","AceEditor","fontSize","highlightActiveLine","mode","width","height","autograderTooltip","columnHeader","colClass","colTitle","testcasesHeader","collapseButton","toggleFunc","showsTestPrepend","setTestPrependShown","showsTestPostpend","setTestPostpendShown","showsTestcases","setTestcasesShown","testcases","setTaskTestcases","setTestPrepend","setTestPostpend","setTestcaseProgramSetterCreator","testcaseId","newProgram","newTestcases","setTestcaseExpectedResultSetterCreator","newExpectedResult","addTestcase","slice","concat","convertToTestcaseCard","SideContentEditableTestcaseCard","SideContentTestcaseCard","testcaseCards","createTestCaseButton","toggleTestPrepend","toggleTestPostpend","toggleTestcases","PopoverPosition","Collapse","keepChildrenMounted","defaultMissionBriefing","defaultStarterCode","defaultMissionMetadata","defaultTask","defaultMCQQuestion","GitHubAssessmentWorkspace","dispatch","useDispatch","location","useLocation","getGitHubOctokitInstance","handleEditorValueChange","handleReplEval","handleReplOutputClear","handleUpdateHasUnsavedChanges","handleUpdateWorkspace","setActiveEditorTabIndex","removeEditorTabByIndex","evalEditor","editorTabIndex","newEditorValue","updateEditorValue","evalRepl","clearReplOutput","updateHasUnsavedChanges","updateWorkspace","activeEditorTabIndex","updateActiveEditorTabIndex","removeEditorTab","cachedMissionMetadata","setCachedMissionMetadata","hasUnsavedChangesToMetadata","setHasUnsavedChangesToMetadata","briefingContent","setBriefingContent","cachedBriefingContent","setCachedBriefingContent","hasUnsavedChangesToBriefing","setHasUnsavedChangesToBriefing","cachedTaskList","setCachedTaskList","taskList","setTaskList","hasUnsavedChangesToTasks","setHasUnsavedChangesToTasks","summary","setSummary","setCurrentTaskNumber","isTeacherMode","setIsTeacherMode","isLoading","setIsLoading","currentTaskIsMCQ","setCurrentTaskIsMCQ","setDisplayMCQInEditor","setMCQQuestion","setMissionRepoData","showBriefingOverlay","setShowBriefingOverlay","setSelectedTab","useSideContent","editorTabs","editorTestcases","isRunning","output","replValue","workspaces","githubAssessment","changeStateDueToChangedTaskNumber","useCallback","newTaskNumber","currentTaskList","actualTaskIndex","highlightedLines","breakpoints","programPrependValue","programPostpendValue","setBriefingContentWrapper","newBriefingContent","newMissionMetadata","setTaskListWrapper","newTaskList","setDisplayMCQInEditorWrapper","shouldDisplayMCQ","computedHasUnsavedChanges","setUpWithAssessmentOverview","users","getAuthenticated","authenticatedUser","login","missionData","setUpWithoutAssessmentOverview","briefingOverlay","editCode","taskNumber","editedTaskList","resetToTemplate","originalCode","conductSave","changedFile","newFileContent","githubName","githubEmail","commitMessage","typedMissionRepoData","saveType","checkIfFileCanBeSavedAndGetSaveType","performOverwritingSave","performCreatingSave","conductDelete","performFolderDeletion","saveWithMissionRepoData","filenameToContentMap","foldersToDelete","propertiesToCheck","propertyName","currentValue","onRepoFileName","cachedValue","savedCodeValue","discoverFilesToBeChangedWithMissionRepoData","changedFiles","authUser","email","filename","saveWithoutMissionRepoData","forEach","discoverFilesToBeCreatedWithoutMissionRepoData","dialogResults","promisifyDialog","resolve","createForAuthenticatedUser","fileToCreate","fileContent","dateOfCreation","onClickReset","shouldProceedToChangeTask","confirm","onClickPrevious","activeTaskList","onEditorValueChange","val","onChangeTabs","activeTab","useRef","handleEval","runAllTestcases","nextElement","newTestPrepend","newTestPostpend","sideContentProps","SideContentTaskEditor","SideContentTestcaseEditor","evalTestcase","SideContentMissionEditor","deleteAtIndex","controlBarProps","runButton","ControlBarRunButton","isEntrypointFileDefined","saveButton","resetButton","chapterSelect","nextButton","previousButton","questionView","addTaskButton","deleteTaskButton","showMCQButton","handleMCQSubmit","choiceId","newMCQQuestion","mcq","choice","convertIMCQQuestionToMCQText","convertEditorTabStateToProps","editorSessionId","handleDeclarationNavigate","cursorPosition","navigateToDeclaration","handleEditorUpdateBreakpoints","newBreakpoints","setEditorBreakpoint","handlePromptAutocomplete","row","col","callback","promptAutocomplete","isEditorAutorun","handleBrowseHistoryDown","browseReplHistoryDown","handleBrowseHistoryUp","browseReplHistoryUp","handleReplValueChange","updateReplValue","externalLibrary","ExternalLibraryName","replButtons","clearButton","ControlBarClearButton","ControlBarEvalButton","workspaceProps","handleSideContentHeightChange","heightChange","changeSideContentHeight","mobileWorkspaceProps","sideContent","size","SpinnerSize","MobileWorkspace","Workspace","GitHubClassroomWelcome","marginTop","justifyContent","H2","UL","textAlign","href","RelativeRoutes","GITHUB_LOGIN","GITHUB_WELCOME","GITHUB_EDITOR","getAssessmentTypeLink","GitHubClassroom","locationState","setCourses","setSelectedCourse","setAssessmentTypeOverviews","overview","typeName","results","orgs","listForAuthenticatedUser","per_page","org","replace","fetchAssessmentOverviews","fetchCourses","innerText","navigateToLogin","Navigate","navigateToAssessments","academyClasses","GitHubAssessmentsNavigationBar","loginGitHub","logoutGitHub","Routes","Route","filteredAssessments","assessments","GitHubAssessmentListing","orgLogin","userRepos","courseInfoRepo","courseInfo","assessment","published","prefixLogin","repoPrefix","missionRepo","acceptLink","createdAt","created_at","shortSummary","closeAt","Component"],"sourceRoot":""}